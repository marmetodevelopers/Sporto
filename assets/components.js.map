{"version":3,"file":"components.js","mappings":";;;;;;;;AAAa;AACb,yBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,2BAA2B,4DAA4D;AACvF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,yCAAyC;AACzC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD,SAAkB;;;;;;;;ACpClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAK2B;AACjC,CAAC;AACD,qCAAqC;AACrC;AACA;AACA;AACA;AACA,mBAAmB,8BAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,8BAAmB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8BAAmB;AAC7B;AACA;AACA,UAAU,8BAAmB;AAC7B;AACA;AACA,UAAU,8BAAmB;AAC7B,eAAe,8BAAmB;AAClC,mDAAmD,+BAA+B;AAClF;AACA;AACA;AACA;AACA,UAAU,8BAAmB;AAC7B;AACA,iEAAiE,iBAAiB;AAClF;AACA,0DAA0D,aAAa;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8BAAmB;AAC7B,gCAAgC,8BAAmB;AACnD;AACA;AACA;AACA,WAAW,8BAAmB;AAC9B,kDAAkD,gCAAgC;AAClF,0EAA0E,8BAAmB,4BAA4B,oBAAoB;AAC7I;AACA;AACA;AACA;AACA,UAAU,8BAAmB;AAC7B;AACA,oCAAoC,4BAA4B;AAChE,0CAA0C;AAC1C,WAAW,8BAAmB;AAC9B;AACA;AACA;AACA;AACA,UAAU,8BAAmB,kCAAkC;AAC/D;AACA;AACA,UAAU,8BAAmB;AAC7B;AACA;AACA;AACA,iBAAiB,8BAAmB,CAAC,8BAAmB;AACxD,UAAU;AACV;AACA;AACA;AACA,6CAA6C,+BAAmB;;AAEhE;AACA,+BAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+BAAmB,0DAA0D,2BAA2B;AACvI,+BAA+B,+BAAmB,yDAAyD,0BAA0B;AACrI,+BAA+B,+BAAmB,uDAAuD,wBAAwB;AACjI,+BAA+B,+BAAmB,8DAA8D,+BAA+B;AAC/I,+BAA+B,+BAAmB,gEAAgE,6CAA6C;AAC/J,+BAA+B,+BAAmB,uEAAuE,oDAAoD;AAC7K,+BAA+B,+BAAmB,8DAA8D,+BAA+B;AAC/I,+BAA+B,+BAAmB,qEAAqE,sCAAsC;AAC7J,+BAA+B,+BAAmB,4DAA4D,yCAAyC;AACvJ,+BAA+B,+BAAmB,+DAA+D,4CAA4C;AAC7J,+BAA+B,+BAAmB,8DAA8D,2CAA2C;AAC3J,+BAA+B,+BAAmB,iEAAiE,8CAA8C;AACjK,+BAA+B,+BAAmB,0DAA0D,uCAAuC;AACnJ,+BAA+B,+BAAmB,4DAA4D,yCAAyC;AACvJ,+BAA+B,+BAAmB,yDAAyD,sCAAsC;AACjJ,+BAA+B,+BAAmB,yDAAyD,sCAAsC;AACjJ,+BAA+B,+BAAmB,4DAA4D,yCAAyC;AACvJ,+BAA+B,+BAAmB,2DAA2D,wCAAwC;AACrJ,+BAA+B,+BAAmB,8DAA8D,2CAA2C;AAC3J,+BAA+B,+BAAmB,mDAAmD,oBAAoB;AACzH,iCAAiC,gBAAgB,sBAAsB,OAAO,uDAAuD,mCAAmC,0DAA0D,sFAAsF,iEAAiE,MAAM,iCAAiC,4CAA4C,KAAK;;AAEjd,4CAA4C,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;;;AAGpM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA,OAAO;AACP;AACA,CAAC;;;;;;;AC/xBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY,kEAAkE;AACtF,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD,QAAQ,IAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnrB,aAAa;AACb;AACA;AACA;AACA;AACA,iDAAiD;AACjD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,SAAS;AACT;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,QAAQ;AACxB,iBAAiB;AACjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,QAAQ;AACxB,iBAAiB;AACjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,QAAQ;AACxB,iBAAiB;AACjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,gBAAgB,QAAQ;AACxB,iBAAiB;AACjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,UAAU;AAC1B,iBAAiB;AACjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,gBAAgB,UAAU;AAC1B,iBAAiB;AACjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,UAAU;AAC1B,iBAAiB;AACjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;UCviBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;;;;;;ACAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,6EAA6E,eAAe;AAC5F;AACA,OAAO;AACP;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,UAAU;;AAExB,eAAe,sBAAsB,iBAAiB,WAAW,cAAc,qBAAqB;AACpG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B;AACnF,cAAc,yDAAyD;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;;AAEA,gBAAgB,cAAc;;AAE9B;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB,cAAc;;AAE9B;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB,cAAc;;AAE9B;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB,cAAc;;AAE9B;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB,cAAc;;AAE9B;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,KAAK;;AAErB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA,4CAA4C;;AAE5C;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,YAAY;;AAE5B,6CAA6C;;AAE7C;AACA;AACA;AACA,OAAO;AACP;AACA,gBAAgB,KAAK;;AAErB;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,aAAa;;AAEzB;;AAEA;AACA,8DAA8D,WAAW,sBAAsB,WAAW;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,UAAU;;AAE5B;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;;AAEtC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,4BAA4B;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,MAAM;;AAEvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB,MAAM;;AAEvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB,MAAM;;AAEvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB,MAAM;;AAEvB;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,cAAc,kBAAkB;;AAEhC;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB,UAAU;;AAE1B;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,sBAAsB;;AAElC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,WAAW,oCAAoC;AAC/C;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,gCAAgC;AACjD;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,UAAU,uBAAuB,iBAAiB;AACzI;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kFAAkF,UAAU,2BAA2B,iBAAiB;AACxI;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT;AACA,yBAAyB,gCAAgC;AACzD,KAAK;AACL;AACA;;;ACjqBe;AACf;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/Be;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,yBAAyB;AACpC,iBAAiB;AACjB;AACA;;;ACXe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,cAAc,iEAAiE;AAC/E;AACA;;;AChBe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;;ACnBe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,iGAAiG,8BAA8B;AAC/H;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,iGAAiG,8BAA8B;AAC/H;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE,mBAAmB;AACvF;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA;AACA,cAAc,sDAAsD;AACpE,cAAc,kCAAkC;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,eAAe,EAAE,UAAU;AACtD;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;AACA;AACA,cAAc,QAAQ;;AAEtB;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;ACvLA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA,oEAAoE,iCAAiC;AACrG;;AAEA;AACA;AACA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA,gFAAgF,iCAAiC;AACjH;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;;ACxBe;AACf;AACA;;AAEA,YAAY,2BAA2B;;AAEvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,iBAAiB;;AAE7B;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;AACA;;AAEA;AACA;AACA,aAAa,cAAc,gCAAgC,WAAW,cAAc,eAAe;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AClEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC,cAAc,qBAAqB,SAAS,uCAAuC,cAAc,qBAAqB;AACzK;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;;AC1BA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,gBAAgB,iBAAiB;AACjC;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA,0BAA0B;;AAE1B,yEAAyE,kBAAkB;;AAE3F;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,OAAO;;AAEP;AACA;;AAEA,2EAA2E,yBAAyB;AACpG;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA,2EAA2E,yBAAyB;AACpG;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP,mGAAmG,mEAAmE;AACtK;;AAEA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;;AAEA,qEAAqE,kCAAkC;;AAEvG;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA,qEAAqE,uBAAuB;;AAE5F;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,SAAS;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;;AAEA;;AAEA;AACA;;AAEA;AACA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;;ACtMe;AACf;AACA;;AAEA,YAAY,kBAAkB;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,YAAY,kBAAkB;;AAE9B;AACA;;AAEA;AACA,YAAY,iBAAiB;;AAE7B;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;AACA;;AAEA;AACA;AACA,aAAa,cAAc,iBAAiB,WAAW,cAAc,eAAe;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;;ACxFe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AChBe;AACf;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,eAAe;;AAE/B;;AAEA,4BAA4B,cAAc,SAAS,yBAAyB,EAAE,yCAAyC;AACvH,OAAO;AACP;;AAEA;AACA;AACA,gBAAgB,eAAe;;AAE/B;;AAEA,4BAA4B,cAAc,SAAS,yBAAyB,EAAE,yCAAyC;AACvH,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yBAAyB,cAAc,eAAe,GAAG,aAAa;;AAEzF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;;;;;AC/DqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mDAAmD,uBAAQ;AAC3D;AACA;AACA;AACA;AACA,KAAK;AACL,iDAAiD,qDAAqD;AACtG;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,MAAM;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,MAAM;AAClB;AACA;;AAEA,+DAA+D,qCAAqC;;AAEpG;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA,YAAY,MAAM;;AAElB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,2DAA2D,UAAU,gBAAgB;AACrF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sEAAsE,uBAAuB;AAC7F;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gGAAgG,uBAAuB;;AAEvH;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AC5OA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2DAA2D,UAAU,qCAAqC;AAC1G;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+DAA+D,UAAU,yCAAyC;AAClH;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA,OAAO;;AAEP;AACA,+DAA+D,kBAAkB;AACjF;AACA,OAAO;;AAEP;AACA,+DAA+D,kBAAkB;AACjF;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChDqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mDAAmD,uBAAQ;AAC3D,iDAAiD,sDAAsD;AACvG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,2DAA2D,UAAU,gBAAgB;AACrF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wEAAwE,yBAAyB;AACjG;AACA;AACA,KAAK;;AAEL;AACA;AACA,kGAAkG,yBAAyB;;AAE3H;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AC1KA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,eAAe;;AAE/B;;AAEA,4BAA4B,cAAc,SAAS,yBAAyB,EAAE,yCAAyC;AACvH,OAAO;AACP;;AAEA;AACA;AACA,gBAAgB,eAAe;;AAE/B;;AAEA,4BAA4B,cAAc,SAAS,yBAAyB,EAAE,yCAAyC;AACvH,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB,cAAc,eAAe,GAAG,aAAa;;AAEzF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;;AC9EA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA,mBAAmB,gCAAgC,cAAc,UAAU,cAAc,UAAU;AACnG;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;;AC7CqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,8BAA8B,4CAA4C;AAC1E,YAAY;AACZ;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,4BAA4B,4CAA4C;AACxE,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,oDAAoD,uBAAQ;AAC5D;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW;AACpB,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,kEAAkE;AACnF,WAAW,MAAM;AACjB,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA,wEAAwE,MAAM;;AAE9E;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA,8BAA8B,OAAO;AACrC,0EAA0E,EAAE;;AAE5E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,OAAO,6DAA6D,WAAW;AACtI;;AAEA;;AAEA,yDAAyD,UAAU,2BAA2B,iBAAiB;AAC/G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,wDAAwD,0BAA0B;AAClF,8CAA8C,iBAAiB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;;AAEA;AACA,kCAAkC,qBAAqB;AACvD;AACA;AACA,iBAAiB,kEAAkE;AACnF,WAAW,MAAM;AACjB,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtQA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,MAAM;;AAEN;AACA;AACA,WAAW,QAAQ,UAAU,0BAA0B;AACvD;AACA;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY,4BAA4B;AACxC,YAAY,4BAA4B;AACxC,YAAY,kCAAkC;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4DAA4D,qBAAqB;AACjF;;AAEA;AACA,2DAA2D,qBAAqB;AAChF;AACA;AACA;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,sDAAsD,8BAA8B;;AAEpF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,6CAA6C;AACvE,QAAQ;AACR,0BAA0B,4BAA4B;AACtD;AACA;;AAEA;;AAEA;AACA;AACA,gBAAgB,SAAS;AACzB,4DAA4D,OAAO;AACnE;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,kEAAkE,2BAA2B;;AAE7F,cAAc,cAAc;AAC5B,sDAAsD,YAAY;;AAElE;AACA,KAAK;;AAEL;AACA,cAAc,cAAc;AAC5B,sDAAsD,YAAY;AAClE,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,gBAAgB,SAAS;AACzB,4DAA4D,OAAO;AACnE;;AAEA,oEAAoE,2BAA2B;AAC/F,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,QAAQ;;AAEtB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA,iEAAiE,qCAAqC;;AAEtG;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,oEAAoE,UAAU;;AAE9E;AACA,2BAA2B,sCAAsC;AACjE,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA,oEAAoE,wBAAwB;AAC5F,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;;ACnOe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,sDAAsD;AACxG;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6DAA6D,eAAe;AAC5E,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,6CAA6C,KAAK,+BAA+B;AAC9F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sDAAsD,mBAAmB;AACzE;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;;AClPA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA,4DAA4D,eAAe;AAC3E;AACA;;AAEA;AACA,gEAAgE,eAAe;AAC/E;AACA;AACA;;;;;;AChBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;;;AAGA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,SAAS;AACxB;AACA,eAAe,UAAU;AACzB;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA,gBAAgB,SAAS;AACzB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA,CAAC,EAAE;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAE+D;;;AC5XX;AACN;AACgB,CAAC;;AAE/D;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,2BAAY;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,UAAU,GAAG,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,yBAAyB,qBAAqB,GAAG,yBAAyB;AAC1E;;AAEA;;AAEA;AACA,kBAAkB,IAAI;AACtB,gBAAgB,eAAe;;AAE/B;AACA,mDAAmD,aAAa;AAChE;AACA;;AAEA;;AAEA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,kBAAkB,IAAI;AACtB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;ACtO8C;AACoB,CAAC;;AAEnE;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,sBAAsB,2BAAY;;AAElC,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;;;ACjFsE;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA,OAAO;AACP;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA,uEAAuE,UAAU,mCAAmC,iBAAiB;AACrI;AACA;;AAEA;AACA,2EAA2E,eAAe;AAC1F;AACA;AACA;;;AClBqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iDAAiD,uBAAQ;AACzD;;AAEA;AACA,sEAAsE,2CAA2C,GAAG,kBAAkB;;AAEtI;AACA,oCAAoC,mDAAmD;;AAEvF;;AAEA;AACA,KAAK;;AAEL,uDAAuD,uBAAQ;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+CAA+C;AACjF;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7Ke;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kDAAkD,iCAAiC;AACnF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;ACjEqC;AACyB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA,+CAA+C,uBAAQ,SAAS,0BAA0B;AAC1F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA,2CAA2C,uBAAQ;;AAEnD;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uEAAuE,yBAAyB;AAChG;AACA;;AAEA;AACA,+DAA+D,aAAa;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;ACtLA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4DAA4D,2CAA2C;;AAEvG;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,oBAAoB,qBAAqB;AACzC,kBAAkB,gBAAgB;AAClC,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET,mDAAmD,eAAe;;AAElE;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;;ACpKA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;;;ACZe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,YAAY;;AAEtC;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,WAAW;AACX,SAAS;AACT;AACA;AACA;;;ACxCe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;ACjCe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0EAA0E,eAAe;AACzF;AACA,OAAO;AACP;AACA;AACA;;;AChBe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8FAA8F,QAAQ;;AAEtG;AACA;AACA,iCAAiC,oBAAoB;AACrD;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9BA,SAAS,uCAAc;AACvB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2EAA2E,yBAAyB;AACpG;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,uCAAc;AACxB;AACA,OAAO;;AAEP;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA,gBAAgB,iBAAiB;AACjC;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA,uCAAuC;;AAEvC,yEAAyE,+BAA+B;;AAExG;AACA,UAAU,uCAAc;AACxB;AACA,OAAO;;AAEP;AACA;;AAEA,2EAA2E,yBAAyB;AACpG;AACA;AACA;;AAEA;AACA,UAAU,uCAAc;AACxB;AACA,OAAO;;AAEP;AACA;;AAEA,2EAA2E,yBAAyB;AACpG;AACA;AACA;;AAEA;AACA,UAAU,uCAAc;AACxB;AACA,OAAO;;AAEP,mGAAmG,mEAAmE;AACtK;;AAEA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;;AAEA,qEAAqE,kCAAkC;;AAEvG;AACA;AACA,MAAM,uCAAc;;AAEpB;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,qEAAqE,uBAAuB;AAC5F;AACA,2FAA2F,uBAAuB;;AAElH;;AAEA;AACA,MAAM,uCAAc;;AAEpB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,SAAS;AACrC;AACA;;AAEA;AACA,QAAQ,uCAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;;AAEA;;AAEA;AACA;;AAEA;AACA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;;ACjOe;AACf;AACA;;AAEA,YAAY,2BAA2B;;AAEvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,YAAY,kBAAkB;;AAE9B;AACA;;AAEA;AACA,YAAY,iBAAiB;;AAE7B;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;AACA;;AAEA;AACA;AACA,aAAa,cAAc,iBAAiB,WAAW,cAAc,eAAe;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,uCAAuC,aAAa;AACpD,OAAO;;AAEP;AACA;AACA,gBAAgB,cAAc;AAC9B,mDAAmD,aAAa;AAChE,OAAO;AACP;;AAEA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,sDAAsD,aAAa;AACnE,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,uEAAuE,MAAM;;AAE7E;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AC/EA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,kEAAkE;AACvJ;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA,2BAA2B,6CAA6C;AACxE;;AAEA;AACA;AACA;AACA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;;AAEtB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,2CAA2C,aAAa;AACxD;AACA;;;AC9Fe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC,OAAO;AACP;AACA;AACA;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;;;ACPA,mBAAmB,mBAAO,CAAC,GAAa;AACxC,cAAc,mBAAO,CAAC,GAAO;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;ACtEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AChBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA,6BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,2BAA2B,qBAAqB;AAChD,GAAG,gBAAgB,qBAAqB;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;;AAE3B;AACA,KAAK;AACL;;AAEA;AACA;;AAEe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,6EAA6E,eAAe;AAC5F;AACA,OAAO;AACP;AACA;AACA;;;AC5Ie;AACf;AACA;;AAEA;;AAEA;;AAEA;;AAEA,gCAAgC;;AAEhC;AACA;AACA,YAAY,sBAAsB;;AAElC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;ACxCe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AC5Be;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AClCe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;ACxDe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,oCAAoC;AAC/C;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,gCAAgC;AACjD;AACA;AACA,2BAA2B,wEAAwE;AACnG,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,UAAU,uBAAuB,iBAAiB;AACzI;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA,kFAAkF,UAAU,2BAA2B,iBAAiB;AACxI;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT;AACA,yBAAyB,sBAAsB;AAC/C,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA,KAAK;AACL;AACA;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,4EAA4E,kBAAkB;;AAE9F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,4EAA4E,kBAAkB;;AAE9F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;;AAEA,0EAA0E,cAAc;;AAExF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;;AAE9B;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AClEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,qBAAqB;AACvC;AACA;;AAEA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,oBAAoB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gDAAgD;;AAEhD,kBAAkB,4BAA4B;AAC9C,oBAAoB,6BAA6B;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAME;;;AC9LyB;;AAEZ;AACf;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;;AAE9B;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,iCAAiC,uBAAuB;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;AACA,iCAAiC,uBAAuB;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,oBAAoB,6BAA6B;AACjD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AC1He;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,iBAAiB;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA,8CAA8C,UAAU,0DAA0D;;AAElH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;;AC9De;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA,8DAA8D,QAAQ;AACtE;;AAEA;AACA;AACA,SAAS;;AAET;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qCAAqC;AAChE,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,YAAY,mBAAmB;AAC/B,oBAAoB,0BAA0B;;AAE9C;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA,yBAAyB,qBAAqB;AAC9C,uEAAuE,MAAM;AAC7E;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,0BAA0B;;AAEhD;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjIA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,mBAAmB,gCAAgC,cAAc,UAAU,cAAc,qBAAqB;AAC9G;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,YAAY;AAC1B;;AAEA;AACA;AACA;;AAEA,gEAAgE,WAAW;AAC3E,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gEAAgE,UAAU;AAC1E;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA,gEAAgE,UAAU;AAC1E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;ACvKe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,iEAAiE,UAAU,oFAAoF;AAC/J;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,sCAAsC,KAAK;AAC3C,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5EA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA,4BAA4B,KAAK,MAAM,WAAW,GAAG,YAAY;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kCAAkC;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA,4BAA4B,KAAK;AACjC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB,aAAa;AACb;AACe,mCAAmC;AAClD;;AAEA;AACA,eAAe,UAAU;AACzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;;;AClIA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACe;AACf;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACe;AACf,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;ACvBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;;AAEe;AACf;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,aAAa;AACb;AACA;AACA,CAAQ;AACR;AACA;AACA;AACA;;;ACrBoC;AACU;AACI;AACf;;AAEnC;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB;AACA;AACA;AACA,sCAAsC,gBAAgB;AACtD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,SAAS;AACvB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,SAAS;AACzB;AACA,MAAM;AACN;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,SAAS;AACzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,IAAI;AAChD,IAAI;AACJ,sCAAsC,KAAK,EAAE,QAAQ;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM,OAAO;AACb;;AAEA,IAAI,OAAO;AACX,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,MAAM,OAAO;;AAEb;AACA;;AAEA;AACA,eAAe,cAAc;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;;AC1JoC;AACA;AACD;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB;AACe;AACf;AACA,EAAE,OAAO;;AAET,eAAe,SAAS;;AAExB;AACA;AACA;AACA;;AAEA,IAAI,SAAS;AACb;AACA;;;AC5BoC;AACA;AACD;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB;AACe;AACf;AACA,EAAE,OAAO;;AAET,eAAe,SAAS;;AAExB;AACA;AACA;AACA;AACA;;AAEA,IAAI,SAAS;AACb;AACA;;;AC3BA;AACA;AACA,WAAW,aAAa;AACxB,aAAa;AACb;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrB0B;AACI;AACQ;;AAEtC;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA,cAAc,QAAQ;AACtB,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACe,2DAA2D;AAC1E;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI;AACZ;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;;AAEA,sBAAsB,gBAAgB;AACtC;AACA;AACA,YAAY,UAAU;AACtB,UAAU,IAAI;AACd,UAAU;AACV;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA,sBAAsB,gBAAgB,KAAK,MAAM;AACjD,KAAK;;AAEL;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC,KAAK;;AAEL;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC,QAAQ,IAAI;AACZ;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;ACrK0B;AACP;;AAEnB;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,kDAAe,KAAK,EAAC;;AAErB;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA,SAAS,gBAAI;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2DAA2D;AAC3D;AACA,mBAAmB,IAAI;AACvB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;ACtGyC;;AAEzC;AACA,gBAAS;;AAEM;AACf;AACA;;AAEA,IAAI,iBAAU;AACd;;AAEA;AACA,IAAI,mBAAY;AAChB;AACA;;;ACfqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;;AAE7B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,QAAQ,uBAAQ;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,YAAY;AACjG;AACA;;AAEA;AACA;AACA,yEAAyE,WAAW;AACpF,aAAa;AACb;;AAEA;AACA;AACA,SAAS;;AAET,6DAA6D,UAAU,kBAAkB,iBAAiB;AAC1G;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;;AAEA,aAAa,uCAAuC;AACpD;AACA,iBAAiB,sGAAsG;AACvH;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,wDAAwD,4BAA4B;;AAEpF,gDAAgD,mBAAmB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,sGAAsG;AACvH,6BAA6B,sBAAsB;AACnD,KAAK;AACL;AACA;;;AChUA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA,YAAY,cAAc;;AAE1B;AACA,2CAA2C,YAAY,sBAAsB,YAAY;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;AClGA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,8BAA8B;AACtF,oEAAoE,8CAA8C;;AAElH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E,aAAa;AACzF,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,mGAAmG,aAAa;AAChH;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;;AC5NA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA,iDAAiD,iDAAiD;AAClG;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,GAAG;AAChB,aAAa,GAAG;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA,YAAY,UAAU;;AAEtB;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA,yDAAyD,8BAA8B;AACvF;AACA,iDAAiD,sCAAsC;AACvF;;AAEA;AACA;AACA;AACA,SAAS,sBAAsB,IAAI;AACnC;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnCqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,+CAA+C,uBAAQ,SAAS,0BAA0B;AAC1F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT,OAAO;;AAEP;;AAEA;AACA,2CAA2C,uBAAQ;AACnD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uEAAuE,yBAAyB;AAChG;;AAEA;AACA,+DAA+D,aAAa;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;ACpGsI;AAChB;AACb;AACA;AACU;AACH;AACe;AACf;AACwB;AACtB;AACI;AACyB;AAC7B;AACzB;AACgB;AACL;AACW;AACoB;AACG;AACA;AACpB;AACY;AACgB;AAChD;AACJ;AACe;AACe;AAClB;AACE;AACmB;AACJ;AACR;AACzB;AACc;AACK;AACpB;AACoB;AACyB;AACR;AACS;AAC7B;AAC0B;AAC1B;AACsC;AACzB;AACV;AACoB;AACM;AACL;AACjC;AACS;AAC+B;AACpB;AACP;AACiC;AAC/B;AACN;AACS;AACT;AACG;AACgC;AAChC;AACS;AACG;AACA;AAC7B;AAC2C;AAClB;AACS;AACX;AACS;AAC3B;AACS;AACL;AACT;AACiB;AACA;AACO;AAChH8E,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAChF,oBAAoB,EAAE,wBAAwB,CAAC;AACxE8E,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC/E,cAAc,EAAE,mBAAmB,CAAC;AAC7D6E,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC9E,WAAW,EAAE,eAAe,CAAC;AACtD4E,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC7E,WAAW,EAAE,cAAc,CAAC;AACrD2E,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC5E,eAAe,EAAE,mBAAmB,CAAC;AAC9D0E,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC3E,cAAc,EAAE,kBAAkB,CAAC;AAC5DyE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC1E,mBAAmB,EAAE,uBAAuB,CAAC;AACtEwE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACzE,cAAc,EAAE,iBAAiB,CAAC;AAC3DuE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACxE,sBAAsB,EAAE,yBAAyB,CAAC;AAC3EsE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACvE,cAAc,EAAE,iBAAiB,CAAC;AAC3DqE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACtE,gBAAgB,EAAE,mBAAmB,CAAC;AAC/DoE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACrE,qBAAqB,EAAE,wBAAwB,CAAC;AACzEmE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACpE,cAAc,EAAE,iBAAiB,CAAC;AAC3DkE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACnE,OAAO,EAAE,SAAS,CAAC;AAC5CiE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAClE,WAAW,EAAE,eAAe,CAAC;AACtDgE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACjE,UAAU,EAAE,aAAa,CAAC;AACnD+D,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAChE,aAAa,EAAE,gBAAgB,CAAC;AACzD8D,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC/D,mBAAmB,EAAE,uBAAuB,CAAC;AACtE6D,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC9D,oBAAoB,EAAE,wBAAwB,CAAC;AACxE4D,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC7D,oBAAoB,EAAE,wBAAwB,CAAC;AACxE2D,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC5D,cAAc,EAAE,iBAAiB,CAAC;AAC3D0D,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC3D,kBAAkB,EAAE,sBAAsB,CAAC;AACpEyD,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC1D,sBAAsB,EAAE,2BAA2B,CAAC;AAC7EwD,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACzD,QAAQ,EAAE,WAAW,CAAC;AAC/CuD,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACxD,IAAI,EAAE,MAAM,CAAC;AACtCsD,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACvD,WAAW,EAAE,cAAc,CAAC;AACrDqD,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACtD,gBAAgB,EAAE,mBAAmB,CAAC;AAC/DoD,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACrD,UAAU,EAAE,aAAa,CAAC;AACnDmD,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACpD,YAAY,EAAE,eAAe,CAAC;AACvDkD,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACnD,iBAAiB,EAAE,oBAAoB,CAAC;AACjEiD,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAClD,iBAAiB,EAAE,oBAAoB,CAAC;AACjEgD,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACjD,aAAa,EAAE,iBAAiB,CAAC;AAC1D+C,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAChD,MAAM,EAAE,QAAQ,CAAC;AAC1C8C,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC/C,UAAU,EAAE,YAAY,CAAC;AAClD6C,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC9C,WAAW,EAAE,cAAc,CAAC;AACrD4C,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC7C,KAAK,EAAE,OAAO,CAAC;AACxC2C,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC5C,WAAW,EAAE,cAAc,CAAC;AACrD0C,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC3C,sBAAsB,EAAE,2BAA2B,CAAC;AAC7EyC,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC1C,gBAAgB,EAAE,oBAAoB,CAAC;AAChEwC,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACzC,mBAAmB,EAAE,uBAAuB,CAAC;AACtEuC,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACxC,UAAU,EAAE,aAAa,CAAC;AACnDsC,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACvC,kBAAkB,EAAE,sBAAsB,CAAC;AACpEqC,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACtC,UAAU,EAAE,aAAa,CAAC;AACnDoC,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACrC,sBAAsB,EAAE,0BAA0B,CAAC;AAC5EmC,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACpC,eAAe,EAAE,kBAAkB,CAAC;AAC7DkC,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACnC,WAAW,EAAE,cAAc,CAAC;AACrDiC,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAClC,iBAAiB,EAAE,qBAAqB,CAAC;AAClEgC,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACjC,mBAAmB,EAAE,uBAAuB,CAAC;AACtE+B,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAChC,kBAAkB,EAAE,sBAAsB,CAAC;AACpE8B,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC/B,OAAO,EAAE,UAAU,CAAC;AAC7C6B,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC9B,UAAU,EAAE,aAAa,CAAC;AACnD4B,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC7B,mBAAmB,EAAE,wBAAwB,CAAC;AACvE2B,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC5B,aAAa,EAAE,iBAAiB,CAAC;AAC1D0B,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC3B,YAAY,EAAE,cAAc,CAAC;AACtDyB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC1B,qBAAqB,EAAE,0BAA0B,CAAC;AAC3EwB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACzB,YAAY,EAAE,eAAe,CAAC;AACvDuB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACxB,UAAU,EAAE,aAAa,CAAC;AACnDsB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACvB,aAAa,EAAE,gBAAgB,CAAC;AACzDqB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACtB,UAAU,EAAE,aAAa,CAAC;AACnDoB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACrB,WAAW,EAAE,cAAc,CAAC;AACrDmB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACpB,qBAAqB,EAAE,yBAAyB,CAAC;AAC1EkB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACnB,WAAW,EAAE,cAAc,CAAC;AACrDiB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAClB,cAAc,EAAE,iBAAiB,CAAC;AAC3DgB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACjB,eAAe,EAAE,kBAAkB,CAAC;AAC7De,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAChB,eAAe,EAAE,kBAAkB,CAAC;AAC7Dc,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACf,MAAM,EAAE,QAAQ,CAAC;AAC1Ca,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACd,mBAAmB,EAAE,uBAAuB,CAAC;AACtEY,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACb,aAAa,EAAE,iBAAiB,CAAC;AAC1DW,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACZ,gBAAgB,EAAE,oBAAoB,CAAC;AAChEU,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACX,aAAa,EAAE,gBAAgB,CAAC;AACzDS,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACV,gBAAgB,EAAE,mBAAmB,CAAC;AAC/DQ,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACT,OAAO,EAAE,UAAU,CAAC;AAC7CO,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACR,UAAU,EAAE,aAAa,CAAC;AACnDM,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACP,SAAS,EAAE,WAAW,CAAC;AAChDK,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACN,MAAM,EAAE,QAAQ,CAAC;AAC1CI,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACL,WAAW,EAAE,cAAc,CAAC;AACrDG,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACJ,WAAW,EAAE,cAAc,CAAC;AACrDE,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACH,cAAc,EAAE,iBAAiB,CAAC,C","sources":["webpack://tailor/./node_modules/@pixelunion/events/dist/EventHandler.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/matches.js","webpack://tailor/./node_modules/just-debounce/index.js","webpack://tailor/./node_modules/scroll-lock/dist/scroll-lock.js","webpack://tailor/./node_modules/isbot/index.js","webpack://tailor/webpack/bootstrap","webpack://tailor/webpack/runtime/compat get default export","webpack://tailor/webpack/runtime/define property getters","webpack://tailor/webpack/runtime/hasOwnProperty shorthand","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/header-password-drawer/default/header-password-drawer.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/add-the-look-item/default/add-the-look-item.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/shop-the-look/default/shop-the-look.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/video-player/default/video-player.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/blocks/block-promo-image/default/block-promo-image.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/blocks/block-promo-text/default/block-promo-text.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/blocks/block-promo-editorial/default/block-promo-editorial.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/promotions-grid/default/promotions-grid.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/product-recommendations/default/product-recommendations.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-details/default/product-details.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/product-quickshop/default/product-quickshop.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/blocks/block-complementary-products/default/block-complementary-products.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-gallery/default/product-gallery.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/product/default/product.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/page-age-gate/default/page-age-gate.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/main-search/default/main-search.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/drawer-filters/default/drawer-filters.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/filters-active-mobile/default/filters-active-mobile.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/filters-buttons-mobile/default/filters-buttons-mobile.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/faceted-filters-mobile/default/faceted-filters-mobile.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/faceted-filters/default/faceted-filters.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/main-collection-grid/default/main-collection-grid.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-cross-sell-slider/default/product-cross-sell-slider.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/main-cart/default/main-cart.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/main-blog/default/main-blog.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/image-banner/two-image/image-banner.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/navigation-drawer/default/navigation-drawer.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/live-search/default/live-search.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/blocks/block-meganav/default/block-meganav.js","webpack://tailor/./node_modules/@pixelunion/animations/dist/animations.es.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/navigation-desktop/default/scripts/navigation-desktop-parent.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/navigation-desktop/default/scripts/navigation-desktop-menu.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/navigation-desktop/default/navigation-desktop.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/blocks/block-announcement/default/block-announcement.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/header-toolbar/default/header-toolbar.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/header/default/scripts/liveSearchTakeover.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/header/default/header.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/disclosure/default/disclosure.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/cross-border/default/cross-border.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/share/default/share.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-page/default/product-page.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-page-drawer/default/product-page-drawer.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-size-guide/default/product-size-guide.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-gallery-modal/default/product-gallery-modal.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/media-model/default/media-model.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/media-external-video/default/media-external-video.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/media-video/default/media-video.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/featured-product-gallery/default/featured-product-gallery.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/featured-product/default/featured-product.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-card/default/product-card.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-card-slider/default/product-card-slider.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/customer-address-form/default/customer-address-form.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/cart-drawer-template/default/cart-drawer-template.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/age-gate/default/age-gate.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/button-text/default/button-text.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/surface-pick-up-drawer/default/surface-pick-up-drawer.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/surface-pick-up/default/surface-pick-up.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/notification/default/notification.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/gift-card-recipient-form/default/gift-card-recipient-form.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/button-action/default/button-action.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/buy-buttons/default/buy-buttons.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/input-fieldset/default/input-fieldset.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/input-radio/default/input-radio.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/input-swatch/default/input-swatch.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/option-selectable-boxes/default/option-selectable-boxes.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/input-select/default/input-select.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/option-dropdown/default/option-dropdown.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/options-selector/default/scripts/options.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/options-selector/default/options-selector.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/variant-selector/default/variant-selector.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/button/default/button.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-card-swatches/default/product-card-swatches.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/cross-sell-card/default/cross-sell-card.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/product-cross-sell/default/product-cross-sell.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/input-textarea/default/input-textarea.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/quantity-selector/default/quantity-selector.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/parseItem.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/roundSize.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/getElementSize.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/supportedDensity.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/events.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/loadImage.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/load.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/update.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/inViewport.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/rimg.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/scripts/rimgShopify.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/lazy-img/default/lazy-img.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/cart-drawer/default/cart-drawer.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/quickshop/default/quickshop.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/flyout/default/flyout.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/drawer-modal/default/drawer-modal.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/components/site-overlay/default/site-overlay.js","webpack://tailor/./node_modules/@pixelunion/shopify-components/sections/header-password/default/header-password.js","webpack://tailor/../../../../../tmp/paskit-PJMHiI/scripts/components.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar EventHandler = /** @class */ (function () {\n    function EventHandler() {\n        this.events = [];\n    }\n    // According to MDN, \"If not specified, useCapture defaults to false.\",\n    // so we'll follow suit and set the default value of the `options`/`useCapture` parameter to `false`.\n    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#parameters\n    EventHandler.prototype.register = function (el, event, listener, options) {\n        if (options === void 0) { options = false; }\n        if (!el || !event || !listener)\n            return null;\n        this.events.push({ el: el, event: event, listener: listener, options: options });\n        el.addEventListener(event, listener, options);\n        return { el: el, event: event, listener: listener, options: options };\n    };\n    EventHandler.prototype.unregister = function (_a) {\n        var el = _a.el, event = _a.event, listener = _a.listener, options = _a.options;\n        if (!el || !event || !listener)\n            return null;\n        this.events = this.events.filter(function (e) { return el !== e.el\n            || event !== e.event\n            || listener !== e.listener; });\n        el.removeEventListener(event, listener, options);\n        return { el: el, event: event, listener: listener, options: options };\n    };\n    EventHandler.prototype.unregisterAll = function () {\n        this.events.forEach(function (_a) {\n            var el = _a.el, event = _a.event, listener = _a.listener, options = _a.options;\n            return el.removeEventListener(event, listener, options);\n        });\n        this.events = [];\n    };\n    return EventHandler;\n}());\nexports[\"default\"] = EventHandler;\n","/**\n * Polyfill for Element.matches().\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n */\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector ||\n    function(s) {\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n          i = matches.length;\n      while (--i >= 0 && matches.item(i) !== this) {}\n      return i > -1;\n    };\n}\n","module.exports = debounce;\n\nfunction debounce(fn, delay, atStart, guarantee) {\n  var timeout;\n  var args;\n  var self;\n\n  return function debounced() {\n    self = this;\n    args = Array.prototype.slice.call(arguments);\n\n    if (timeout && (atStart || guarantee)) {\n      return;\n    } else if (!atStart) {\n      clear();\n\n      timeout = setTimeout(run, delay);\n      return timeout;\n    }\n\n    timeout = setTimeout(clear, delay);\n    fn.apply(self, args);\n\n    function run() {\n      clear();\n      fn.apply(self, args);\n    }\n\n    function clear() {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"scrollLock\"] = factory();\n\telse\n\t\troot[\"scrollLock\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/tools.js\nvar argumentAsArray = function argumentAsArray(argument) {\n  return Array.isArray(argument) ? argument : [argument];\n};\nvar isElement = function isElement(target) {\n  return target instanceof Node;\n};\nvar isElementList = function isElementList(nodeList) {\n  return nodeList instanceof NodeList;\n};\nvar eachNode = function eachNode(nodeList, callback) {\n  if (nodeList && callback) {\n    nodeList = isElementList(nodeList) ? nodeList : [nodeList];\n\n    for (var i = 0; i < nodeList.length; i++) {\n      if (callback(nodeList[i], i, nodeList.length) === true) {\n        break;\n      }\n    }\n  }\n};\nvar throwError = function throwError(message) {\n  return console.error(\"[scroll-lock] \".concat(message));\n};\nvar arrayAsSelector = function arrayAsSelector(array) {\n  if (Array.isArray(array)) {\n    var selector = array.join(', ');\n    return selector;\n  }\n};\nvar nodeListAsArray = function nodeListAsArray(nodeList) {\n  var nodes = [];\n  eachNode(nodeList, function (node) {\n    return nodes.push(node);\n  });\n  return nodes;\n};\nvar findParentBySelector = function findParentBySelector($el, selector) {\n  var self = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var $root = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : document;\n\n  if (self && nodeListAsArray($root.querySelectorAll(selector)).indexOf($el) !== -1) {\n    return $el;\n  }\n\n  while (($el = $el.parentElement) && nodeListAsArray($root.querySelectorAll(selector)).indexOf($el) === -1) {\n    ;\n  }\n\n  return $el;\n};\nvar elementHasSelector = function elementHasSelector($el, selector) {\n  var $root = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n  var has = nodeListAsArray($root.querySelectorAll(selector)).indexOf($el) !== -1;\n  return has;\n};\nvar elementHasOverflowHidden = function elementHasOverflowHidden($el) {\n  if ($el) {\n    var computedStyle = getComputedStyle($el);\n    var overflowIsHidden = computedStyle.overflow === 'hidden';\n    return overflowIsHidden;\n  }\n};\nvar elementScrollTopOnStart = function elementScrollTopOnStart($el) {\n  if ($el) {\n    if (elementHasOverflowHidden($el)) {\n      return true;\n    }\n\n    var scrollTop = $el.scrollTop;\n    return scrollTop <= 0;\n  }\n};\nvar elementScrollTopOnEnd = function elementScrollTopOnEnd($el) {\n  if ($el) {\n    if (elementHasOverflowHidden($el)) {\n      return true;\n    }\n\n    var scrollTop = $el.scrollTop;\n    var scrollHeight = $el.scrollHeight;\n    var scrollTopWithHeight = scrollTop + $el.offsetHeight;\n    return scrollTopWithHeight >= scrollHeight;\n  }\n};\nvar elementScrollLeftOnStart = function elementScrollLeftOnStart($el) {\n  if ($el) {\n    if (elementHasOverflowHidden($el)) {\n      return true;\n    }\n\n    var scrollLeft = $el.scrollLeft;\n    return scrollLeft <= 0;\n  }\n};\nvar elementScrollLeftOnEnd = function elementScrollLeftOnEnd($el) {\n  if ($el) {\n    if (elementHasOverflowHidden($el)) {\n      return true;\n    }\n\n    var scrollLeft = $el.scrollLeft;\n    var scrollWidth = $el.scrollWidth;\n    var scrollLeftWithWidth = scrollLeft + $el.offsetWidth;\n    return scrollLeftWithWidth >= scrollWidth;\n  }\n};\nvar elementIsScrollableField = function elementIsScrollableField($el) {\n  var selector = 'textarea, [contenteditable=\"true\"]';\n  return elementHasSelector($el, selector);\n};\nvar elementIsInputRange = function elementIsInputRange($el) {\n  var selector = 'input[type=\"range\"]';\n  return elementHasSelector($el, selector);\n};\n// CONCATENATED MODULE: ./src/scroll-lock.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disablePageScroll\", function() { return disablePageScroll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enablePageScroll\", function() { return enablePageScroll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getScrollState\", function() { return getScrollState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearQueueScrollLocks\", function() { return clearQueueScrollLocks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTargetScrollBarWidth\", function() { return scroll_lock_getTargetScrollBarWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCurrentTargetScrollBarWidth\", function() { return scroll_lock_getCurrentTargetScrollBarWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPageScrollBarWidth\", function() { return getPageScrollBarWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCurrentPageScrollBarWidth\", function() { return getCurrentPageScrollBarWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addScrollableTarget\", function() { return scroll_lock_addScrollableTarget; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeScrollableTarget\", function() { return scroll_lock_removeScrollableTarget; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addScrollableSelector\", function() { return scroll_lock_addScrollableSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeScrollableSelector\", function() { return scroll_lock_removeScrollableSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addLockableTarget\", function() { return scroll_lock_addLockableTarget; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addLockableSelector\", function() { return scroll_lock_addLockableSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setFillGapMethod\", function() { return scroll_lock_setFillGapMethod; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addFillGapTarget\", function() { return scroll_lock_addFillGapTarget; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeFillGapTarget\", function() { return scroll_lock_removeFillGapTarget; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addFillGapSelector\", function() { return scroll_lock_addFillGapSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeFillGapSelector\", function() { return scroll_lock_removeFillGapSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"refillGaps\", function() { return refillGaps; });\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar FILL_GAP_AVAILABLE_METHODS = ['padding', 'margin', 'width', 'max-width', 'none'];\nvar TOUCH_DIRECTION_DETECT_OFFSET = 3;\nvar state = {\n  scroll: true,\n  queue: 0,\n  scrollableSelectors: ['[data-scroll-lock-scrollable]'],\n  lockableSelectors: ['body', '[data-scroll-lock-lockable]'],\n  fillGapSelectors: ['body', '[data-scroll-lock-fill-gap]', '[data-scroll-lock-lockable]'],\n  fillGapMethod: FILL_GAP_AVAILABLE_METHODS[0],\n  //\n  startTouchY: 0,\n  startTouchX: 0\n};\nvar disablePageScroll = function disablePageScroll(target) {\n  if (state.queue <= 0) {\n    state.scroll = false;\n    scroll_lock_hideLockableOverflow();\n    fillGaps();\n  }\n\n  scroll_lock_addScrollableTarget(target);\n  state.queue++;\n};\nvar enablePageScroll = function enablePageScroll(target) {\n  state.queue > 0 && state.queue--;\n\n  if (state.queue <= 0) {\n    state.scroll = true;\n    scroll_lock_showLockableOverflow();\n    unfillGaps();\n  }\n\n  scroll_lock_removeScrollableTarget(target);\n};\nvar getScrollState = function getScrollState() {\n  return state.scroll;\n};\nvar clearQueueScrollLocks = function clearQueueScrollLocks() {\n  state.queue = 0;\n};\nvar scroll_lock_getTargetScrollBarWidth = function getTargetScrollBarWidth($target) {\n  var onlyExists = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (isElement($target)) {\n    var currentOverflowYProperty = $target.style.overflowY;\n\n    if (onlyExists) {\n      if (!getScrollState()) {\n        $target.style.overflowY = $target.getAttribute('data-scroll-lock-saved-overflow-y-property');\n      }\n    } else {\n      $target.style.overflowY = 'scroll';\n    }\n\n    var width = scroll_lock_getCurrentTargetScrollBarWidth($target);\n    $target.style.overflowY = currentOverflowYProperty;\n    return width;\n  } else {\n    return 0;\n  }\n};\nvar scroll_lock_getCurrentTargetScrollBarWidth = function getCurrentTargetScrollBarWidth($target) {\n  if (isElement($target)) {\n    if ($target === document.body) {\n      var documentWidth = document.documentElement.clientWidth;\n      var windowWidth = window.innerWidth;\n      var currentWidth = windowWidth - documentWidth;\n      return currentWidth;\n    } else {\n      var borderLeftWidthCurrentProperty = $target.style.borderLeftWidth;\n      var borderRightWidthCurrentProperty = $target.style.borderRightWidth;\n      $target.style.borderLeftWidth = '0px';\n      $target.style.borderRightWidth = '0px';\n\n      var _currentWidth = $target.offsetWidth - $target.clientWidth;\n\n      $target.style.borderLeftWidth = borderLeftWidthCurrentProperty;\n      $target.style.borderRightWidth = borderRightWidthCurrentProperty;\n      return _currentWidth;\n    }\n  } else {\n    return 0;\n  }\n};\nvar getPageScrollBarWidth = function getPageScrollBarWidth() {\n  var onlyExists = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return scroll_lock_getTargetScrollBarWidth(document.body, onlyExists);\n};\nvar getCurrentPageScrollBarWidth = function getCurrentPageScrollBarWidth() {\n  return scroll_lock_getCurrentTargetScrollBarWidth(document.body);\n};\nvar scroll_lock_addScrollableTarget = function addScrollableTarget(target) {\n  if (target) {\n    var targets = argumentAsArray(target);\n    targets.map(function ($targets) {\n      eachNode($targets, function ($target) {\n        if (isElement($target)) {\n          $target.setAttribute('data-scroll-lock-scrollable', '');\n        } else {\n          throwError(\"\\\"\".concat($target, \"\\\" is not a Element.\"));\n        }\n      });\n    });\n  }\n};\nvar scroll_lock_removeScrollableTarget = function removeScrollableTarget(target) {\n  if (target) {\n    var targets = argumentAsArray(target);\n    targets.map(function ($targets) {\n      eachNode($targets, function ($target) {\n        if (isElement($target)) {\n          $target.removeAttribute('data-scroll-lock-scrollable');\n        } else {\n          throwError(\"\\\"\".concat($target, \"\\\" is not a Element.\"));\n        }\n      });\n    });\n  }\n};\nvar scroll_lock_addScrollableSelector = function addScrollableSelector(selector) {\n  if (selector) {\n    var selectors = argumentAsArray(selector);\n    selectors.map(function (selector) {\n      state.scrollableSelectors.push(selector);\n    });\n  }\n};\nvar scroll_lock_removeScrollableSelector = function removeScrollableSelector(selector) {\n  if (selector) {\n    var selectors = argumentAsArray(selector);\n    selectors.map(function (selector) {\n      state.scrollableSelectors = state.scrollableSelectors.filter(function (sSelector) {\n        return sSelector !== selector;\n      });\n    });\n  }\n};\nvar scroll_lock_addLockableTarget = function addLockableTarget(target) {\n  if (target) {\n    var targets = argumentAsArray(target);\n    targets.map(function ($targets) {\n      eachNode($targets, function ($target) {\n        if (isElement($target)) {\n          $target.setAttribute('data-scroll-lock-lockable', '');\n        } else {\n          throwError(\"\\\"\".concat($target, \"\\\" is not a Element.\"));\n        }\n      });\n    });\n\n    if (!getScrollState()) {\n      scroll_lock_hideLockableOverflow();\n    }\n  }\n};\nvar scroll_lock_addLockableSelector = function addLockableSelector(selector) {\n  if (selector) {\n    var selectors = argumentAsArray(selector);\n    selectors.map(function (selector) {\n      state.lockableSelectors.push(selector);\n    });\n\n    if (!getScrollState()) {\n      scroll_lock_hideLockableOverflow();\n    }\n\n    scroll_lock_addFillGapSelector(selector);\n  }\n};\nvar scroll_lock_setFillGapMethod = function setFillGapMethod(method) {\n  if (method) {\n    if (FILL_GAP_AVAILABLE_METHODS.indexOf(method) !== -1) {\n      state.fillGapMethod = method;\n      refillGaps();\n    } else {\n      var methods = FILL_GAP_AVAILABLE_METHODS.join(', ');\n      throwError(\"\\\"\".concat(method, \"\\\" method is not available!\\nAvailable fill gap methods: \").concat(methods, \".\"));\n    }\n  }\n};\nvar scroll_lock_addFillGapTarget = function addFillGapTarget(target) {\n  if (target) {\n    var targets = argumentAsArray(target);\n    targets.map(function ($targets) {\n      eachNode($targets, function ($target) {\n        if (isElement($target)) {\n          $target.setAttribute('data-scroll-lock-fill-gap', '');\n\n          if (!state.scroll) {\n            scroll_lock_fillGapTarget($target);\n          }\n        } else {\n          throwError(\"\\\"\".concat($target, \"\\\" is not a Element.\"));\n        }\n      });\n    });\n  }\n};\nvar scroll_lock_removeFillGapTarget = function removeFillGapTarget(target) {\n  if (target) {\n    var targets = argumentAsArray(target);\n    targets.map(function ($targets) {\n      eachNode($targets, function ($target) {\n        if (isElement($target)) {\n          $target.removeAttribute('data-scroll-lock-fill-gap');\n\n          if (!state.scroll) {\n            scroll_lock_unfillGapTarget($target);\n          }\n        } else {\n          throwError(\"\\\"\".concat($target, \"\\\" is not a Element.\"));\n        }\n      });\n    });\n  }\n};\nvar scroll_lock_addFillGapSelector = function addFillGapSelector(selector) {\n  if (selector) {\n    var selectors = argumentAsArray(selector);\n    selectors.map(function (selector) {\n      if (state.fillGapSelectors.indexOf(selector) === -1) {\n        state.fillGapSelectors.push(selector);\n\n        if (!state.scroll) {\n          scroll_lock_fillGapSelector(selector);\n        }\n      }\n    });\n  }\n};\nvar scroll_lock_removeFillGapSelector = function removeFillGapSelector(selector) {\n  if (selector) {\n    var selectors = argumentAsArray(selector);\n    selectors.map(function (selector) {\n      state.fillGapSelectors = state.fillGapSelectors.filter(function (fSelector) {\n        return fSelector !== selector;\n      });\n\n      if (!state.scroll) {\n        scroll_lock_unfillGapSelector(selector);\n      }\n    });\n  }\n};\nvar refillGaps = function refillGaps() {\n  if (!state.scroll) {\n    fillGaps();\n  }\n};\n\nvar scroll_lock_hideLockableOverflow = function hideLockableOverflow() {\n  var selector = arrayAsSelector(state.lockableSelectors);\n  scroll_lock_hideLockableOverflowSelector(selector);\n};\n\nvar scroll_lock_showLockableOverflow = function showLockableOverflow() {\n  var selector = arrayAsSelector(state.lockableSelectors);\n  scroll_lock_showLockableOverflowSelector(selector);\n};\n\nvar scroll_lock_hideLockableOverflowSelector = function hideLockableOverflowSelector(selector) {\n  var $targets = document.querySelectorAll(selector);\n  eachNode($targets, function ($target) {\n    scroll_lock_hideLockableOverflowTarget($target);\n  });\n};\n\nvar scroll_lock_showLockableOverflowSelector = function showLockableOverflowSelector(selector) {\n  var $targets = document.querySelectorAll(selector);\n  eachNode($targets, function ($target) {\n    scroll_lock_showLockableOverflowTarget($target);\n  });\n};\n\nvar scroll_lock_hideLockableOverflowTarget = function hideLockableOverflowTarget($target) {\n  if (isElement($target) && $target.getAttribute('data-scroll-lock-locked') !== 'true') {\n    var computedStyle = window.getComputedStyle($target);\n    $target.setAttribute('data-scroll-lock-saved-overflow-y-property', computedStyle.overflowY);\n    $target.setAttribute('data-scroll-lock-saved-inline-overflow-property', $target.style.overflow);\n    $target.setAttribute('data-scroll-lock-saved-inline-overflow-y-property', $target.style.overflowY);\n    $target.style.overflow = 'hidden';\n    $target.setAttribute('data-scroll-lock-locked', 'true');\n  }\n};\n\nvar scroll_lock_showLockableOverflowTarget = function showLockableOverflowTarget($target) {\n  if (isElement($target) && $target.getAttribute('data-scroll-lock-locked') === 'true') {\n    $target.style.overflow = $target.getAttribute('data-scroll-lock-saved-inline-overflow-property');\n    $target.style.overflowY = $target.getAttribute('data-scroll-lock-saved-inline-overflow-y-property');\n    $target.removeAttribute('data-scroll-lock-saved-overflow-property');\n    $target.removeAttribute('data-scroll-lock-saved-inline-overflow-property');\n    $target.removeAttribute('data-scroll-lock-saved-inline-overflow-y-property');\n    $target.removeAttribute('data-scroll-lock-locked');\n  }\n};\n\nvar fillGaps = function fillGaps() {\n  state.fillGapSelectors.map(function (selector) {\n    scroll_lock_fillGapSelector(selector);\n  });\n};\n\nvar unfillGaps = function unfillGaps() {\n  state.fillGapSelectors.map(function (selector) {\n    scroll_lock_unfillGapSelector(selector);\n  });\n};\n\nvar scroll_lock_fillGapSelector = function fillGapSelector(selector) {\n  var $targets = document.querySelectorAll(selector);\n  var isLockable = state.lockableSelectors.indexOf(selector) !== -1;\n  eachNode($targets, function ($target) {\n    scroll_lock_fillGapTarget($target, isLockable);\n  });\n};\n\nvar scroll_lock_fillGapTarget = function fillGapTarget($target) {\n  var isLockable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (isElement($target)) {\n    var scrollBarWidth;\n\n    if ($target.getAttribute('data-scroll-lock-lockable') === '' || isLockable) {\n      scrollBarWidth = scroll_lock_getTargetScrollBarWidth($target, true);\n    } else {\n      var $lockableParent = findParentBySelector($target, arrayAsSelector(state.lockableSelectors));\n      scrollBarWidth = scroll_lock_getTargetScrollBarWidth($lockableParent, true);\n    }\n\n    if ($target.getAttribute('data-scroll-lock-filled-gap') === 'true') {\n      scroll_lock_unfillGapTarget($target);\n    }\n\n    var computedStyle = window.getComputedStyle($target);\n    $target.setAttribute('data-scroll-lock-filled-gap', 'true');\n    $target.setAttribute('data-scroll-lock-current-fill-gap-method', state.fillGapMethod);\n\n    if (state.fillGapMethod === 'margin') {\n      var currentMargin = parseFloat(computedStyle.marginRight);\n      $target.style.marginRight = \"\".concat(currentMargin + scrollBarWidth, \"px\");\n    } else if (state.fillGapMethod === 'width') {\n      $target.style.width = \"calc(100% - \".concat(scrollBarWidth, \"px)\");\n    } else if (state.fillGapMethod === 'max-width') {\n      $target.style.maxWidth = \"calc(100% - \".concat(scrollBarWidth, \"px)\");\n    } else if (state.fillGapMethod === 'padding') {\n      var currentPadding = parseFloat(computedStyle.paddingRight);\n      $target.style.paddingRight = \"\".concat(currentPadding + scrollBarWidth, \"px\");\n    }\n  }\n};\n\nvar scroll_lock_unfillGapSelector = function unfillGapSelector(selector) {\n  var $targets = document.querySelectorAll(selector);\n  eachNode($targets, function ($target) {\n    scroll_lock_unfillGapTarget($target);\n  });\n};\n\nvar scroll_lock_unfillGapTarget = function unfillGapTarget($target) {\n  if (isElement($target)) {\n    if ($target.getAttribute('data-scroll-lock-filled-gap') === 'true') {\n      var currentFillGapMethod = $target.getAttribute('data-scroll-lock-current-fill-gap-method');\n      $target.removeAttribute('data-scroll-lock-filled-gap');\n      $target.removeAttribute('data-scroll-lock-current-fill-gap-method');\n\n      if (currentFillGapMethod === 'margin') {\n        $target.style.marginRight = \"\";\n      } else if (currentFillGapMethod === 'width') {\n        $target.style.width = \"\";\n      } else if (currentFillGapMethod === 'max-width') {\n        $target.style.maxWidth = \"\";\n      } else if (currentFillGapMethod === 'padding') {\n        $target.style.paddingRight = \"\";\n      }\n    }\n  }\n};\n\nvar onResize = function onResize(e) {\n  refillGaps();\n};\n\nvar onTouchStart = function onTouchStart(e) {\n  if (!state.scroll) {\n    state.startTouchY = e.touches[0].clientY;\n    state.startTouchX = e.touches[0].clientX;\n  }\n};\n\nvar scroll_lock_onTouchMove = function onTouchMove(e) {\n  if (!state.scroll) {\n    var startTouchY = state.startTouchY,\n        startTouchX = state.startTouchX;\n    var currentClientY = e.touches[0].clientY;\n    var currentClientX = e.touches[0].clientX;\n\n    if (e.touches.length < 2) {\n      var selector = arrayAsSelector(state.scrollableSelectors);\n      var direction = {\n        up: startTouchY < currentClientY,\n        down: startTouchY > currentClientY,\n        left: startTouchX < currentClientX,\n        right: startTouchX > currentClientX\n      };\n      var directionWithOffset = {\n        up: startTouchY + TOUCH_DIRECTION_DETECT_OFFSET < currentClientY,\n        down: startTouchY - TOUCH_DIRECTION_DETECT_OFFSET > currentClientY,\n        left: startTouchX + TOUCH_DIRECTION_DETECT_OFFSET < currentClientX,\n        right: startTouchX - TOUCH_DIRECTION_DETECT_OFFSET > currentClientX\n      };\n\n      var handle = function handle($el) {\n        var skip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if ($el) {\n          var parentScrollableEl = findParentBySelector($el, selector, false);\n\n          if (elementIsInputRange($el)) {\n            return false;\n          }\n\n          if (skip || elementIsScrollableField($el) && findParentBySelector($el, selector) || elementHasSelector($el, selector)) {\n            var prevent = false;\n\n            if (elementScrollLeftOnStart($el) && elementScrollLeftOnEnd($el)) {\n              if (direction.up && elementScrollTopOnStart($el) || direction.down && elementScrollTopOnEnd($el)) {\n                prevent = true;\n              }\n            } else if (elementScrollTopOnStart($el) && elementScrollTopOnEnd($el)) {\n              if (direction.left && elementScrollLeftOnStart($el) || direction.right && elementScrollLeftOnEnd($el)) {\n                prevent = true;\n              }\n            } else if (directionWithOffset.up && elementScrollTopOnStart($el) || directionWithOffset.down && elementScrollTopOnEnd($el) || directionWithOffset.left && elementScrollLeftOnStart($el) || directionWithOffset.right && elementScrollLeftOnEnd($el)) {\n              prevent = true;\n            }\n\n            if (prevent) {\n              if (parentScrollableEl) {\n                handle(parentScrollableEl, true);\n              } else {\n                if (e.cancelable) {\n                  e.preventDefault();\n                }\n              }\n            }\n          } else {\n            handle(parentScrollableEl);\n          }\n        } else {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n        }\n      };\n\n      handle(e.target);\n    }\n  }\n};\n\nvar onTouchEnd = function onTouchEnd(e) {\n  if (!state.scroll) {\n    state.startTouchY = 0;\n    state.startTouchX = 0;\n  }\n};\n\nif (typeof window !== 'undefined') {\n  window.addEventListener('resize', onResize);\n}\n\nif (typeof document !== 'undefined') {\n  document.addEventListener('touchstart', onTouchStart);\n  document.addEventListener('touchmove', scroll_lock_onTouchMove, {\n    passive: false\n  });\n  document.addEventListener('touchend', onTouchEnd);\n}\n\nvar deprecatedMethods = {\n  hide: function hide(target) {\n    throwError('\"hide\" is deprecated! Use \"disablePageScroll\" instead. \\n https://github.com/FL3NKEY/scroll-lock#disablepagescrollscrollabletarget');\n    disablePageScroll(target);\n  },\n  show: function show(target) {\n    throwError('\"show\" is deprecated! Use \"enablePageScroll\" instead. \\n https://github.com/FL3NKEY/scroll-lock#enablepagescrollscrollabletarget');\n    enablePageScroll(target);\n  },\n  toggle: function toggle(target) {\n    throwError('\"toggle\" is deprecated! Do not use it.');\n\n    if (getScrollState()) {\n      disablePageScroll();\n    } else {\n      enablePageScroll(target);\n    }\n  },\n  getState: function getState() {\n    throwError('\"getState\" is deprecated! Use \"getScrollState\" instead. \\n https://github.com/FL3NKEY/scroll-lock#getscrollstate');\n    return getScrollState();\n  },\n  getWidth: function getWidth() {\n    throwError('\"getWidth\" is deprecated! Use \"getPageScrollBarWidth\" instead. \\n https://github.com/FL3NKEY/scroll-lock#getpagescrollbarwidth');\n    return getPageScrollBarWidth();\n  },\n  getCurrentWidth: function getCurrentWidth() {\n    throwError('\"getCurrentWidth\" is deprecated! Use \"getCurrentPageScrollBarWidth\" instead. \\n https://github.com/FL3NKEY/scroll-lock#getcurrentpagescrollbarwidth');\n    return getCurrentPageScrollBarWidth();\n  },\n  setScrollableTargets: function setScrollableTargets(target) {\n    throwError('\"setScrollableTargets\" is deprecated! Use \"addScrollableTarget\" instead. \\n https://github.com/FL3NKEY/scroll-lock#addscrollabletargetscrollabletarget');\n    scroll_lock_addScrollableTarget(target);\n  },\n  setFillGapSelectors: function setFillGapSelectors(selector) {\n    throwError('\"setFillGapSelectors\" is deprecated! Use \"addFillGapSelector\" instead. \\n https://github.com/FL3NKEY/scroll-lock#addfillgapselectorfillgapselector');\n    scroll_lock_addFillGapSelector(selector);\n  },\n  setFillGapTargets: function setFillGapTargets(target) {\n    throwError('\"setFillGapTargets\" is deprecated! Use \"addFillGapTarget\" instead. \\n https://github.com/FL3NKEY/scroll-lock#addfillgaptargetfillgaptarget');\n    scroll_lock_addFillGapTarget(target);\n  },\n  clearQueue: function clearQueue() {\n    throwError('\"clearQueue\" is deprecated! Use \"clearQueueScrollLocks\" instead. \\n https://github.com/FL3NKEY/scroll-lock#clearqueuescrolllocks');\n    clearQueueScrollLocks();\n  }\n};\n\nvar scrollLock = _objectSpread({\n  disablePageScroll: disablePageScroll,\n  enablePageScroll: enablePageScroll,\n  getScrollState: getScrollState,\n  clearQueueScrollLocks: clearQueueScrollLocks,\n  getTargetScrollBarWidth: scroll_lock_getTargetScrollBarWidth,\n  getCurrentTargetScrollBarWidth: scroll_lock_getCurrentTargetScrollBarWidth,\n  getPageScrollBarWidth: getPageScrollBarWidth,\n  getCurrentPageScrollBarWidth: getCurrentPageScrollBarWidth,\n  addScrollableSelector: scroll_lock_addScrollableSelector,\n  removeScrollableSelector: scroll_lock_removeScrollableSelector,\n  addScrollableTarget: scroll_lock_addScrollableTarget,\n  removeScrollableTarget: scroll_lock_removeScrollableTarget,\n  addLockableSelector: scroll_lock_addLockableSelector,\n  addLockableTarget: scroll_lock_addLockableTarget,\n  addFillGapSelector: scroll_lock_addFillGapSelector,\n  removeFillGapSelector: scroll_lock_removeFillGapSelector,\n  addFillGapTarget: scroll_lock_addFillGapTarget,\n  removeFillGapTarget: scroll_lock_removeFillGapTarget,\n  setFillGapMethod: scroll_lock_setFillGapMethod,\n  refillGaps: refillGaps,\n  _state: state\n}, deprecatedMethods);\n\n/* harmony default export */ var scroll_lock = __webpack_exports__[\"default\"] = (scrollLock);\n\n/***/ })\n/******/ ])[\"default\"];\n});","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n\nvar list = [\n\t\" daum[ /]\",\n\t\" deusu/\",\n\t\" yadirectfetcher\",\n\t\"(?:^| )site\",\n\t\"(?:^|[^g])news\",\n\t\"@[a-z]\",\n\t\"\\\\(at\\\\)[a-z]\",\n\t\"\\\\(github\\\\.com/\",\n\t\"\\\\[at\\\\][a-z]\",\n\t\"^12345\",\n\t\"^<\",\n\t\"^[\\\\w \\\\.\\\\-\\\\(\\\\)]+(/v?\\\\d+(\\\\.\\\\d+)?(\\\\.\\\\d{1,10})?)?$\",\n\t\"^[^ ]{50,}$\",\n\t\"^active\",\n\t\"^ad muncher\",\n\t\"^amaya\",\n\t\"^anglesharp/\",\n\t\"^anonymous\",\n\t\"^avsdevicesdk/\",\n\t\"^axios/\",\n\t\"^bidtellect/\",\n\t\"^biglotron\",\n\t\"^btwebclient/\",\n\t\"^castro\",\n\t\"^clamav[ /]\",\n\t\"^client/\",\n\t\"^cobweb/\",\n\t\"^coccoc\",\n\t\"^custom\",\n\t\"^ddg[_-]android\",\n\t\"^discourse\",\n\t\"^dispatch/\\\\d\",\n\t\"^downcast/\",\n\t\"^duckduckgo\",\n\t\"^facebook\",\n\t\"^fdm[ /]\\\\d\",\n\t\"^getright/\",\n\t\"^gozilla/\",\n\t\"^hatena\",\n\t\"^hobbit\",\n\t\"^hotzonu\",\n\t\"^hwcdn/\",\n\t\"^jeode/\",\n\t\"^jetty/\",\n\t\"^jigsaw\",\n\t\"^linkdex\",\n\t\"^lwp[-: ]\",\n\t\"^metauri\",\n\t\"^microsoft bits\",\n\t\"^movabletype\",\n\t\"^mozilla/\\\\d\\\\.\\\\d \\\\(compatible;?\\\\)$\",\n\t\"^mozilla/\\\\d\\\\.\\\\d \\\\w*$\",\n\t\"^navermailapp\",\n\t\"^netsurf\",\n\t\"^offline explorer\",\n\t\"^php\",\n\t\"^postman\",\n\t\"^postrank\",\n\t\"^python\",\n\t\"^read\",\n\t\"^reed\",\n\t\"^restsharp/\",\n\t\"^snapchat\",\n\t\"^space bison\",\n\t\"^svn\",\n\t\"^swcd \",\n\t\"^taringa\",\n\t\"^test certificate info\",\n\t\"^thumbor/\",\n\t\"^tumblr/\",\n\t\"^user-agent:mozilla\",\n\t\"^valid\",\n\t\"^venus/fedoraplanet\",\n\t\"^w3c\",\n\t\"^webbandit/\",\n\t\"^webcopier\",\n\t\"^wget\",\n\t\"^whatsapp\",\n\t\"^xenu link sleuth\",\n\t\"^yahoo\",\n\t\"^yandex\",\n\t\"^zdm/\\\\d\",\n\t\"^zoom marketplace/\",\n\t\"^{{.*}}$\",\n\t\"adbeat\\\\.com\",\n\t\"appinsights\",\n\t\"archive\",\n\t\"ask jeeves/teoma\",\n\t\"bit\\\\.ly/\",\n\t\"bluecoat drtr\",\n\t\"bot\",\n\t\"browsex\",\n\t\"burpcollaborator\",\n\t\"capture\",\n\t\"catch\",\n\t\"check\",\n\t\"chrome-lighthouse\",\n\t\"chromeframe\",\n\t\"cloud\",\n\t\"crawl\",\n\t\"cryptoapi\",\n\t\"dareboost\",\n\t\"datanyze\",\n\t\"dataprovider\",\n\t\"dejaclick\",\n\t\"dmbrowser\",\n\t\"download\",\n\t\"evc-batch/\",\n\t\"feed\",\n\t\"firephp\",\n\t\"freesafeip\",\n\t\"gomezagent\",\n\t\"google\",\n\t\"headlesschrome/\",\n\t\"http\",\n\t\"httrack\",\n\t\"hubspot marketing grader\",\n\t\"hydra\",\n\t\"ibisbrowser\",\n\t\"images\",\n\t\"inspect\",\n\t\"iplabel\",\n\t\"ips-agent\",\n\t\"java\",\n\t\"library\",\n\t\"mail\\\\.ru/\",\n\t\"manager\",\n\t\"monitor\",\n\t\"morningscore/\",\n\t\"neustar wpm\",\n\t\"nutch\",\n\t\"offbyone\",\n\t\"optimize\",\n\t\"pageburst\",\n\t\"pagespeed\",\n\t\"perl\",\n\t\"phantom\",\n\t\"pingdom\",\n\t\"powermarks\",\n\t\"preview\",\n\t\"proxy\",\n\t\"ptst[ /]\\\\d\",\n\t\"reader\",\n\t\"rexx;\",\n\t\"rigor\",\n\t\"rss\",\n\t\"scan\",\n\t\"scrape\",\n\t\"search\",\n\t\"serp ?reputation ?management\",\n\t\"server\",\n\t\"sogou\",\n\t\"sparkler/\",\n\t\"speedcurve\",\n\t\"spider\",\n\t\"splash\",\n\t\"statuscake\",\n\t\"stumbleupon\\\\.com\",\n\t\"supercleaner\",\n\t\"synapse\",\n\t\"synthetic\",\n\t\"torrent\",\n\t\"tracemyfile\",\n\t\"transcoder\",\n\t\"trendsmapresolver\",\n\t\"twingly recon\",\n\t\"url\",\n\t\"virtuoso\",\n\t\"wappalyzer\",\n\t\"webglance\",\n\t\"webkit2png\",\n\t\"websitemetadataretriever\",\n\t\"whatcms/\",\n\t\"wordpress\",\n\t\"zgrab\"\n];\n\n/**\n * Mutate given list of patter strings\n * @param {string[]} list\n * @returns {string[]}\n */\nfunction amend(list) {\n  try {\n    // Risk: Uses lookbehind assertion, avoid breakage in parsing by using RegExp constructor\n    new RegExp('(?<! cu)bot').test('dangerbot'); // eslint-disable-line prefer-regex-literals\n  } catch (error) {\n    // Skip regex fixes\n    return list;\n  }\n  [\n  // Addresses: Cubot device\n  ['bot', '(?<! cu)bot'],\n  // Addresses: Android webview\n  ['google', '(?<! (?:channel/|google/))google(?!(app|/google| pixel))'],\n  // Addresses: libhttp browser\n  ['http', '(?<!(?:lib))http'],\n  // Addresses: java based browsers\n  ['java', 'java(?!;)'],\n  // Addresses: Yandex Search App\n  ['search', '(?<! ya(?:yandex)?)search']].forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      search = _ref2[0],\n      replace = _ref2[1];\n    var index = list.lastIndexOf(search);\n    if (~index) {\n      list.splice(index, 1, replace);\n    }\n  });\n  return list;\n}\n\namend(list);\nvar flags = 'i';\n\n/**\n * Test user agents for matching patterns\n */\nvar _list = /*#__PURE__*/new WeakMap();\nvar _pattern = /*#__PURE__*/new WeakMap();\nvar _update = /*#__PURE__*/new WeakSet();\nvar _index = /*#__PURE__*/new WeakSet();\nvar Isbot = /*#__PURE__*/function () {\n  function Isbot(patterns) {\n    var _this = this;\n    _classCallCheck(this, Isbot);\n    /**\n     * Find the first index of an existing rule or -1 if not found\n     * @param  {string} rule\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _index);\n    /**\n     * Recreate the pattern from rules list\n     */\n    _classPrivateMethodInitSpec(this, _update);\n    /**\n     * @type {string[]}\n     */\n    _classPrivateFieldInitSpec(this, _list, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {RegExp}\n     */\n    _classPrivateFieldInitSpec(this, _pattern, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _list, patterns || list.slice());\n    _classPrivateMethodGet(this, _update, _update2).call(this);\n    var isbot = function isbot(ua) {\n      return _this.test(ua);\n    };\n    return Object.defineProperties(isbot, Object.entries(Object.getOwnPropertyDescriptors(Isbot.prototype)).reduce(function (accumulator, _ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        prop = _ref2[0],\n        descriptor = _ref2[1];\n      if (typeof descriptor.value === 'function') {\n        Object.assign(accumulator, _defineProperty({}, prop, {\n          value: _this[prop].bind(_this)\n        }));\n      }\n      if (typeof descriptor.get === 'function') {\n        Object.assign(accumulator, _defineProperty({}, prop, {\n          get: function get() {\n            return _this[prop];\n          }\n        }));\n      }\n      return accumulator;\n    }, {}));\n  }\n  _createClass(Isbot, [{\n    key: \"pattern\",\n    get:\n    /**\n     * Get a clone of the pattern\n     * @type RegExp\n     */\n    function get() {\n      return new RegExp(_classPrivateFieldGet(this, _pattern));\n    }\n\n    /**\n     * Match given string against out pattern\n     * @param  {string} ua User Agent string\n     * @returns {boolean}\n     */\n  }, {\n    key: \"test\",\n    value: function test(ua) {\n      return Boolean(ua) && _classPrivateFieldGet(this, _pattern).test(ua);\n    }\n  }, {\n    key: \"isbot\",\n    value: function isbot(ua) {\n      return Boolean(ua) && _classPrivateFieldGet(this, _pattern).test(ua);\n    }\n\n    /**\n     * Get the match for strings' known crawler pattern\n     * @param  {string} ua User Agent string\n     * @returns {string|null}\n     */\n  }, {\n    key: \"find\",\n    value: function find() {\n      var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var match = ua.match(_classPrivateFieldGet(this, _pattern));\n      return match && match[0];\n    }\n\n    /**\n     * Get the patterns that match user agent string if any\n     * @param  {string} ua User Agent string\n     * @returns {string[]}\n     */\n  }, {\n    key: \"matches\",\n    value: function matches() {\n      var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return _classPrivateFieldGet(this, _list).filter(function (entry) {\n        return new RegExp(entry, flags).test(ua);\n      });\n    }\n\n    /**\n     * Clear all patterns that match user agent\n     * @param  {string} ua User Agent string\n     * @returns {void}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      this.exclude(this.matches(ua));\n    }\n\n    /**\n     * Extent patterns for known crawlers\n     * @param  {string[]} filters\n     * @returns {void}\n     */\n  }, {\n    key: \"extend\",\n    value: function extend() {\n      var _this2 = this;\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      [].push.apply(_classPrivateFieldGet(this, _list), filters.filter(function (rule) {\n        return _classPrivateMethodGet(_this2, _index, _index2).call(_this2, rule) === -1;\n      }).map(function (filter) {\n        return filter.toLowerCase();\n      }));\n      _classPrivateMethodGet(this, _update, _update2).call(this);\n    }\n\n    /**\n     * Exclude patterns from bot pattern rule\n     * @param  {string[]} filters\n     * @returns {void}\n     */\n  }, {\n    key: \"exclude\",\n    value: function exclude() {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var length = filters.length;\n      while (length--) {\n        var index = _classPrivateMethodGet(this, _index, _index2).call(this, filters[length]);\n        if (index > -1) {\n          _classPrivateFieldGet(this, _list).splice(index, 1);\n        }\n      }\n      _classPrivateMethodGet(this, _update, _update2).call(this);\n    }\n\n    /**\n     * Create a new Isbot instance using given list or self's list\n     * @param  {string[]} [list]\n     * @returns {Isbot}\n     */\n  }, {\n    key: \"spawn\",\n    value: function spawn(list) {\n      return new Isbot(list || _classPrivateFieldGet(this, _list));\n    }\n  }]);\n  return Isbot;\n}();\nfunction _update2() {\n  _classPrivateFieldSet(this, _pattern, new RegExp(_classPrivateFieldGet(this, _list).join('|'), flags));\n}\nfunction _index2(rule) {\n  return _classPrivateFieldGet(this, _list).indexOf(rule.toLowerCase());\n}\n\nvar isbot = new Isbot();\n\nmodule.exports = isbot;\n//# sourceMappingURL=index.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export default class HeaderPasswordDrawer extends Core.Component {\n  onMount() {\n    const drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (drawerModal) {\n      const embedModalBtnEl = this.el.querySelector('[data-header-password-drawer-close]');\n\n      this.events.register(embedModalBtnEl, 'click', e => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const closeEvent = new CustomEvent('header-password-drawer:close', { bubbles: true });\n        this.el.dispatchEvent(closeEvent);\n      });\n    }\n  }\n}\n","/**\n * @class AddTheLookItem\n * @classdesc The Shop the Look section. Displays an image\n *            with interactable points directing customers to featured products.\n * @extends Core.SectionComponent\n */\nexport default class AddTheLookItem extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    this.state = {\n      product: this.data.product,\n    };\n  }\n\n  get optionsSelector() {\n    return this.query('options-selector');\n  }\n\n  get formData() {\n    return new FormData(this.el.querySelector('[data-product-form]'));\n  }\n\n  onMount() {\n    this.events.register(this.el, 'product:options-change', event => {\n      const { variant } = event.detail;\n\n      fetch(`${this.data.product_url}/async?variant=${variant.id}&section_id=${this.data.section_id}`)\n        .then(response => response.text())\n        .then(responseText => {\n          const html = new DOMParser().parseFromString(responseText, 'text/html');\n          const detailsEl = html.querySelector('[data-component=\"product-details\"]');\n\n          if (detailsEl) {\n            this.el.querySelector('[data-component=\"product-details\"]').replaceWith(detailsEl);\n          }\n        });\n    });\n  }\n}\n","/**\n * @class ShopTheLook\n * @classdesc The Shop the Look section. Displays an image\n *            with interactable points directing customers to featured products.\n * @extends Core.SectionComponent\n */\nexport default class ShopTheLook extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    this._imageWrapperEl = this.el.querySelector('[data-image-wrapper]');\n    this._viewInListEl = this.el.querySelector('[data-hotspot-viewinlist]');\n    this._hotspotEls = this.el.querySelectorAll('[data-hotspot]');\n    this._hotspots = [];\n    this._addTheLookFragment = this.el.querySelector('[data-add-the-look-template]').content.cloneNode(true);\n    this._addTheLook = null;\n    this._currentAnimation = Promise.resolve();\n\n    this._validHotspots = 0;\n    this._hotspotEls.forEach(hotspotEl => {\n      const toggleEl = hotspotEl.querySelector('[data-hotspot-toggle]');\n      const modalEl = hotspotEl.querySelector('[data-hotspot-modal]');\n      const animation = Core.Animations.transition({ el: modalEl, state: 'closed' });\n      const { hotspot: id, hotspotUrl: productUrl, hotspotPage: page } = hotspotEl.dataset;\n      const valid = !!productUrl;\n\n      this._hotspots.push({\n        id,\n        el: hotspotEl,\n        toggleEl,\n        modalEl,\n        productUrl,\n        animation,\n        page,\n        selectedOptions: null,\n        quickshop: null,\n        zIndex: 1,\n        valid,\n      });\n\n      if (valid) {\n        this._validHotspots++;\n      }\n    });\n    this._hotspotPages = this._validHotspots + 1;\n  }\n\n  onMount() {\n    this._drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (this._drawerModal) {\n      this._drawerFlyout = this._drawerModal.createFlyout();\n    }\n\n    this.events.register(this._viewInListEl, 'click', e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      this._openDrawerWithAddTheLook(this._viewInListEl);\n    });\n\n    this.events.register(document.body, 'click', e => {\n      if (\n        this._hotspots.some(({ el }) => el === e.target || el.contains(e.target))\n      ) {\n        return;\n      }\n\n      this._hotspots.forEach(hotspot => this._closeHotspot(hotspot));\n    });\n\n    this._hotspots.forEach(hotspot => {\n      const {\n        toggleEl,\n        modalEl,\n        productUrl,\n      } = hotspot;\n\n      this.events.register(toggleEl, 'click', async e => {\n        e.preventDefault();\n\n        const { open, cause } = await this._getHotspotState(hotspot);\n\n        if (!open || (open && cause !== 'click')) {\n          this._openHotspot(hotspot, 'click');\n        } else {\n          this._closeHotspot(hotspot);\n        }\n      });\n\n      this.events.register(toggleEl, 'mouseover', async () => {\n        const { open, cause } = await this._getHotspotState(hotspot);\n\n        // Preload quickshop\n        this._retrieveQuickshop(hotspot);\n\n        if (!open || (open && cause !== 'click')) {\n          this._openHotspot(hotspot, 'mouseover');\n        }\n      });\n\n      this.events.register(modalEl, 'mouseover', async () => {\n        const { open, cause } = await this._getHotspotState(hotspot);\n\n        if (!open || (open && cause !== 'click')) {\n          this._openHotspot(hotspot, 'mouseover');\n        }\n      });\n\n      this.events.register(toggleEl, 'mouseleave', async e => {\n        const { open, cause } = await this._getHotspotState(hotspot);\n\n        // Do not do anything if we mouseover the product\n        if (e.relatedTarget === modalEl || modalEl.contains(e.relatedTarget)) return;\n\n        if (open && cause !== 'click') {\n          this._closeHotspot(hotspot);\n        }\n      });\n\n      this.events.register(modalEl, 'mouseleave', async e => {\n        const { open, cause } = await this._getHotspotState(hotspot);\n\n        // Do not do anything if we mouseover the toggle\n        if (e.relatedTarget === toggleEl || toggleEl.contains(e.relatedTarget)) return;\n\n        if (open && cause !== 'click') {\n          this._closeHotspot(hotspot);\n        }\n      });\n\n      if (productUrl) {\n        this.events.register(modalEl, 'product-details:view-full-details', e => {\n          e.stopPropagation();\n          e.preventDefault();\n\n          this._openDrawerWithHotspot(e.target, hotspot);\n        });\n      }\n    });\n  }\n\n  onDismount() {\n    super.onDismount();\n\n    if (this._drawerFlyout) {\n      this._drawerFlyout.then(drawerFlyout => drawerFlyout.destroy());\n    }\n  }\n\n  onBlockSelect(event) {\n    const hotspot = this._getHotspotById(event.detail.blockId);\n\n    this._openHotspot(hotspot, 'click');\n  }\n\n  onBlockDeselect(event) {\n    const hotspot = this._getHotspotById(event.detail.blockId);\n\n    this._closeHotspot(hotspot);\n  }\n\n  _getHotspotById(id) {\n    return this._hotspots.find(hotspot => hotspot.id === id);\n  }\n\n  _getHotspotByEl(el) {\n    return this._hotspots.find(hotspot => hotspot.el === el);\n  }\n\n  _getHotspotByToggleEl(toggleEl) {\n    return this._hotspots.find(hotspot => hotspot.toggleEl === toggleEl);\n  }\n\n  _getHotspotByModalEl(modalEl) {\n    return this._hotspots.find(hotspot => hotspot.modalEl === modalEl);\n  }\n\n  _getHotspotState(hotspot) {\n    return this\n      ._currentAnimation\n      .then(() => {\n        const { el } = hotspot;\n\n        return {\n          open: el.open,\n          cause: el.open ? el.getAttribute('data-hotspot-visible-by') : null,\n        };\n      });\n  }\n\n  _openHotspot(hotspot, cause = null) {\n    return this\n      ._currentAnimation\n      .then(() => this._getHotspotState(hotspot))\n      .then(({ open }) => {\n        const {\n          el,\n          toggleEl,\n          modalEl,\n          animation,\n        } = hotspot;\n\n        if (cause) {\n          el.setAttribute('data-hotspot-visible-by', cause);\n        } else {\n          el.removeAttribute('data-hotspot-visible-by');\n        }\n\n        hotspot.zIndex = this._hotspots.reduce((acc, h) => {\n          if (hotspot === h) return acc;\n\n          if (h.zIndex >= acc) return h.zIndex + 1;\n\n          return acc;\n        }, hotspot.zIndex);\n        el.style.zIndex = hotspot.zIndex;\n\n        if (open) return Promise.resolve(); // Already open\n\n        el.open = true;\n        this._findOpenSpaceForModal(toggleEl, modalEl);\n\n        return animation.animateTo('opened');\n      });\n  }\n\n  _closeHotspot(hotspot) {\n    return this\n      ._currentAnimation\n      .then(() => this._getHotspotState(hotspot))\n      .then(({ open }) => {\n        const { animation } = hotspot;\n\n        if (!open) return Promise.resolve(); // Already closed\n\n        return animation\n          .animateTo('closed')\n          .then(() => open);\n      })\n      .then(open => {\n        const { el } = hotspot;\n\n        el.removeAttribute('data-hotspot-visible-by');\n\n        if (!open) return;\n\n        el.open = false;\n        el.style.zIndex = '';\n        hotspot.zIndex = 1;\n      });\n  }\n\n  _findOpenSpaceForModal(toggleEl, modalEl) {\n    const directionClasses = [\n      'shop-the-look__hotspot-modal--right',\n      'shop-the-look__hotspot-modal--left',\n      'shop-the-look__hotspot-modal--bottom',\n      'shop-the-look__hotspot-modal--top',\n    ];\n\n    const fudgeFactor = 1.075; // Add for spacing between product and toggle\n    const {\n      top: topImageEdge,\n      right: rightImageEdge,\n      bottom: bottomImageEdge,\n      left: leftImageEdge,\n    } = this._imageWrapperEl.getBoundingClientRect();\n    const {\n      top: topToggleEdge,\n      right: rightToggleEdge,\n      bottom: bottomToggleEdge,\n      left: leftToggleEdge,\n    } = toggleEl.getBoundingClientRect();\n    const {\n      width: productWidth,\n      height: productHeight,\n    } = modalEl.getBoundingClientRect();\n\n    const topEdge = topToggleEdge - productHeight * fudgeFactor;\n    const rightEdge = rightToggleEdge + productWidth * fudgeFactor;\n    const bottomEdge = bottomToggleEdge + productHeight * fudgeFactor;\n    const leftEdge = leftToggleEdge - productWidth * fudgeFactor;\n\n    if (rightEdge <= rightImageEdge) {\n      // Within bounds of right side\n      modalEl.classList.remove(...directionClasses);\n      modalEl.classList.add(directionClasses[0]);\n    } else if (leftEdge >= leftImageEdge) {\n      // Within bounds of left side\n      modalEl.classList.remove(...directionClasses);\n      modalEl.classList.add(directionClasses[1]);\n    } else if (bottomEdge <= bottomImageEdge) {\n      // Within bounds of bottom side\n      modalEl.classList.remove(...directionClasses);\n      modalEl.classList.add(directionClasses[2]);\n    } else if (topEdge >= topImageEdge) {\n      // Within bounds of top side\n      modalEl.classList.remove(...directionClasses);\n      modalEl.classList.add(directionClasses[3]);\n    }\n  }\n\n  _retrieveQuickshop(hotspot) {\n    const { productUrl } = hotspot;\n\n    if (!productUrl) return null;\n\n    if (!hotspot.quickshop) {\n      hotspot.quickshop = fetch(productUrl.includes('?') ? `${productUrl}&view=quickshop` : `${productUrl}?view=quickshop`)\n        .then(response => response.text()) // Return text string of the HTML\n        .then(text => {\n          // Convert the HTML string into a document object\n          const productContent = new DOMParser()\n            .parseFromString(text, 'text/html')\n            .querySelector('[data-component=\"product-quickshop\"]');\n          const quickshopSection = productContent.parentElement;\n\n          return quickshopSection;\n        });\n    }\n\n    return hotspot.quickshop;\n  }\n\n  /**\n   * Opens a quickshop using a drawer modal\n   *\n   * @param {HTMLNode} trigger The trigger that was clicked to open the quickshop\n   * @param {Object} data An object containing data relevant to the quickshop\n   * @param {String} data.productLink The link to fetch the product quickshop content\n   */\n  async _openDrawerWithHotspot(trigger, hotspot) {\n    if (!this._drawerFlyout) return;\n\n    const drawerFlyout = await this._drawerFlyout;\n\n    this._drawerModal.openFlyout(drawerFlyout, trigger);\n    this._refreshDrawerWithHotspot(hotspot);\n  }\n\n  async _openDrawerWithAddTheLook(trigger) {\n    if (!this._drawerFlyout) return;\n\n    const drawerFlyout = await this._drawerFlyout;\n\n    this._drawerModal.openFlyout(drawerFlyout, trigger);\n    this._refreshDrawerWithAddTheLook();\n  }\n\n  async _refreshDrawerWithHotspot(hotspot) {\n    if (!this._drawerFlyout) return;\n\n    const drawerFlyout = await this._drawerFlyout;\n    const addTheLookHeadingEl = this._addTheLookFragment.querySelector('[data-add-the-look-quickshop-heading]').cloneNode(true);\n    const addTheLookFooterEl = this._addTheLookFragment.querySelector('[data-add-the-look-footer]').cloneNode(true);\n    const addTheLookAtc = addTheLookFooterEl.querySelector('[data-add-the-look-atc]');\n\n    addTheLookAtc.remove();\n\n    this\n      ._retrieveQuickshop(hotspot)\n      .then(quickshopSectionEl => {\n        drawerFlyout.populateHeading(addTheLookHeadingEl, true);\n        drawerFlyout.clearNotification();\n        drawerFlyout.populateContent(quickshopSectionEl, true);\n        drawerFlyout.populateFooter(addTheLookFooterEl, true);\n\n        this.events.register(quickshopSectionEl, 'product:options-change', event => {\n          const { options } = event.detail;\n\n          hotspot.selectedOptions = options;\n        });\n\n        Core.Components\n          .awaitComponents(quickshopSectionEl)\n          .then(components => {\n            const productQuickshop = components.filter(component => component.name === 'product-quickshop');\n            const { optionsSelector } = productQuickshop;\n\n            if (optionsSelector) {\n              if (hotspot.selectedOptions) {\n                optionsSelector\n                  .setSelectedOptions(hotspot.selectedOptions);\n              } else {\n                const options = optionsSelector.getSelectedOptions();\n\n                hotspot.selectedOptions = options;\n              }\n            }\n\n            this._initAddTheLookNavigation(addTheLookFooterEl, parseInt(hotspot.page, 10));\n          });\n      });\n  }\n\n  async _refreshDrawerWithAddTheLook() {\n    if (!this._drawerFlyout) return;\n\n    const drawerFlyout = await this._drawerFlyout;\n    const addTheLookEl = this._addTheLook ? this._addTheLook : this._addTheLookFragment.querySelector('[data-add-the-look]');\n    const addTheLookHeadingEl = this._addTheLookFragment.querySelector('[data-add-the-look-heading]').cloneNode(true);\n    const addTheLookFooterEl = this._addTheLookFragment.querySelector('[data-add-the-look-footer]').cloneNode(true);\n\n    const awaitingAddTheLookEl = Core.Components.awaitComponents(addTheLookEl);\n    const awaitingAddTheLookFooter = Core.Components.awaitComponents(addTheLookFooterEl);\n\n    drawerFlyout.populateHeading(addTheLookHeadingEl, true);\n    drawerFlyout.populateContent(addTheLookEl, true);\n    drawerFlyout.populateFooter(addTheLookFooterEl, true);\n\n    Promise.all([\n      awaitingAddTheLookEl,\n      awaitingAddTheLookFooter,\n    ]).then(([addTheLookComponents, addTheLookFooterComponents]) => {\n      const addTheLookItems = addTheLookComponents.filter(component => component.name === 'add-the-look-item');\n      const addTheLookAtc = addTheLookFooterComponents.find(component => component.name === 'button-action');\n\n      this._initAddTheLookItems(addTheLookItems, addTheLookAtc);\n      this._initAddTheLookAtc(addTheLookAtc, addTheLookItems);\n      this._initAddTheLookNavigation(\n        addTheLookFooterEl,\n        this._hotspotPages,\n      );\n\n      this._updateAddTheLookNotification(addTheLookItems);\n      this._updateAddTheLookAtc(addTheLookAtc, addTheLookItems);\n\n      this._addTheLook = addTheLookEl;\n    });\n  }\n\n  _getAddTheLookItemState(addTheLookItems) {\n    let selectedItems = 0;\n    let itemsRequiringOptionSelection = 0;\n\n    addTheLookItems.forEach(addTheLookItem => {\n      const { optionsSelector, formData } = addTheLookItem;\n\n      if (formData.get('add_item')) {\n        selectedItems++;\n\n        if (!formData.get('id') || (optionsSelector && optionsSelector.getSelectedOptions().some(option => option === ''))) {\n          itemsRequiringOptionSelection++;\n        }\n      }\n    });\n\n    return {\n      selectedItems,\n      itemsRequiringOptionSelection,\n    };\n  }\n\n  _initAddTheLookNavigation(navigationEls, currentPage) {\n    const navigationPrev = navigationEls.querySelector('[data-add-the-look-navigation-previous]');\n    const navigationPagesEl = navigationEls.querySelector('[data-add-the-look-navigation-pages]');\n    const navigationNext = navigationEls.querySelector('[data-add-the-look-navigation-next]');\n\n    navigationPrev.disabled = currentPage === 1;\n    navigationNext.disabled = currentPage === this._hotspotPages;\n\n    navigationPagesEl.innerHTML = navigationPagesEl\n      .innerHTML\n      .replace('||current_page||', currentPage)\n      .replace('||total_pages||', this._hotspotPages);\n\n    this.events.register(navigationPrev, 'mouseover', () => {\n      const previousPage = currentPage - 1;\n      const previousHotspot = this._hotspots\n        .find(({ page }) => page === previousPage.toString());\n\n      if (previousHotspot) {\n        this._retrieveQuickshop(previousHotspot);\n      }\n    });\n\n    this.events.register(navigationNext, 'mouseover', () => {\n      const nextPage = currentPage + 1;\n      const nextHotspot = this._hotspots\n        .find(({ page }) => page === nextPage.toString());\n\n      if (nextHotspot) {\n        this._retrieveQuickshop(nextHotspot);\n      }\n    });\n\n    this.events.register(navigationPrev, 'click', () => {\n      const previousPage = currentPage - 1;\n      const previousHotspot = this._hotspots\n        .find(({ page }) => page === previousPage.toString());\n\n      if (previousHotspot) {\n        this._refreshDrawerWithHotspot(previousHotspot);\n      }\n    });\n\n    this.events.register(navigationNext, 'click', () => {\n      const nextPage = currentPage + 1;\n      const nextHotspot = this._hotspots\n        .find(({ page }) => page === nextPage.toString());\n\n      if (nextPage === this._hotspotPages) {\n        this._refreshDrawerWithAddTheLook();\n      } else if (nextHotspot) {\n        this._refreshDrawerWithHotspot(nextHotspot);\n      }\n    });\n  }\n\n  _initAddTheLookItems(addTheLookItems, addTheLookAtc) {\n    addTheLookItems.forEach(addTheLookItem => {\n      const hotspotId = addTheLookItem.el.parentElement.dataset.addTheLookItemHotspot;\n      const hotspot = this._getHotspotById(hotspotId);\n      const { optionsSelector } = addTheLookItem;\n\n      if (optionsSelector) {\n        if (hotspot.selectedOptions) {\n          optionsSelector\n            .setSelectedOptions(hotspot.selectedOptions);\n        } else {\n          const options = optionsSelector.getSelectedOptions();\n\n          hotspot.selectedOptions = options;\n        }\n      }\n\n      this.events.register(addTheLookItem.el, 'change', () => {\n        this._updateAddTheLookNotification(addTheLookItems);\n        this._updateAddTheLookAtc(addTheLookAtc, addTheLookItems);\n      });\n\n      this.events.register(addTheLookItem.el, 'product:options-change', event => {\n        const { options } = event.detail;\n\n        hotspot.selectedOptions = options;\n\n        this._updateAddTheLookNotification(addTheLookItems);\n        this._updateAddTheLookAtc(addTheLookAtc, addTheLookItems);\n      });\n    });\n  }\n\n  async _updateAddTheLookNotification(addTheLookItems) {\n    if (!this._drawerFlyout) return;\n\n    const drawerFlyout = await this._drawerFlyout;\n    const {\n      selectedItems,\n      itemsRequiringOptionSelection,\n    } = this._getAddTheLookItemState(addTheLookItems);\n\n    const addTheLookNotification = this._addTheLookFragment.querySelector('[data-add-the-look-notification]').cloneNode(true);\n    const notificationError = addTheLookNotification.querySelector('[data-add-the-look-notification-error]');\n    const notificationSelected = addTheLookNotification.querySelector('[data-add-the-look-notification-selected]');\n    const notificationRequiresOptionSelections = addTheLookNotification\n      .querySelector('[data-add-the-look-notification-requires-option-selection]');\n\n    notificationError.remove();\n\n    notificationSelected.innerHTML = notificationSelected\n      .innerHTML\n      .replace('||amount||', selectedItems)\n      .replace('||total_items||', this._validHotspots);\n\n    if (itemsRequiringOptionSelection > 0) {\n      notificationRequiresOptionSelections.innerHTML = notificationRequiresOptionSelections\n        .innerHTML\n        .replace('||amount||', itemsRequiringOptionSelection)\n        .replace('||total_selected||', selectedItems);\n    } else {\n      notificationRequiresOptionSelections.remove();\n    }\n\n    drawerFlyout.populateNotification(addTheLookNotification, true, true);\n  }\n\n  _updateAddTheLookAtc(addTheLookAtc, addTheLookItems) {\n    const {\n      selectedItems,\n      itemsRequiringOptionSelection,\n    } = this._getAddTheLookItemState(addTheLookItems);\n\n    if (selectedItems === 0 || itemsRequiringOptionSelection > 0) {\n      addTheLookAtc.disabled = true;\n      addTheLookAtc.text = this.data.locales.select_variant;\n    } else {\n      addTheLookAtc.disabled = false;\n      addTheLookAtc.text = this.data.locales.add_to_cart;\n    }\n  }\n\n  async _initAddTheLookAtc(addTheLookAtc, addTheLookItems) {\n    if (!this._drawerFlyout) return;\n\n    const drawerFlyout = await this._drawerFlyout;\n    const { el: addTheLookAtcEl } = addTheLookAtc;\n\n    this.events.register(addTheLookAtcEl, 'click', () => {\n      addTheLookAtc.loading = true;\n\n      const formDatas = addTheLookItems.map(addTheLookItem => addTheLookItem.formData);\n      const combinedFormData = {\n        items: [],\n      };\n\n      formDatas.forEach(formData => {\n        if (formData.get('add_item')) {\n          combinedFormData.items.push(Object.fromEntries(formData));\n        }\n      });\n\n      fetch(\n        `${window.PXUTheme.routes.cart_add_url}.js`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(combinedFormData),\n        },\n      )\n        .then(response => (\n          Promise.all([\n            response,\n            fetch(\n              `${window.PXUTheme.routes.cart_url}.js`,\n              {\n                method: 'GET',\n              },\n            ),\n          ])\n        ))\n        .then(([response1, response2]) => Promise.all([response1.json(), response2.json()]))\n        .then(([response, cart]) => {\n          if (response.status) {\n            const addToCartErrorEvent = new CustomEvent('product:add-to-cart:error', { detail: { cart, error: response }, bubbles: true });\n            const addTheLookNotification = this._addTheLookFragment.querySelector('[data-add-the-look-notification]').cloneNode(true);\n            const notificationError = addTheLookNotification.querySelector('[data-add-the-look-notification-error]');\n            const notificationSelected = addTheLookNotification.querySelector('[data-add-the-look-notification-selected]');\n            const notificationRequiresOptionSelections = addTheLookNotification\n              .querySelector('[data-add-the-look-notification-requires-option-selection]');\n\n            this.el.dispatchEvent(addToCartErrorEvent);\n\n            notificationSelected.remove();\n            notificationRequiresOptionSelections.remove();\n            notificationError.innerText = response.description;\n            drawerFlyout.populateNotification(addTheLookNotification, true, true);\n\n            return;\n          }\n\n          if (window.location.pathname === '/cart') {\n            window.location.reload();\n            return;\n          }\n\n          const addToCartEvent = new CustomEvent('product:add-to-cart:success', { detail: { cart, line_item: response }, bubbles: true });\n          this.el.dispatchEvent(addToCartEvent);\n\n          const cartDrawer = Core.Components.getComponent('cart-drawer');\n\n          if (cartDrawer && cartDrawer.data.enabled) {\n            cartDrawer.open(addTheLookAtc.el, true, response.items);\n          } else {\n            window.location = window.PXUTheme.routes.cart_url;\n          }\n        })\n        .catch(err => console.error('Error:', err))\n        .finally(() => { addTheLookAtc.loading = false; });\n    });\n  }\n}\n","export default class VideoPlayer extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    const videoEl = el.querySelector('[data-video]');\n\n    this._video = Core.Media.createVideo(videoEl, this.data.type);\n  }\n\n  /**\n   * Play the video and dispatch video-related events based on resolve/reject from Promise\n   * @public\n   */\n  play() {\n    this._video.play();\n  }\n\n  /**\n   * Pause the video\n   * @public\n   */\n  pause() {\n    this._video.pause();\n  }\n\n  /**\n   * Unload the video on unmount\n   */\n  onDismount() {\n    this._video.unload();\n  }\n}\n","export default class BlockPromoImage extends Core.BlockComponent {\n  constructor(el, context) {\n    super(el, context);\n    this.image = el.querySelector('img');\n  }\n\n  get blockHeight() {\n    return this.image\n      ? `${this.image.naturalHeight}px`\n      : '300px'; /* placeholder value for SVG */\n  }\n}\n","export default class BlockPromoText extends Core.BlockComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    this.contentArea = el.querySelector('[data-content-area]');\n  }\n\n  get blockHeight() {\n    const {\n      paddingTop: containerPaddingTop,\n      paddingBottom: containerPaddingBottom,\n    } = getComputedStyle(this.el);\n    const paddingTopInt = Number(containerPaddingTop.replace('px', ''));\n    const paddingBottomInt = Number(containerPaddingBottom.replace('px', ''));\n    return `${this.contentArea.offsetHeight + paddingTopInt + paddingBottomInt}px`;\n  }\n}\n","export default class BlockPromoEditorial extends Core.BlockComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    this.contentWrapper = el.querySelector('[data-content-wrapper]');\n    this.contentAreas = el.querySelectorAll('[data-content-area]');\n  }\n\n  get blockHeight() {\n    const {\n      paddingTop: containerPaddingTop,\n      paddingBottom: containerPaddingBottom,\n    } = getComputedStyle(this.contentWrapper);\n    const paddingTopInt = Number(containerPaddingTop.replace('px', ''));\n    const paddingBottomInt = Number(containerPaddingBottom.replace('px', ''));\n    const height = [...this.contentAreas]\n      .reduce((acc, curr) => acc + curr.offsetHeight, paddingTopInt + paddingBottomInt);\n    return `${height}px`;\n  }\n}\n","export default class PromotionsGrid extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    this.slideContainer = el.querySelector('[data-promo-grid-slider-list]');\n    if (!this.slideContainer) return;\n\n    this.slides = this.slideContainer.querySelectorAll('[data-promo-grid-slider-item]');\n    this.slideButtonPrevious = el.querySelector('[data-promo-grid-slider-previous]');\n    this.slideButtonNext = el.querySelector('[data-promo-grid-slider-next]');\n    this.currentSlideIndicator = el.querySelector('[data-promo-grid-slider-navigation-current-slide]');\n    this.slideCount = this.data.numberOfSlides;\n    this.largestMobileHeightSetting = Number(this.slideContainer.dataset.promoGridLargestSlide);\n    this.resizeFunc = this._onResize.bind(this);\n    this._observer = new IntersectionObserver(this._handleIntersection.bind(this), {\n      root: this.slideContainer,\n      rootMargin: '0px 0px 0px 0px',\n      threshold: 1.0,\n    });\n\n    this.state = {\n      selectedSlideIndex: 0,\n      numberOfSlidesZeroBased: Number(this.slideCount) - 1,\n    };\n\n    this.events.register(this.slideButtonPrevious, 'click', e => {\n      e.preventDefault();\n      const selectedSlideEl = this.slideContainer.querySelector(`[data-promo-grid-slide-index='${this.state.selectedSlideIndex}']`);\n      const currentSlidePosition = Array.prototype.indexOf.call(this.slides, selectedSlideEl);\n      const nextSlideIndex = currentSlidePosition - 1;\n      const matchingSlide = this.slides[nextSlideIndex];\n\n      if (matchingSlide) {\n        this._scrollIntoView(matchingSlide);\n      }\n    });\n\n    this.events.register(this.slideButtonNext, 'click', e => {\n      e.preventDefault();\n\n      const selectedSlideEl = this.slideContainer.querySelector(`[data-promo-grid-slide-index='${this.state.selectedSlideIndex}']`);\n      const currentSlidePosition = Array.prototype.indexOf.call(this.slides, selectedSlideEl);\n      const nextSlideIndex = currentSlidePosition + 1;\n      const matchingSlide = this.slides[nextSlideIndex];\n\n      if (matchingSlide) {\n        this._scrollIntoView(matchingSlide);\n      }\n    });\n\n    this.events.register(this.slideContainer, 'rimg:load', () => this._adjustSectionHeight());\n\n    this.slides.forEach(slide => this._observer.observe(slide));\n  }\n\n  _onResize() {\n    this._adjustSectionHeight();\n    if (this.selectedBlock) {\n      this._scrollIntoView(this.selectedBlock);\n    }\n  }\n\n  onMount() {\n    if (!this.slideContainer) return;\n    this._adjustSectionHeight();\n    Core.Breakpoints.onChange(this.resizeFunc);\n  }\n\n  onDismount() {\n    super.onDismount();\n    Core.Breakpoints.offChange(this.resizeFunc);\n  }\n\n  onBlockSelect(e) {\n    if (!e) return;\n    this.selectedBlock = e.target;\n    this._scrollIntoView(e.target);\n  }\n\n  /**\n   * Adjusts the section height according to the text content within the block.\n   * The block with the largest amount of text content sets the height of the slider on mobile\n   * On desktop, we calculate the height when the first block in a row is using the 'natural'\n   * height setting so that all text content appears.\n   */\n  _adjustSectionHeight() {\n    const editorialBlocks = this.queryAll('block-promo-editorial');\n    const textBlocks = this.queryAll('block-promo-text');\n    const imageBlocks = this.queryAll('block-promo-image');\n    const blockHeights = [...editorialBlocks, ...textBlocks, ...imageBlocks].map(block => Number(block.blockHeight.replace('px', '')));\n    const largestBlockHeight = Math.max(...blockHeights);\n\n    if (Core.Breakpoints.max('M')) {\n      if (largestBlockHeight > this.largestMobileHeightSetting) {\n        this.slideContainer.style.setProperty('--mobile-height', `${largestBlockHeight}px`);\n      }\n    } else {\n      const gridRows = this._calculateGridRowHeights();\n      this.slideContainer.style.setProperty('--row-heights', gridRows);\n    }\n  }\n\n  /**\n   * Determine grid row heights based on block setting values.\n   * This is specifically for cases where the text content is\n   * taller than the grid row\n   * @returns {String}\n   */\n  _calculateGridRowHeights() {\n    // Figure out which slides are first in the row by tracking how many columns\n    // each block spans. Everytime the column count passes 12 we know that a new row\n    // has begun.\n    let currentColumnInt = 0;\n    let gridRowString = '';\n    const { blockHeight } = Core.Components.getComponent(this.slides[0].children[0]);\n    const firstBlockSettingHeight = this.slides[0].dataset.promoGridSliderItemHeight;\n    gridRowString = firstBlockSettingHeight === 'auto'\n      ? blockHeight\n      : firstBlockSettingHeight;\n\n    this.slides.forEach(slide => {\n      const { promoGridSliderItemWidth, promoGridSliderItemHeight } = slide.dataset;\n      const { blockHeight: currentBlockHeight } = Core.Components.getComponent(slide.children[0]);\n      const blockColumnInt = Number(promoGridSliderItemWidth);\n      let newHeight;\n      currentColumnInt += blockColumnInt;\n\n      if (currentColumnInt > 12) {\n        newHeight = promoGridSliderItemHeight === 'auto'\n          ? currentBlockHeight\n          : promoGridSliderItemHeight;\n\n        gridRowString = `${gridRowString} ${newHeight}`;\n        currentColumnInt = blockColumnInt;\n      }\n    });\n\n    return gridRowString;\n  }\n\n  /**\n   * Callback for IntersectionObserver\n   * Handles updating the selected slide state as well as\n   * the current slide indicator and button disabled state\n   * @param {IntersectionObserverEntry[]} entries -\n   */\n  _handleIntersection(entries) {\n    const intersectingSlideIndex = entries\n      .filter(entry => entry.isIntersecting)\n      .map(({ target }) => Array.prototype.indexOf.call(this.slides, target));\n\n    if (intersectingSlideIndex.length > 0) {\n      this.setState({\n        selectedSlideIndex: intersectingSlideIndex[0],\n      });\n    }\n  }\n\n  /**\n   * Scrolls the next/previous slide into view\n   * @param {HTMLElement} slide\n   */\n  _scrollIntoView(slide) {\n    this.slideContainer.scrollTo({\n      left: slide.offsetLeft,\n      behavior: 'smooth',\n    });\n  }\n\n  onStateChange() {\n    this.currentSlideIndicator.innerText = this.state.selectedSlideIndex + 1;\n    if (this.state.selectedSlideIndex === 0) {\n      this.slideButtonPrevious.setAttribute('disabled', '');\n    } else {\n      this.slideButtonPrevious.removeAttribute('disabled');\n    }\n\n    if (this.state.selectedSlideIndex === this.state.numberOfSlidesZeroBased) {\n      this.slideButtonNext.setAttribute('disabled', '');\n    } else {\n      this.slideButtonNext.removeAttribute('disabled');\n    }\n  }\n}\n","/**\n * @class ProductRecommendations\n * @classdesc The Product Recommendations class handles loading in the recommended products.\n * @extends Core.SectionComponent\n */\nexport default class ProductRecommendations extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    // We want to start loading the products when the user has scrolled within 200px of the section.\n    new IntersectionObserver(this._handleIntersection.bind(this), { rootMargin: '0px 0px 200px 0px' }).observe(el);\n  }\n\n  /**\n   *\n   * Monitors and loads the recommended products if scrolled within 200px of the section\n   * @param {IntersectionObserverEntry[]} entries - This Intersection Observer API interface\n   * describes the intersection between the target element and its root container at a specific\n   * moment of transition.\n   * @param {IntersectionObserver} observer - provides a way to asynchronously observe changes\n   * in the intersection of a target element with an ancestor element or with a top-level\n   * document's viewport.\n   * @private\n   */\n  _handleIntersection(entries, observer) {\n    if (!entries[0].isIntersecting) return;\n    observer.unobserve(this.el);\n\n    fetch(this.data.url)\n      .then(response => response.text())\n      .then(text => {\n        const html = document.createElement('div');\n        html.innerHTML = text;\n        const recommendations = html.querySelector('.product-recommendations');\n        if (recommendations && recommendations.innerHTML.trim().length) {\n          this.el.innerHTML = recommendations.innerHTML;\n        }\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  }\n}\n","/**\n * @class ProductDetails\n * @classdesc A minimal version of the product, limiting details only to the necessary elements.\n *\n * @extends Core.Component\n */\nexport default class ProductDetails extends Core.Component {\n  onMount() {\n    const viewFullDetailsLink = this.query('button-link');\n\n    this.events.register(viewFullDetailsLink.el, 'click', e => {\n      const clickEvent = new CustomEvent('product-details:view-full-details', { bubbles: true, cancelable: true });\n      const isCancelled = !viewFullDetailsLink.el.dispatchEvent(clickEvent);\n\n      if (isCancelled) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    });\n  }\n\n  onDismount() {\n    this.events.unregisterAll();\n  }\n}\n","export default class ProductQuickshop extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    const { product, selectedVariant } = this.data;\n\n    this.state = {\n      product,\n      selectedVariant,\n    };\n\n    this.events.register(el, 'product:variant-change', event => this._onVariantChange(event));\n  }\n\n  get optionsSelector() {\n    return this.query('options-selector');\n  }\n\n  _onVariantChange(event) {\n    const { variant, state } = event.detail;\n\n    if (state !== 'unselected') {\n      this._refreshProduct(variant);\n\n      this.setState({ selectedVariant: variant });\n    }\n  }\n\n  _refreshProduct(variant) {\n    // Update the price component using fetch\n    fetch(`${this.data.url}/async?view=quickshop&variant=${variant.id}&section_id=${this.sectionId}`)\n      .then(response => response.text())\n      .then(responseText => {\n        const html = new DOMParser().parseFromString(responseText, 'text/html');\n        const detailsBlockEl = html.querySelector('[data-type=\"details\"]');\n        const skuBlockEl = html.querySelector('[data-type=\"sku\"]');\n        const priceBlockEl = html.querySelector('[data-type=\"price\"]');\n        const inventoryStatusBlockEl = html.querySelector('[data-type=\"inventory_status\"]');\n        const buyButtonsEl = html.querySelector('[data-type=\"buy_buttons\"]');\n        const sharingEl = html.querySelector('[data-type=\"share\"]');\n\n        if (detailsBlockEl) {\n          this.el.querySelector('[data-type=\"details\"]').innerHTML = detailsBlockEl.innerHTML;\n        }\n\n        if (skuBlockEl) {\n          this.el.querySelector('[data-type=\"sku\"]').innerHTML = skuBlockEl.innerHTML;\n        }\n\n        if (priceBlockEl) {\n          this.el.querySelector('[data-type=\"price\"]').innerHTML = priceBlockEl.innerHTML;\n        }\n\n        if (inventoryStatusBlockEl) {\n          this.el.querySelector('[data-type=\"inventory_status\"]').innerHTML = inventoryStatusBlockEl.innerHTML;\n        }\n\n        if (buyButtonsEl) {\n          this.el.querySelector('[data-type=\"buy_buttons\"]').innerHTML = buyButtonsEl.innerHTML;\n        }\n\n        if (sharingEl) {\n          this.el.querySelector('[data-type=\"share\"]').innerHTML = sharingEl.innerHTML;\n        }\n      });\n  }\n}\n","/**\n * @class ComplementaryProducts\n * @classdesc The class for initializing complementary product recommendations\n *\n * @extends Core.Component\n */\n\n export default class ComplementaryProducts extends Core.Component {\n  onMount() {\n    this.loadRecommendations();\n  }\n\n  /**\n   * Fetches and inserts section content via the Shopify recommendations endpoint\n   */\n  loadRecommendations() {\n    const url = `${this.data.recommendations_route}?section_id=${this.data.section_id}&limit=${this.data.product_recommendation_limit}&product_id=${this.data.product_id}&intent=complementary`;\n    return fetch(url)\n      .then(response => response.text())\n      .then(text => {\n        const html = document.createElement('div');\n        html.innerHTML = text;\n\n        this.el.querySelector('[data-complementary-products-content]').innerHTML = html.querySelector('[data-complementary-products-content]').innerHTML;\n      });\n  }\n}\n","function scrollIntoView(gallery, media) {\n  if (Core.Breakpoints.min('M')) {\n    window.scrollTo({\n      top: media.offsetTop,\n      behavior: 'smooth',\n    });\n  } else {\n    gallery.scrollTo({\n      left: media.offsetLeft,\n      behavior: 'smooth',\n    });\n  }\n}\n\nexport default class ProductGallery extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.gallery = el.querySelector('[data-product-gallery-list]');\n    this.galleryMedia = this.gallery.querySelectorAll('[data-media]');\n    this.zoomableImageBtns = el.querySelectorAll('[data-product-gallery-media-zoom]');\n    this.navigationThumbnails = el.querySelector('[data-product-gallery-navigation-thumbnails]');\n    this.navigationCurrentMedia = el.querySelector('[data-product-gallery-navigation-current-media]');\n    this.navigationArrowPrevious = el.querySelector('[data-product-gallery-navigation-arrow-previous]');\n    this.navigationArrowNext = el.querySelector('[data-product-gallery-navigation-arrow-next]');\n\n    this.state = {\n      selectedMedia: this.data.selected_media,\n    };\n\n    this.zoomableImageBtns.forEach(zoomableImageBtn => {\n      this.events.register(zoomableImageBtn, 'click', e => {\n        const img = e.target.closest('[data-media]');\n\n        if (!img) return;\n\n        const { media: mediaId } = img.dataset;\n        const galleryModal = this.query('product-gallery-modal');\n\n        if (galleryModal) {\n          galleryModal.open(mediaId);\n        }\n      });\n    });\n\n    if (this.galleryMedia.length > 1) {\n      this.events.register(this.navigationThumbnails, 'click', e => {\n        e.preventDefault();\n\n        const btn = e.target.closest('a[data-media]');\n\n        if (!btn) return; // We clicked into the void\n\n        const matchingMedia = this.gallery.querySelector(`[data-media='${btn.dataset.media}']`);\n\n        if (matchingMedia) {\n          scrollIntoView(this.gallery, matchingMedia);\n\n          this.setState({\n            selectedMedia: matchingMedia.dataset.media,\n          });\n        }\n      });\n\n      this.events.register(this.navigationArrowPrevious, 'click', e => {\n        e.preventDefault();\n\n        const selectedMediaEl = this.gallery.querySelector(`[data-media='${this.state.selectedMedia}']`);\n        const currMediaPosition = Array.prototype.indexOf.call(this.galleryMedia, selectedMediaEl);\n        const nextMediaIndex = currMediaPosition - 1;\n        const matchingMedia = this.galleryMedia[nextMediaIndex];\n\n        if (matchingMedia) {\n          scrollIntoView(this.gallery, matchingMedia);\n        }\n      });\n\n      this.events.register(this.navigationArrowNext, 'click', e => {\n        e.preventDefault();\n\n        const selectedMediaEl = this.gallery.querySelector(`[data-media='${this.state.selectedMedia}']`);\n        const currMediaPosition = Array.prototype.indexOf.call(this.galleryMedia, selectedMediaEl);\n        const nextMediaIndex = currMediaPosition + 1;\n        const matchingMedia = this.galleryMedia[nextMediaIndex];\n\n        if (matchingMedia) {\n          scrollIntoView(this.gallery, matchingMedia);\n        }\n      });\n\n      this._intersectionObserver = new IntersectionObserver(this._handleIntersection.bind(this), { root: this.gallery, rootMargin: '0px 0px 0px 0px', threshold: 0.5 });\n      this.galleryMedia.forEach(galleryMedia => this._intersectionObserver.observe(galleryMedia));\n\n      Core.Breakpoints.onChange(this._handleBreakpointChange.bind(this));\n    }\n  }\n\n  onContextChange({ selectedVariant }) {\n    if (!selectedVariant || !selectedVariant.featured_media) return;\n\n    const matchingMedia = this.gallery.querySelector(`[data-media='${selectedVariant.featured_media.id}']`);\n\n    if (matchingMedia) {\n      scrollIntoView(this.gallery, matchingMedia);\n\n      this.setState({\n        selectedMedia: matchingMedia.dataset.media,\n      });\n    }\n  }\n\n  onStateChange(newState) {\n    const shopifyXrEl = this.el.querySelector('[data-gallery-xr]');\n\n    if (!shopifyXrEl) return;\n\n    const matchingMedia = this.gallery.querySelector(`[data-media='${newState.selectedMedia}']`);\n\n    if (matchingMedia.dataset.mediaType === 'model') {\n      shopifyXrEl.dataset.shopifyModel3dId = newState.selectedMedia;\n    } else {\n      shopifyXrEl.dataset.shopifyModel3dId = shopifyXrEl.dataset.defaultModelId;\n    }\n  }\n\n  /**\n   * Called when the component is dismounted\n   */\n  onDismount() {\n    if (this._intersectionObserver) {\n      this._intersectionObserver.disconnect();\n    }\n\n    this.events.unregisterAll();\n  }\n\n  _handleBreakpointChange({ current }) {\n    if (current.value === 'S') {\n      const matchingMedia = this.galleryMedia[0];\n\n      if (matchingMedia) {\n        scrollIntoView(this.gallery, matchingMedia);\n        const matchingMediaIndex = Array.prototype\n          .indexOf.call(this.galleryMedia, matchingMedia);\n        this.navigationArrowPrevious.disabled = matchingMediaIndex === 0;\n        this.navigationCurrentMedia.innerText = matchingMediaIndex + 1;\n        this.navigationArrowNext.disabled = matchingMediaIndex === this.galleryMedia.length - 1;\n\n        this.setState({\n          selectedMedia: matchingMedia.dataset.media,\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles the intersection event of a media item and gallery viewport\n   * Updates the navigation arrows\n   */\n  _handleIntersection(entries) {\n    if (!Core.Breakpoints.max('S')) return;\n\n    const intersectingEntry = entries\n      .reduce((acc, entry) => {\n        let largestIntersectingEntry = acc;\n\n        if (\n          entry.intersectionRatio >= this._intersectionObserver.thresholds\n          && (\n            !largestIntersectingEntry\n            || largestIntersectingEntry.intersectionRatio < entry.intersectionRatio\n          )\n        ) {\n          largestIntersectingEntry = entry;\n        }\n\n        return largestIntersectingEntry;\n      }, null);\n\n    if (!intersectingEntry) return;\n\n    Core.Media.pauseAll();\n\n    const intersectingMediaIndex = Array.prototype\n      .indexOf.call(this.galleryMedia, intersectingEntry.target);\n\n    if (intersectingMediaIndex >= 0) {\n      const currImgPosition = intersectingMediaIndex + 1; // Position is 1-based index\n\n      this.navigationArrowPrevious.disabled = intersectingMediaIndex === 0;\n      this.navigationCurrentMedia.innerText = currImgPosition;\n      this.navigationArrowNext.disabled = intersectingMediaIndex === this.galleryMedia.length - 1;\n\n      this.setState({\n        selectedMedia: intersectingEntry.target.dataset.media,\n      });\n    }\n  }\n}\n","export default class Product extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    const { selectedVariant } = this.data;\n\n    this.state = {\n      selectedVariant,\n    };\n\n    this.events.register(el, 'product:add-to-cart:success', event => this._onAddToCartSuccess(event));\n    this.events.register(el, 'product:variant-change', event => this._onVariantChange(event));\n\n    const productGridEl = el.querySelector('[data-product-grid]');\n    const productGridColumnDetailsEl = el.querySelector('[data-product-grid-column-details]');\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n        const viewportHeight = window.visualViewport.height;\n        const { height, top, bottom } = productGridEl.getBoundingClientRect();\n        const pxInViewport = Math.max(\n          0,\n          top > 0\n            ? Math.min(height, viewportHeight - top)\n            : Math.min(bottom, viewportHeight),\n        );\n\n        if (entry.contentRect.height <= pxInViewport) {\n          productGridEl.dataset.stickyPosition = 'top';\n        } else {\n          productGridEl.dataset.stickyPosition = 'bottom';\n        }\n      }\n    });\n\n    resizeObserver.observe(productGridColumnDetailsEl);\n  }\n\n  _onAddToCartSuccess() {\n    const { selectedVariant } = this.state;\n\n    this._refreshProduct(selectedVariant);\n  }\n\n  _onVariantChange(event) {\n    const { variant, state } = event.detail;\n\n    if (state !== 'unselected') {\n      this._refreshProduct(variant);\n\n      this.setState({ selectedVariant: variant });\n    }\n  }\n\n  _refreshProduct(variant) {\n    // Update the price component using fetch\n    fetch(`${this.data.url}/async?variant=${variant.id}&section_id=${this.sectionId}`)\n      .then(response => response.text())\n      .then(responseText => {\n        const html = new DOMParser().parseFromString(responseText, 'text/html');\n        const skuBlockEl = html.querySelector('[data-type=\"sku\"]');\n        const priceBlockEl = html.querySelector('[data-type=\"price\"]');\n        const inventoryStatusBlockEl = html.querySelector('[data-type=\"inventory_status\"]');\n        const buyButtonsEl = html.querySelector('[data-type=\"buy_buttons\"]');\n        const recipientFormEl = html.querySelector('[data-recipient-form]');\n        const sharingEl = html.querySelector('[data-type=\"share\"]');\n\n        if (skuBlockEl) {\n          this.el.querySelector('[data-type=\"sku\"]').innerHTML = skuBlockEl.innerHTML;\n        }\n\n        if (priceBlockEl) {\n          this.el.querySelector('[data-type=\"price\"]').innerHTML = priceBlockEl.innerHTML;\n        }\n\n        if (inventoryStatusBlockEl) {\n          this.el.querySelector('[data-type=\"inventory_status\"]').innerHTML = inventoryStatusBlockEl.innerHTML;\n        }\n\n        if (buyButtonsEl) {\n          this.el.querySelector('[data-type=\"buy_buttons\"]').innerHTML = buyButtonsEl.innerHTML;\n        }\n\n        if (sharingEl) {\n          this.el.querySelector('[data-type=\"share\"]').innerHTML = sharingEl.innerHTML;\n        }\n      });\n  }\n}\n","export default class PageAgeGate extends Core.SectionComponent {\n  onSelect() {\n    const ageGate = Core.Components.getComponent('age-gate-page');\n\n    if (!ageGate) return;\n    \n    ageGate.open();\n  }\n\n  onDeselect() {\n    const ageGate = Core.Components.getComponent('age-gate-page');\n    \n    if (!ageGate) return;\n\n    ageGate.close();\n  }\n}\n","export default class MainSearch extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    this.filterResults = el.querySelector('[data-filter-results]');\n\n    this.events.register(window, 'popstate', e => this.onHistoryChange(e));\n  }\n\n  onMount() {\n    this.filters = this.query('faceted-filters');\n    this.mobileFilters = this.query('faceted-filters-mobile');\n\n    if (this.filters) {\n      this.events.register(this.filters.el, 'filter:update', e => {\n        const { searchParams } = e.detail;\n\n        this._updateSectionContent(searchParams);\n\n        history.pushState({ searchParams }, '', `${window.location.pathname}${searchParams && '?'.concat(searchParams)}`);\n      });\n    }\n\n    if (this.mobileFilters) {\n      this.events.register(this.mobileFilters.el, 'filter:update', e => {\n        const { searchParams } = e.detail;\n\n        this._updateSectionContent(searchParams);\n\n        history.pushState({ searchParams }, '', `${window.location.pathname}${searchParams && '?'.concat(searchParams)}`);\n      });\n    }\n  }\n\n  onDismount() {\n    this.events.unregisterAll();\n  }\n\n  onHistoryChange(e) {\n    // Sometimes, a user might copy + paste a URL that has a search query in it.\n    // Or, they might press 'Enter' to submit the search form.\n    // In both cases, we want to preserve that initial state, which can be accessed via\n    // `window.location.search` on the \"last\" press of the \"back\" button\n    // (when state object is empty)\n    this._updateSectionContent(e.state\n      ? e.state.searchParams\n      : window.location.search.substring(1));\n  }\n\n  _updateSectionContent(searchParams) {\n    const url = `${window.location.pathname}?section_id=${this.sectionId}&${searchParams}`;\n\n    fetch(url)\n      .then(response => response.text())\n      .then(html => {\n        const newDom = new DOMParser().parseFromString(html, 'text/html');\n\n        this.filterResults.innerHTML = newDom.querySelector('[data-filter-results]').innerHTML;\n\n        this.filters.updateFilters(newDom);\n        this.mobileFilters.updateFilters(newDom);\n      });\n  }\n}\n","import debounce from 'just-debounce';\n\n/**\n * @class\n * @classdesc This component handles opening the drawer filter menu (usually used on mobile).\n *\n * @extends Core.Component\n */\nexport default class DrawerFilters extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.drawerFiltersEl = el.querySelector('[data-drawer-filters]');\n    this.closeButton = el.querySelector('[data-drawer-filters-close]');\n    this.clearButton = el.querySelector('[data-drawer-filters-clear]');\n    this.filterForm = el.querySelector('[data-filter-form]');\n    this.filters = el.querySelector('[data-filter-disclosures]');\n    this.emptyFilters = el.querySelector('[data-filters-empty]');\n    this.summaryElements = this.filters.querySelectorAll('[data-filter-summary]');\n    this.viewResultsButton = el.querySelector('[data-drawer-view-results] button');\n    this.searchInput = el.querySelector('[data-search-input]');\n\n    this.summaryClickEvents = {};\n    this.contentCloseEvents = {};\n    this.summaryAnimations = {};\n\n    this.formChange = this._formChange.bind(this);\n  }\n\n  onMount() {\n    this.drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (!this.drawerModal) return;\n\n    this.drawerFlyout = this.drawerModal.createFlyout(this.drawerFiltersEl);\n  }\n\n  onDismount() {\n    super.onDismount();\n\n    if (this.drawerFlyout) {\n      this.drawerFlyout.then(drawerFlyout => drawerFlyout.destroy());\n    }\n  }\n\n  /**\n   * Creates a flyout by moving the content into a drawer and then opens the navigation drawer\n   *\n   * @param {HTMLElement} trigger The trigger that opened this drawer.\n   */\n  async open(trigger) {\n    if (!this.drawerFlyout) return;\n\n    const drawerFlyout = await this.drawerFlyout;\n\n    // We only register the events once the flyout is opening for the first time, because when\n    // we create the flyout, the element is moved and thus re-mounted. If we called this in\n    // onMount or the constructor, the events would be created twice.\n    this.events.register(this.filterForm, 'input', debounce(e => this._formChange(e), 500));\n    this.events.register(this.closeButton, 'click', () => this.drawerModal.closeFlyout(drawerFlyout));\n    this.events.register(this.viewResultsButton, 'click', e => {\n      e.preventDefault();\n      this.drawerModal.closeFlyout(drawerFlyout);\n    });\n    this.events.register(window, 'keyup', e => { if (e.key === 'Escape') this.closeAllDisclosures(); });\n    this.summaryElements.forEach(summaryElement => this._initSummary(summaryElement));\n\n    this.drawerFiltersEl.dataset.ready = 'true';\n\n    // Close all disclosures before opening again.\n    this.closeAllDisclosures();\n    this.drawerModal.openFlyout(drawerFlyout, trigger);\n  }\n\n  /**\n   * Main entrypoint to update all of the components of the drawer filters with any changes\n   * based on the newDom.\n   *\n   * @param {HTMLElement} newDom - The new DOM which should include a new version of the drawer\n   * filters html.\n   */\n  updateFilters(newDom) {\n    const newDrawerDom = newDom.querySelector('[data-drawer-filters]');\n\n    this.clearButton.href = newDom.querySelector('[data-drawer-filters-clear]').href;\n    this.viewResultsButton.innerHTML = newDom.querySelector('[data-drawer-view-results] button').innerHTML;\n\n    this.emptyFilters.classList = newDrawerDom.querySelector('[data-filters-empty]').classList;\n\n    this._updateDisclosures(newDrawerDom);\n  }\n\n  /**\n   * Closes all disclosures that were opened within the flyout.\n   */\n  closeAllDisclosures() {\n    this.summaryElements = this.filters.querySelectorAll('[data-filter-summary]');\n    this.summaryElements.forEach(summaryElement => {\n      const { parentElement } = summaryElement;\n      const { key } = parentElement.dataset;\n      if (this.summaryAnimations[key]) {\n        this.summaryAnimations[key].animateTo('closed').then(() => {\n          parentElement.open = false;\n        });\n      }\n    });\n  }\n\n  /**\n   * Triggered when a summary element is clicked and should open the content of the details\n   * with another drawer.\n   *\n   * @param {Summary} summaryElement The summary element that has received a click event\n   * @private\n   */\n  _initSummary(summaryElement) {\n    const { parentElement } = summaryElement;\n    const { key } = parentElement.dataset;\n    const contentElement = summaryElement.nextElementSibling;\n    const backButton = contentElement.querySelector('[data-filter-back-button]');\n\n    this.summaryAnimations[key] = Core.Animations.transition({ el: contentElement, state: 'closed' });\n\n    this.summaryClickEvents[key] = this.events.register(summaryElement, 'click', () => {\n      this.summaryAnimations[key].animateTo('open').then(() => {\n        Core.A11y.trapFocus(contentElement);\n      });\n    });\n\n    this.contentCloseEvents[key] = this.events.register(backButton, 'click', async e => {\n      if (!this.drawerFlyout) return;\n\n      const drawerFlyout = await this.drawerFlyout;\n\n      e.preventDefault();\n      this.summaryAnimations[key]\n        .animateTo('closed')\n        .then(() => {\n          parentElement.open = false;\n          drawerFlyout.trapFocus();\n          summaryElement.focus();\n        });\n    });\n  }\n\n  /**\n   * Removes all of the actions and animations that are stored for the summary element click event.\n   *\n   * @param {Summary} summaryElement The element to be removed.\n   * @private\n   */\n  _removeSummaryActions(summaryElement) {\n    const { key } = summaryElement.parentElement.dataset;\n\n    delete this.summaryAnimations[key];\n\n    if (this.summaryClickEvents[key]) {\n      this.events.unregister(this.summaryClickEvents[key]);\n    }\n\n    if (this.contentCloseEvents[key]) {\n      this.events.unregister(this.contentCloseEvents[key]);\n    }\n  }\n\n  /**\n   * Triggered when one of the filters are updated in the form.\n   * Dispatches an event called `filter:update` which passes along `searchParams` from the\n   * filters form.\n   *\n   * @param {Event} e - The event sent by the form being updated.\n   * @private\n   */\n  _formChange(e) {\n    e.preventDefault();\n\n    const currentTarget = e.target;\n\n    const formData = new FormData(currentTarget.closest('form'));\n    const searchParams = new URLSearchParams(formData).toString();\n\n    // Fire off event to submit the new params to the parent section\n    const updateEvent = new CustomEvent('filter:update', { detail: { searchParams } });\n    this.el.dispatchEvent(updateEvent);\n  }\n\n  /**\n   * Updates all of the filter disclosures with a newDom.\n   * Will only update disclosures if focus is not currently within the disclosure so the user does\n   * not lose focus.\n   *\n   * @param {HTMLElement} newDom - The new DOM which should include a new version of the faceted\n   * filters html.\n   * @private\n   */\n  _updateDisclosures(newDom) {\n    const currentDisclosure = document.activeElement && document.activeElement.closest('[data-filter-disclosure]');\n    const existingDisclosures = this.filters.querySelectorAll('[data-filter-disclosure]');\n    const filterDisclosures = newDom.querySelectorAll('[data-filter-disclosure]');\n\n    if (this.searchInput) {\n      this.searchInput.value = newDom.querySelector('[data-search-input]').value;\n    }\n\n    // Remove any disclosures that don't exist anymore in the new Dom\n    existingDisclosures.forEach(disclosure => {\n      if (!newDom.querySelector(`[data-filter-disclosure][data-key=\"${disclosure.dataset.key}\"]`)) {\n        this._removeSummaryActions(disclosure.querySelector('[data-filter-summary]'));\n        disclosure.remove();\n      }\n    });\n\n    // Update the existing Dom with the updated and new disclosures from the new Dom\n    filterDisclosures.forEach(disclosure => {\n      const oldDisclosure = this.filterForm.querySelector(`[data-filter-disclosure][data-key=\"${disclosure.dataset.key}\"]`);\n\n      if (!oldDisclosure) {\n        this.filters.appendChild(disclosure);\n        this._initSummary(disclosure.querySelector('[data-filter-summary]'));\n      } else {\n        if (!currentDisclosure || disclosure.dataset.key !== currentDisclosure.dataset.key) {\n          const filterContent = oldDisclosure.querySelector('[data-filter-form-items]');\n          filterContent.innerHTML = disclosure.querySelector('[data-filter-form-items]').innerHTML;\n        }\n\n        const filterSummary = oldDisclosure.querySelector('[data-filter-summary]');\n        filterSummary.innerHTML = disclosure.querySelector('[data-filter-summary]').innerHTML;\n\n        const filterHeader = oldDisclosure.querySelector('[data-filter-heading]');\n        filterHeader.innerHTML = disclosure.querySelector('[data-filter-heading]').innerHTML;\n\n        const resetButton = oldDisclosure.querySelector('[data-filter-reset]');\n        resetButton.href = disclosure.querySelector('[data-filter-reset]').href;\n      }\n    });\n  }\n}\n","/**\n * @class FilterActiveMobile\n * @classdesc This class handles the active filter buttons that are used for mobile filtering.\n *\n * @extends Core.Component\n */\nexport default class FiltersActiveMobile extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.activeFilterList = el.querySelector('[data-mobile-active-filter-list]');\n  }\n\n  /**\n   * This will update the buttons based on the filters being updated asynchronously.\n   *\n   * @param {HTMLElement} newDom The new elements to update.\n   */\n  updateFilters(newDom) {\n    this.el.classList = newDom.querySelector('[data-filters-active-mobile]').classList;\n    this.activeFilterList.innerHTML = newDom.querySelector('[data-mobile-active-filter-list]').innerHTML;\n  }\n}\n","/**\n * @class FilterButtonsMobile\n * @classdesc This class handles the buttons that are used for mobile filtering.\n *\n * @extends Core.Component\n */\nexport default class FiltersButtonsMobile extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.mobileFiltersButton = el.querySelector('[data-mobile-filters-button]');\n  }\n\n  onMount() {\n    this.sortByButton = this.query('disclosure');\n\n    if (this.mobileFiltersButton) {\n      this.events.register(this.mobileFiltersButton, 'click', e => {\n        e.stopPropagation();\n        const openEvent = new CustomEvent('filter:open', { detail: { trigger: this.mobileFiltersButton } });\n        this.el.dispatchEvent(openEvent);\n      });\n    }\n\n    if (this.sortByButton) {\n      this.events.register(this.sortByButton.el, 'input', () => {\n        const searchParams = new URLSearchParams(window.location.search);\n        searchParams.set('sort_by', this.sortByButton.getValue());\n\n        // Fire off event to submit the new params to the parent section\n        const updateEvent = new CustomEvent('filter:update', { detail: { searchParams: searchParams.toString() } });\n        this.el.dispatchEvent(updateEvent);\n      });\n    }\n  }\n\n  /**\n   * This will update the buttons based on the filters being updated asynchronously.\n   *\n   * @param {HTMLElement} newDom The new elements to update.\n   */\n  updateFilters(newDom) {\n    this.mobileFiltersButton.innerHTML = newDom.querySelector('[data-mobile-filters-button]').innerHTML;\n\n    if (newDom.querySelector('[data-results-count]').dataset.resultsCount === '0') {\n      this.el.classList.add('hidden');\n    } else {\n      this.el.classList.remove('hidden');\n    }\n  }\n}\n","/**\n * @class FacetedFiltersMobile\n * @classdesc The faceted filters mobile component which is included on collection and search pages\n * to allow merchants to filter lists of products dynamically. This class allows filters to be\n * updated without refreshing the page.\n *\n * @extends Core.Component\n */\nexport default class FacetedFiltersMobile extends Core.Component {\n  onMount() {\n    this.filterButtons = this.query('filters-buttons-mobile');\n    this.activeFilters = this.query('filters-active-mobile');\n    this.drawerFilters = this.query('drawer-filters');\n\n    if (this.filterButtons && this.drawerFilters) {\n      this.events.register(this.filterButtons.el, 'filter:open', e => {\n        const { trigger } = e.detail;\n        this.drawerFilters.open(trigger);\n      });\n\n      this.events.register(this.drawerFilters.el, 'filter:update', e => {\n        const updateEvent = new CustomEvent('filter:update', { detail: e.detail });\n        this.el.dispatchEvent(updateEvent);\n      });\n\n      this.events.register(this.filterButtons.el, 'filter:update', e => {\n        const updateEvent = new CustomEvent('filter:update', { detail: e.detail });\n        this.el.dispatchEvent(updateEvent);\n      });\n    }\n  }\n\n  /**\n   * Main entrypoint to update all of the components of the mobile filters with any changes\n   * based on the newDom.\n   *\n   * @param {HTMLElement} newDom - The new DOM which should include a new version of the mobile\n   * filters html.\n   */\n  updateFilters(newDom) {\n    const newFilterDom = newDom.querySelector('[data-faceted-filters-mobile]');\n\n    if (this.filterButtons) {\n      this.filterButtons.updateFilters(newFilterDom);\n      this.activeFilters.updateFilters(newFilterDom);\n      this.drawerFilters.updateFilters(newFilterDom);\n    }\n  }\n}\n","import debounce from 'just-debounce';\n\n/**\n * @class FacetedFilters\n * @classdesc The faceted filters component which is included on collection and search pages to\n * allow merchants to filter lists of products dynamically. This class allows filters to be\n * updated without refreshing the page.\n *\n * @extends Core.Component\n */\nexport default class FacetedFilters extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.filterForm = el.querySelector('[data-filter-form]');\n    this.searchInput = el.querySelector('[data-filter-search-input]');\n    this.filters = el.querySelector('[data-filter-disclosures]');\n\n    this.disclosures = el.querySelectorAll('[data-filter-disclosure]');\n    this.sortBy = el.querySelector('[data-filters-sort]');\n    this.resultCount = el.querySelector('[data-filter-result-count]');\n    this.activeFilters = el.querySelector('[data-active-filters]');\n\n    this.formChange = this._formChange.bind(this);\n\n    this.events.register(this.filterForm, 'input', debounce(e => this._formChange(e), 2000));\n    this.events.register(window, 'keyup', e => { if (e.key === 'Escape') this._closeAllDisclosures(); });\n    this.events.register(document, 'click', e => this._closeAllDisclosures(e));\n    this.disclosures.forEach(disclosure => this._setupDisclosure(disclosure));\n  }\n\n  /**\n   * Main entrypoint to update all of the components of the faceted filters with any changes\n   * based on the newDom.\n   *\n   * @param {HTMLElement} newDom - The new DOM which should include a new version of the faceted\n   * filters html.\n   */\n  updateFilters(newDom) {\n    const newFilterDom = newDom.querySelector('[data-faceted-filters]');\n\n    if (this.searchInput && document.activeElement !== this.searchInput.querySelector('input[type=\"search\"]')) {\n      this.searchInput.innerHTML = newFilterDom.querySelector('[data-filter-search-input]').innerHTML;\n    }\n\n    if (this.resultCount) {\n      this.resultCount.innerHTML = newFilterDom.querySelector('[data-filter-result-count]').innerHTML;\n    }\n\n    if (this.activeFilters) {\n      const newActiveFilters = newFilterDom.querySelector('[data-active-filters]');\n      this.activeFilters.innerHTML = newActiveFilters.innerHTML;\n      this.activeFilters.dataset.activeFiltersCount = newActiveFilters.dataset.activeFiltersCount;\n\n      if (newActiveFilters.dataset.activeFiltersCount === '0') {\n        this.activeFilters.classList.add('hidden');\n      } else {\n        this.activeFilters.classList.remove('hidden');\n      }\n    }\n\n    this._updateDisclosures(newFilterDom);\n  }\n\n  /**\n   * Triggered when one of the filters are updated in the form.\n   * Dispatches an event called `filter:update` which passes along `searchParams` from the\n   * filters form.\n   *\n   * @param {Event} e - The event sent by the form being updated.\n   * @private\n   */\n  _formChange(e) {\n    e.preventDefault();\n\n    const currentTarget = e.target;\n\n    const formData = new FormData(currentTarget.closest('form'));\n    const searchParams = new URLSearchParams(formData).toString();\n\n    // Fire off event to submit the new params to the parent section\n    const updateEvent = new CustomEvent('filter:update', { detail: { searchParams } });\n    this.el.dispatchEvent(updateEvent);\n  }\n\n  /**\n   * Updates all of the filter disclosures with a newDom.\n   * Will only update disclosures if focus is not currently within the disclosure so the user does\n   * not lose focus.\n   *\n   * @param {HTMLElement} newDom - The new DOM which should include a new version of the faceted\n   * filters html.\n   * @private\n   */\n  _updateDisclosures(newDom) {\n    const currentDisclosure = document.activeElement && document.activeElement.closest('[data-filter-disclosure]');\n    const existingDisclosures = this.el.querySelectorAll('[data-filter-disclosure]');\n    const filterDisclosures = newDom.querySelectorAll('[data-filter-disclosure]');\n\n    // Remove any disclosures that don't exist anymore in the new Dom\n    existingDisclosures.forEach(disclosure => {\n      if (!newDom.querySelector(`[data-filter-disclosure][data-index=\"${disclosure.dataset.index}\"]`)) {\n        disclosure.remove();\n      }\n    });\n\n    // Update the existing Dom with the updated and new disclosures from the new Dom\n    filterDisclosures.forEach(disclosure => {\n      const oldDisclosure = this.filterForm.querySelector(`[data-filter-disclosure][data-index=\"${disclosure.dataset.index}\"]`);\n\n      if (!oldDisclosure) {\n        this.filters.appendChild(disclosure);\n        this._setupDisclosure(disclosure);\n      } else if (!currentDisclosure || disclosure.dataset.index !== currentDisclosure.dataset.index) {\n        oldDisclosure.innerHTML = disclosure.innerHTML;\n      } else {\n        const filterSummary = oldDisclosure.querySelector('[data-filter-summary]');\n        const filterHeader = oldDisclosure.querySelector('[data-filter-header]');\n\n        filterSummary.innerHTML = disclosure.querySelector('[data-filter-summary]').innerHTML;\n        filterHeader.innerHTML = disclosure.querySelector('[data-filter-header]').innerHTML;\n      }\n    });\n\n    this.disclosures = this.el.querySelectorAll('[data-filter-disclosure]');\n\n    // Update the sort by select box\n    if (this.sortBy) {\n      if (!document.activeElement || !document.activeElement.closest('[data-filters-sort]')) {\n        const newSort = newDom.querySelector('[data-filters-sort]');\n        if (newSort) {\n          this.sortBy.innerHTML = newSort.innerHTML;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets up the events to handle on the disclosure.\n   *\n   * @param {HTMLElement} disclosure The disclosure to be set up\n   * @private\n   */\n  _setupDisclosure(disclosure) {\n    this.events.register(disclosure, 'focusout', e => {\n      // Using e.relatedTarget works best here, but the label of any checkboxes within\n      // the disclosures should have a tabindex=\"-1\" to ensure the correct target is used\n      // when clicked.\n      if (!disclosure.contains(e.relatedTarget)) {\n        disclosure.open = false;\n      }\n    });\n  }\n\n  /**\n   * Closes all of the open disclosures. Will keep a disclosure open if the trigger's\n   * target was inside it.\n   * @param {Event} event The event that is triggering the close.\n   * @private\n   */\n  _closeAllDisclosures(event) {\n    this.disclosures.forEach(disclosure => {\n      if (disclosure.open) {\n        if (!event || event.target.closest('[data-filter-disclosure]') !== disclosure) {\n          disclosure.open = false;\n          disclosure.querySelector('summary').focus();\n        }\n      }\n    });\n  }\n}\n","/**\n * @class MainCollection\n * @classdesc The canonical collection section component intended for the collection page.\n *\n * @extends Core.SectionComponent\n */\nexport default class MainCollectionGrid extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    this.productList = el.querySelector('[data-product-list]');\n\n    this.events.register(window, 'popstate', e => this._onHistoryChange(e));\n  }\n\n  onMount() {\n    this.filters = this.query('faceted-filters');\n    this.mobileFilters = this.query('faceted-filters-mobile');\n\n    if (this.filters) {\n      this.events.register(this.filters.el, 'filter:update', e => {\n        const { searchParams } = e.detail;\n\n        this._updateSectionContent(searchParams);\n\n        history.pushState({ searchParams }, '', `${window.location.pathname}${searchParams && '?'.concat(searchParams)}`);\n      });\n    }\n\n    if (this.mobileFilters) {\n      this.events.register(this.mobileFilters.el, 'filter:update', e => {\n        const { searchParams } = e.detail;\n\n        this._updateSectionContent(searchParams);\n\n        history.pushState({ searchParams }, '', `${window.location.pathname}${searchParams && '?'.concat(searchParams)}`);\n      });\n    }\n  }\n\n  onDismount() {\n    this.events.unregisterAll();\n  }\n\n  /**\n   * This handles what happens when the history of the browser changes. This it triggered when the\n   * back button is hit in the browser.\n   *\n   * @param {Event} e - The event sent by the browser changing its history\n   * (usually using the back/forward buttons).\n   * @private\n   */\n  _onHistoryChange(e) {\n    this._updateSectionContent(e.state ? e.state.searchParams : '');\n  }\n\n  /**\n   * This handles a call to update the section's content (including filters) when the filters in the\n   * section are updated or history changes on the page.\n   *\n   * @param {String} searchParams - The URL params that are used to filter and sort the list of\n   * products on the page.\n   * @private\n   */\n  _updateSectionContent(searchParams) {\n    const url = `${window.location.pathname}?section_id=${this.sectionId}&${searchParams}`;\n\n    fetch(url)\n      .then(response => response.text())\n      .then(html => {\n        const newDom = new DOMParser().parseFromString(html, 'text/html');\n\n        this.productList.innerHTML = newDom.querySelector('[data-product-list]').innerHTML;\n\n        this.filters.updateFilters(newDom);\n        this.mobileFilters.updateFilters(newDom);\n      });\n  }\n}\n","/**\n * @class ProductCrossSellSlider\n * @classdesc This component fetches content for the cross-sell feature\n *\n * @extends Core.Component\n */\n\nexport default class ProductCrossSellSlider extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n  }\n\n  onMount() {\n    let sectionId;\n\n    const cart = this.closest('main-cart');\n\n    if (cart) {\n      sectionId = cart.sectionId;\n    }\n\n    const productId = this.data.product_id;\n\n    if (sectionId && productId) {\n      this\n        .fetchRecommendations(sectionId, productId);\n    }\n  }\n\n  /**\n   * Fetches section content via the Shopify recommendations endpoint\n   * @param {string} sectionId - the ID of the section to fetch\n   * @param {string} productId - the ID of the product on which to base recommendations\n   */\n  fetchRecommendations(sectionId, productId) {\n    const url = `${this.data.recommendations_route}?section_id=${sectionId}&product_id=${productId}&limit=4`;\n    return fetch(url)\n      .then(response => response.text())\n      .then(text => {\n        const html = document.createElement('div');\n        html.innerHTML = text;\n\n        this.el.querySelector('[data-cross-sell-content]').innerHTML = html.querySelector('[data-cross-sell-content]').innerHTML;\n      });\n  }\n}\n","import debounce from 'just-debounce';\n\n/**\n * @class MainCart\n * @classdesc The cart section is used to handle the cart page functionality.\n *\n * @extends Core.SectionComponent\n */\nexport default class MainCart extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    this.headerCartCount = el.querySelector('[data-header-cart-count]');\n    this.cartPage = el.querySelector('[data-cart-page]');\n    this.cartErrors = el.querySelector('[data-cart-errors]');\n    this.cartForm = el.querySelector('[data-cart-form]');\n    this.cartContents = el.querySelector('[data-cart-contents]');\n    this.cartItems = el.querySelector('[data-cart-items]');\n    this.cartItemErrors = el.querySelectorAll('[data-cart-item-error]');\n    this.cartTotal = el.querySelector('[data-cart-total]');\n\n\n    if (!this.cartForm) return;\n\n    this.cartItemCount = parseInt(this.cartForm.dataset.cartCount, 10);\n    this.cartId = this.cartContents.dataset.id;\n  }\n\n  /**\n   * On mount, we create the event listeners for the cart section.\n   */\n  onMount() {\n    if (!this.cartForm) return;\n    this._createListeners();\n  }\n\n  /**\n   * Creates event listeners used to detect changes to line item quantity changes\n   *\n   * @private\n   */\n  _createListeners() {\n    const cartRows = this.cartForm.querySelectorAll('[data-cart-row]');\n\n    // Bind quantity selectors\n    cartRows.forEach(row => {\n      const rowId = row.id;\n      const rowKey = row.dataset.cartItemKey;\n      const quantitySelector = this.query('quantity-selector', rowKey);\n      const buttonRemoveItem = row.querySelector('[data-remove]');\n\n\n      if (quantitySelector) {\n        this.events.register(quantitySelector.el, 'quantity:update', e => {\n          if (e.detail.quantity === 0) {\n            this._removeRow({ id: rowId, key: rowKey, row: row, event: e });\n          } else {\n            this._updateCart(rowId, rowKey, e);\n          }\n        });\n      }\n\n      if (buttonRemoveItem) {\n        this.events.register(buttonRemoveItem, 'click', e => {\n          e.preventDefault();\n          this._removeRow({ id: rowId, key: rowKey, row: row, event: 0 });\n        });\n      }\n    });\n\n    this.events.register(document, 'cart:update', e => {\n      if (this.headerCartCount) {\n        this.headerCartCount.innerHTML = e.detail.count;\n      }\n    });\n\n    const cartNotes = this.query('input-textarea');\n\n    if (cartNotes) {\n      const notesTextArea = cartNotes.el.querySelector('textarea');\n      this.events.register(notesTextArea, 'change', debounce(e => this._updateNote(e), 500));\n    }\n  }\n\n  /**\n   * Updates the cart with the new quantity and refreshes the innerHTML content.\n   *\n   * @param {number} id - The id of the line item to update.\n   * @param {number} rowKey- The key of the line item to update.\n   * @param {object} e - The event object triggered.\n   * @private\n   */\n  _updateCart(rowId, rowKey, e) {\n    let quantity;\n    if (e.detail !== undefined) {\n      ({ quantity } = e.detail);\n    } else {\n      quantity = 0;\n    }\n\n    const body = JSON.stringify({\n      line: rowId,\n      quantity,\n      sections: this.cartPage.dataset.id,\n      sections_url: window.location.pathname,\n    });\n\n    fetch(window.PXUTheme.routes.cart_change_url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n      ...{ body },\n    })\n      .then(response => response.text())\n      .then(state => {\n        const parsedState = JSON.parse(state);\n        const newDom = new DOMParser().parseFromString(parsedState.sections[this.sectionId], 'text/html');\n\n        // Update the cart page content\n        this._clearErrors();\n\n        if (parsedState.item_count > 0) {\n          if (this.cartItems) {\n            this.cartItems.innerHTML = newDom.querySelector('[data-cart-items]').innerHTML;\n          }\n\n          if (this.cartTotal) {\n            this.cartTotal.innerHTML = newDom.querySelector('[data-cart-total]').innerHTML;\n          }\n\n          const recommendationsSlider = this.query('product-cross-sell-slider');\n\n          if (recommendationsSlider) {\n            const productId = parsedState.items[0].product_id;\n            const sectionId = this.sectionId;\n\n            recommendationsSlider.fetchRecommendations(sectionId, productId);\n          }\n        } else if (this.cartPage) {\n          this.cartPage.innerHTML = newDom.querySelector('[data-cart-page]').innerHTML;\n        }\n\n\n        // Return data for inventory handling\n        return { key: rowKey, count: parsedState.item_count };\n      }).then(data => {\n        const targetSelector = this.query('quantity-selector', rowKey);\n        const idTarget = this.cartForm.querySelector(`[data-cart-row=\"${rowId}\"]`);\n\n        if (targetSelector && e.detail !== undefined) {\n          // Set focus back on the original element\n          targetSelector.focus(e.detail.actionName);\n        } else if (idTarget) {\n          // If original key is gone from the dom lets focus on the new one in it's row\n          const targetInput = idTarget.querySelector('[data-quantity-input]');\n          targetInput.focus();\n        } else {\n          // If the original key and row is gone from the dom lets focus on the next one above it\n          for (let i = rowId; i > 0; i--) {\n            const target = this.cartForm.querySelector(`[data-cart-row=\"${i}\"]`);\n\n            if (target) {\n              const targetInput = target.querySelector('[data-quantity-input]');\n              targetInput.focus();\n\n              break;\n            }\n          }\n        }\n\n        this._handleInventory(data.key, data.count);\n        this._removeListeners();\n        this._createListeners();\n      })\n      .catch(error => {\n        this._handleError(error);\n      });\n  }\n\n  /**\n   * Handles error messaging for cart quantity changes.\n   *\n   * @param {number} rowKey - The id of the line item to update.\n   * @param {number} itemCount - The current quantity of items in the cart\n   * @private\n   */\n  _handleInventory(rowKey, itemCount) {\n    if (this.cartItemCount === itemCount) {\n      const targetSelector = this.query('quantity-selector', rowKey);\n      const inputValue = targetSelector.getValue();\n\n      document.querySelector(`[data-cart-item-error=\"${rowKey}\"]`).innerHTML = this.data.locales.quantityError.replace('{{ quantity }}', inputValue);\n    }\n\n    this.cartItemCount = itemCount;\n\n    const updateEvent = new CustomEvent('cart:update', { detail: { count: this.cartItemCount }, bubbles: true });\n    this.el.dispatchEvent(updateEvent);\n  }\n\n  /**\n   * Handles general error messaging.\n   *\n   * @private\n   */\n  _handleError(error) {\n    this.cartErrors.style.display = 'block';\n    this.cartErrors.innerHTML = this.data.locales.error;\n    this._removeListeners();\n    this._createListeners();\n\n    console.error(error);\n  }\n\n  /**\n   * Clear error messaging from the cart section.\n   *\n   * @private\n   */\n  _clearErrors() {\n    this.cartErrors.style.display = 'none';\n    this.cartErrors.innerHTML = '';\n    this.cartItemErrors.forEach(error => {\n      error.innerHTML = '';\n    });\n  }\n\n  /**\n   * Animates the removal of items from the cart\n   *\n   * @param {object} data - The data object containing the id, key, and row of the item to remove.\n   * @private\n   */\n  _removeRow(data) {\n    const { id, key, row, event } = data;\n    const animateRemoval = Core.Animations.transition({ el: row, state: 'active' });\n    row.style.setProperty('--open-height', `${row.scrollHeight}px`);\n    animateRemoval.animateTo('fade')\n      .then(() => {\n        animateRemoval.animateTo('remove')\n          .then(() => {\n            row.remove();\n            this._updateCart(id, key, event);\n          });\n      });\n  }\n\n  _updateNote(e) {\n    const body = JSON.stringify({ note: e.target.value});\n    fetch(window.PXUTheme.routes.cart_update_url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n      ...{ body },\n    });\n  }\n\n  /**\n   * Used to unregister all the event handles initialized on the cart section\n   *\n   * @private\n   */\n  _removeListeners() {\n    this.events.unregisterAll();\n  }\n}\n","\n/**\n * @class Blog\n * @classdesc The blog class handles the blog page functionality\n * @extends Core.SectionComponent\n */\nexport default class Blog extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    this.blogTagsSelect = el.querySelector('[data-blog-tags]');\n\n    this._filterBlog = this._filterBlog.bind(this);\n\n    if (this.blogTagsSelect) {\n      this.events.register(this.blogTagsSelect, 'change', this._filterBlog);\n    }\n  }\n\n  /**\n   * Updates the current view according to the selected blog tag\n   *\n   * @param {Event} e - A <select> 'change' event object\n   * @private\n   */\n  _filterBlog(e) {\n    const {\n      target: {\n        dataset: {\n          blogUrl,\n        },\n      },\n    } = e;\n\n    window.location.href = this.blogTagsSelect.value === 'all' || this.blogTagsSelect.value === ''\n      ? blogUrl\n      : `${blogUrl}/tagged/${this.blogTagsSelect.value}`;\n  }\n}\n","/**\n * @class ImageBanner\n * @classdesc Primarily responsible for handling situations where the section content\n * is larger than the defined setting value\n * @extends Core.SectionComponent\n */\nexport default class ImageBanner extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n    this.contentEl = el.querySelector('[data-image-banner-content]');\n    this.wrapper = el.querySelector('[data-image-banner-wrapper]');\n    this.imageContainers = el.querySelectorAll('[data-image-banner-image]');\n    this.desktopHeight = this.data.desktopHeight;\n    this._resizeFunc = this._adjustSectionHeight.bind(this);\n\n    Core.Breakpoints.onChange(this._resizeFunc);\n  }\n\n  onMount() {\n    this._adjustSectionHeight();\n  }\n\n  onDismount() {\n    super.onDismount();\n    Core.Breakpoints.offChange(this._resizeFunc);\n  }\n\n  /**\n   * Sets CSS Custom Properties based on content height.\n   * When desktop height is set to 'adapt to height of first image', the height of the image\n   * is used to determine whether the content will fit inside without overflow.\n   * Otherwise, the pixel value of the setting is used as the comparison.\n   */\n  _adjustSectionHeight() {\n    if (!this.contentEl) return;\n\n    const visibleImageContainer = [...this.imageContainers]\n      .filter(img => img.offsetParent !== null);\n    const visibleImage = visibleImageContainer[0].querySelector('img') !== null\n      ? visibleImageContainer[0].querySelector('img')\n      : visibleImageContainer[0].querySelector('svg');\n\n    const { offsetHeight: imageHeight } = visibleImage;\n    const { innerHeight: mobileHeight } = window;\n    const { paddingTop: containerPaddingTop } = getComputedStyle(this.contentEl);\n    const paddingTopInt = Number(containerPaddingTop.replace('px', ''));\n    const totalContainerHeight = [...this.contentEl.children]\n      .reduce((acc, curr) => acc + curr.offsetHeight, paddingTopInt * 2);\n\n    const valueToCompare = this.desktopHeight === 'adapt'\n      ? imageHeight\n      : Number(this.desktopHeight);\n\n    if (Core.Breakpoints.min('S') && valueToCompare < totalContainerHeight) {\n      this.wrapper.style.setProperty('--desktop-height', `${totalContainerHeight}px`);\n    }\n\n    if (mobileHeight < totalContainerHeight) {\n      this.wrapper.style.setProperty('--mobile-height', `${totalContainerHeight}px`);\n    }\n  }\n}\n","/**\n * @class NavigationDrawer\n * @classdesc Handles the functionality of the navigation drawer\n *\n * @extends Core.Component\n */\nexport default class NavigationDrawer extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.headerWrapper = this.el.closest('.section-header');\n    this.parentSection = this.el.closest('section');\n    this.header = this.headerWrapper.querySelector('[data-header]');\n    this.navigation = this.el.querySelector('[data-nav-drawer-navigation]');\n    this.tier1Nav = this.navigation.querySelector('[data-navigation-tier-1]');\n    this.summaryElements = this.navigation.querySelectorAll('[data-nav-drawer-summary]');\n\n    this.isOpen = false;\n\n    this.summaryAnimations = {};\n    this.focusInCloseEvents = {};\n    this.focusInStopEvents = {};\n\n    this.openAnimation = Core.Animations.transition({ el: this.el, state: 'closed' });\n\n    this.summaryElements.forEach(summaryElement => this._initSummary(summaryElement));\n  }\n\n  onMount() {\n    this.siteOverlay = Core.Components.getComponent('site-overlay');\n  }\n\n  /**\n   * Opens the navigation drawer\n   */\n  open() {\n    if (this.siteOverlay) this.siteOverlay.show();\n\n    const style = getComputedStyle(this.el);\n    const announcementHeight = style.getPropertyValue('--announcement-height');\n    const headerRect = this.header.getBoundingClientRect();\n\n    if (headerRect.bottom > 0) {\n      if (announcementHeight) {\n        window.scrollTo({ top: announcementHeight, behavior: 'smooth' });\n      } else {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      }\n    }\n\n    Core.Utils.scrollLock(this.el, this.navigation);\n\n    this.openAnimation.animateTo('open', {\n      onStart: () => {\n        const { height } = this.el.getBoundingClientRect();\n        this.el.style.setProperty('--mobile-nav-height', `${height}px`);\n        this.el.dataset.heightSet = true;\n\n        if (this.headerWrapper) {\n          this.headerWrapper.dataset.mobileNavOpen = true;\n        }\n      },\n    }).then(() => {\n      this.el.style.setProperty('--mobile-nav-height', 'auto');\n      this.el.dataset.heightSet = false;\n      this.navigation.style.setProperty('--navigation-height', `${this.tier1Nav.scrollHeight}px`);\n\n      const { innerHeight } = window;\n      this.el.style.setProperty('--window-height', `${innerHeight}px`);\n\n      this.el.querySelector('[data-nav-drawer-summary], [data-nav-drawer-link]').focus();\n    });\n\n    this.addressBarEvent = this.events.register(window, 'resize', () => {\n      const { innerHeight } = window;\n      this.el.style.setProperty('--window-height', `${innerHeight}px`);\n    });\n  }\n\n  /**\n   * Closes the navigation drawer\n   */\n  close() {\n    Core.Utils.scrollUnlock(this.el);\n\n    if (this.closing) return;\n\n    this.closing = true;\n\n    this.openAnimation.animateTo('closed', {\n      onStart: () => {\n        const { height } = this.el.getBoundingClientRect();\n        this.el.style.setProperty('--mobile-nav-height', `${height}px`);\n        this.el.dataset.heightSet = true;\n\n        this.navigation.style.setProperty('--navigation-height', `${this.tier1Nav.scrollHeight}px`);\n      },\n    }).then(() => {\n      this.el.dataset.heightSet = false;\n\n      if (this.headerWrapper) {\n        this.headerWrapper.dataset.mobileNavOpen = false;\n      }\n\n      this._closeAllSummaries();\n\n      this.closing = false;\n      this.events.unregister(this.addressBarEvent);\n    });\n\n    if (this.siteOverlay) this.siteOverlay.hide();\n  }\n\n  /**\n   * Closes all open submenus\n   * @private\n   */\n  _closeAllSummaries() {\n    this.summaryElements.forEach(summaryElement => {\n      const { parentElement } = summaryElement;\n      const { index } = summaryElement.dataset;\n\n      this.summaryAnimations[index].animateTo('closed');\n\n      parentElement.open = false;\n      summaryElement.setAttribute('aria-expanded', 'false');\n\n      if (this.focusInCloseEvents[index]) {\n        this.events.unregister(this.focusInCloseEvents[index]);\n      }\n\n      if (this.focusInStopEvents[index]) {\n        this.events.unregister(this.focusInStopEvents[index]);\n      }\n    });\n  }\n\n  /**\n   * Triggered when a summary element is clicked and should open the content of the details\n   * with another drawer.\n   *\n   * @param {Summary} summaryElement The summary element that has received a click event\n   * @private\n   */\n  _initSummary(summaryElement) {\n    const { index } = summaryElement.dataset;\n    const contentElement = summaryElement.nextElementSibling;\n    const backButton = contentElement.querySelector('[data-nav-drawer-back-button]');\n\n    this.summaryAnimations[index] = Core.Animations.transition({ el: contentElement, state: 'closed' });\n\n    this.events.register(summaryElement, 'click', () => {\n      this._openSummary(summaryElement);\n    });\n\n    this.events.register(backButton, 'click', e => {\n      e.preventDefault();\n      this._closeSummary(summaryElement);\n    });\n  }\n\n  /**\n   * Opens the submenu passed in (summary element)\n   * @param {HTMLElement} summaryElement\n   * @private\n   */\n  _openSummary(summaryElement) {\n    const { index } = summaryElement.dataset;\n    const contentElement = summaryElement.nextElementSibling;\n    const parentPane = summaryElement.closest('[data-navigation-pane]');\n    const backButton = contentElement.querySelector('[data-nav-drawer-back-button]');\n\n    this.summaryAnimations[index].animateTo('open', {\n      onStart: () => {\n        const navHeight = contentElement.getBoundingClientRect().height;\n        this.navigation.style.setProperty('--navigation-height', `${navHeight}px`);\n\n        // Scroll to top of menu to avoid jump when we focus on the back link after animating.\n        this.el.scrollTo({ top: 0, left: 0, behavior: 'instant' });\n      },\n    }).then(() => {\n      summaryElement.setAttribute('aria-expanded', 'true');\n      backButton.focus();\n    });\n\n    // A11y: Add a focusin event for the parent pane, if focus enters this parent pane, then\n    // we want to close the summary that is opening.\n    this.focusInCloseEvents[index] = this.events.register(parentPane, 'focusin', e => {\n      e.stopPropagation();\n      this._closeSummary(summaryElement);\n    });\n\n    // A11y: When focusing within this pane, we don't want to close the pane, the focusin\n    // event will fire anywhere else in the mobile nav, and will close this summary otherwise.\n    this.focusInStopEvents[index] = this.events.register(contentElement, 'focusin', e => e.stopPropagation());\n  }\n\n  /**\n   * Closes the submenu passed in (summary element\n   * @param {HTMLElement} summaryElement\n   * @private\n   */\n  _closeSummary(summaryElement) {\n    const { parentElement } = summaryElement;\n    const { index } = summaryElement.dataset;\n    const parentPane = summaryElement.closest('[data-navigation-pane]');\n\n    this.summaryAnimations[index].animateTo('closed', {\n      onStart: () => {\n        this.navigation.style.setProperty('--navigation-height', `${parentPane.scrollHeight}px`);\n      },\n    }).then(() => {\n      parentElement.open = false;\n      summaryElement.setAttribute('aria-expanded', 'false');\n\n      // A11y: Remove the focusin events for this element\n      if (this.focusInCloseEvents[index]) {\n        this.events.unregister(this.focusInCloseEvents[index]);\n      }\n\n      if (this.focusInStopEvents[index]) {\n        this.events.unregister(this.focusInStopEvents[index]);\n      }\n\n      summaryElement.focus();\n    });\n  }\n}\n","export default class LiveSearch extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n    this.cachedResults = {};\n    this.input = el.querySelector('[data-live-search-query-input]');\n    this.liveSearchResultsContainer = el.querySelector('[data-live-search-results-container]');\n    this.liveSearchResults = el.querySelector('[data-live-search-results]');\n    const form = el.querySelector('[data-live-search-form]');\n    this.loadingText = this.data.loading_text;\n\n    this.animation = Core.Animations.transition({ el: this.liveSearchResultsContainer, state: 'closed' });\n    this.isOpen = false;\n\n    this.events.register(form, 'submit', e => this._onFormSubmit(e));\n    this.events.register(this.input, 'input', e => this._onChange(e));\n    this.events.register(this.input, 'focus', e => this._onFocus(e));\n    this.events.register(el, 'keyup', e => this._onKeyup(e));\n    this.events.register(el, 'keydown', e => this._onKeydown(e));\n  }\n\n  onMount() {\n    this.siteOverlay = Core.Components.getComponent('site-overlay');\n  }\n\n  focus() {\n    this.input.focus();\n  }\n\n  close() {\n    return this._close();\n  }\n\n  _getQuery() {\n    return this.input.value.trim();\n  }\n\n  _onChange() {\n    const searchTerm = this._getQuery();\n\n    if (!searchTerm.length) {\n      this._close(true);\n      return;\n    }\n\n    this._getSearchResults(searchTerm);\n  }\n\n  _onFormSubmit(event) {\n    // Submit buttons should always submit form\n    if (event.submitter && event.submitter.type === 'submit') return;\n\n    if (!this._getQuery().length || this.el.querySelector('[aria-selected=\"true\"] a')) event.preventDefault();\n  }\n\n  _onFocus() {\n    const searchTerm = this._getQuery();\n\n    if (!searchTerm.length) return;\n\n    if (this.el.getAttribute('results') === 'true') {\n      this._open();\n    } else {\n      this._getSearchResults(searchTerm);\n    }\n  }\n\n  _onKeyup(event) {\n    if (!this._getQuery().length) this._close(true);\n    event.preventDefault();\n\n    switch (event.code) {\n      case 'ArrowUp':\n        this._switchOption('up');\n        break;\n      case 'ArrowDown':\n        this._switchOption('down');\n        break;\n      case 'Enter':\n        this._selectOption();\n        break;\n      default:\n        break;\n    }\n  }\n\n  _onKeydown(event) {\n    // Prevent the cursor from moving in the input when using the up and down arrow keys\n    if (\n      event.code === 'ArrowUp'\n      || event.code === 'ArrowDown'\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  _switchOption(direction) {\n    if (!this.isOpen) return;\n\n    const moveUp = direction === 'up';\n    const selectedElement = this.el.querySelector('[aria-selected=\"true\"]');\n    const allElements = this.el.querySelectorAll('[data-predictive-search-result]');\n    let activeElement = this.el.querySelector('[data-predictive-search-result]');\n\n    if (moveUp && !selectedElement) return;\n\n    this.statusElement.textContent = '';\n    const selectedIndex = Array.prototype.indexOf.call(allElements, selectedElement);\n\n    if (!moveUp && selectedElement) {\n      activeElement = allElements[selectedIndex + 1] || allElements[0];\n    } else if (moveUp) {\n      activeElement = allElements[selectedIndex - 1] || allElements[allElements.length - 1];\n    }\n\n    if (activeElement === selectedElement) return;\n\n    activeElement.setAttribute('aria-selected', true);\n    activeElement.focus();\n\n    if (selectedElement) selectedElement.setAttribute('aria-selected', false);\n\n    this._setLiveRegionText(activeElement.innerText);\n  }\n\n  _selectOption() {\n    const actionSelectors = [\n      '[data-predictive-search-result-action]',\n      'a',\n      'button',\n    ];\n\n    const selectedAction = actionSelectors.reduce((selected, actionSelector) => {\n      if (selected) return selected;\n\n      return this.el.querySelector(`[aria-selected=\"true\"] ${actionSelector}`);\n    }, null);\n\n    if (selectedAction) selectedAction.click();\n  }\n\n  _getSearchResults(searchTerm) {\n    const queryKey = searchTerm.replace(' ', '-').toLowerCase();\n    this._setLiveRegionLoadingState();\n\n    if (this.cachedResults[queryKey]) {\n      this._renderSearchResults(this.cachedResults[queryKey]);\n      return;\n    }\n\n    fetch(`${window.PXUTheme.routes.predictive_search_url}?q=${encodeURIComponent(searchTerm)}&section_id=predictive-search`)\n      .then(response => {\n        if (!response.ok) {\n          const error = new Error(response.status);\n          this._close();\n          throw error;\n        }\n\n        return response.text();\n      })\n      .then(text => {\n        const resultsMarkup = new DOMParser().parseFromString(text, 'text/html').querySelector('#shopify-section-predictive-search').innerHTML;\n        this.cachedResults[queryKey] = resultsMarkup;\n        this._renderSearchResults(resultsMarkup);\n      })\n      .catch(error => {\n        this._close();\n        throw error;\n      });\n  }\n\n  _setLiveRegionLoadingState() {\n    this.statusElement = this.statusElement || this.el.querySelector('[data-live-search-status]');\n    this._setLiveRegionText(this.loadingText);\n    this.el.setAttribute('loading', true);\n  }\n\n  _setLiveRegionText(statusText) {\n    this.statusElement.setAttribute('aria-hidden', 'false');\n    this.statusElement.textContent = statusText;\n\n    setTimeout(() => {\n      this.statusElement.setAttribute('aria-hidden', 'true');\n    }, 1000);\n  }\n\n  _renderSearchResults(resultsMarkup) {\n    this.liveSearchResults.innerHTML = resultsMarkup;\n    this.el.setAttribute('results', true);\n\n    const predictiveSearchResults = this.el.querySelector('[data-predictive-search-results]');\n    const predictiveSearchResultsMultiColumn = predictiveSearchResults.classList.contains('predictive-search__results--multi-column');\n\n    if (predictiveSearchResults.classList.contains('predictive-search__results--multi-column')) {\n      this.el.classList.remove('live-search--single-column');\n      this.el.classList.add('live-search--multi-column');\n    } else {\n      this.el.classList.remove('live-search--multi-column');\n      this.el.classList.add('live-search--single-column');\n    }\n\n    this._setLiveRegionResults();\n    this._open();\n  }\n\n  _setLiveRegionResults() {\n    this.el.removeAttribute('loading');\n    this._setLiveRegionText(this.el.querySelector('[data-predictive-search-live-region-count-value]').textContent);\n  }\n\n  _open() {\n    if (this.isOpen) return;\n    this.isOpen = true;\n\n    Core.Utils.scrollLock(this.liveSearchResults, this.liveSearchResults, false);\n\n    this.animation.animateTo('open')\n      .then(() => {\n        if (this.siteOverlay) this.siteOverlay.show({ belowHeader: true });\n        this.input.setAttribute('aria-expanded', true);\n      });\n  }\n\n  _close(clearSearchTerm = false) {\n    if (clearSearchTerm) {\n      this.input.value = '';\n\n      this.el.removeAttribute('results');\n    }\n\n\n    Core.Utils.scrollUnlock(this.liveSearchResults);\n\n    return this.animation.animateTo('closed')\n      .then(() => {\n        this.isOpen = false;\n        const selected = this.el.querySelector('[aria-selected=\"true\"]');\n        if (selected) selected.setAttribute('aria-selected', false);\n\n        this.input.setAttribute('aria-activedescendant', '');\n        this.input.setAttribute('aria-expanded', false);\n      });\n  }\n}\n","/**\n * @class BlockMeganav\n * @classdesc BlockMeganav component interacts with editor events and dispatches events for\n * handling by parent navigation\n *\n * @extends Core.BlockComponent\n */\nexport default class BlockMeganav extends Core.BlockComponent {\n  onSelect() {\n    const selectEvent = new CustomEvent('meganav:select', { bubbles: true });\n    this.el.dispatchEvent(selectEvent);\n  }\n\n  onDeselect() {\n    const deselectEvent = new CustomEvent('meganav:deselect', { bubbles: true });\n    this.el.dispatchEvent(deselectEvent);\n  }\n}\n","\n  /*!\n   * @pixelunion/animations v0.1.0\n   * (c) 2019 Pixel Union\n   * Released under the UNLICENSED license.\n  */\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Promisified version of window.requestAnimationFrame.\n * @returns {Promise} Promise will resolve when requestAnimationFrame callback is run.\n */\nfunction raf() {\n  return new Promise(function (resolve) {\n    window.requestAnimationFrame(resolve);\n  });\n}\n/**\n * Represents an HTML element with associate states\n */\n\n\nvar Animation =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {Object} options\n   * @param {HTMLElement}  options.el Target element\n   * @param {String} [options.state=initial] Initial state. This is also the default state.\n   * @param {String} [options.stateAttribute=data-revealer] Attribute name to update with state.\n   * @param {String} [options.stateChangeAttribute=data-revealer-transition] Attribute name to\n   * update with change of state.\n   * @param {String} [options.endEvent=transitionend] Event to listen for at end of state change.\n   * @param {Boolean} [options.hold=false] If true, changeAttribute will not be removed until the\n   * next state change.\n   * @param {Function} [options.onStart] Callback to execute immediate after\n   * applying stateChangeAttribute.\n   */\n  function Animation(options) {\n    _classCallCheck(this, Animation);\n\n    this._el = options.el;\n    this.cancelRunning = null;\n    this._state = options.state || 'initial';\n    this.initialState = this._state;\n    this.stateAttribute = options.stateAttribute || 'data-animation-state';\n    this.stateChangeAttribute = options.stateChangeAttribute || 'data-animation';\n    this.endEvent = options.endEvent || 'transitionend';\n    this.hold = !!options.hold;\n\n    this.onStart = options.onStart || function () {\n      /* do nothing */\n    };\n\n    this.activeEventHandler = null;\n  }\n  /**\n   * Returns target element\n   *\n   * @return {HTMLElement} Target element\n   */\n\n\n  _createClass(Animation, [{\n    key: \"isState\",\n\n    /**\n     * Check if a state is active\n     * @param {String} state State to compare\n     *\n     * @return {Boolean}\n     */\n    value: function isState(state) {\n      return state === this._state;\n    }\n    /**\n     * Sequences a change to a new state.\n     * @param {String} state Target state\n     *\n     * @param {Boolean} options.force Switch to final state immediately\n     *\n     * @param {Function} options.onStart Callback to execute immediately after\n     * applying stateChangeAttribute for this state change only.\n     *\n     * @param {Boolean} [options.hold=false] If true, changeAttribute will not be removed until the\n     * next state change.\n     *\n     * @return {Promise} Resolves when endEvent triggered\n     */\n\n  }, {\n    key: \"animateTo\",\n    value: function animateTo(state) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var from = this._el.dataset[this.stateAttribute] || this._state;\n      var to = state || this.initialState;\n      var force = options.force;\n      var hold = 'hold' in options ? options.hold : this.hold;\n      return new Promise(function (resolve) {\n        if (_this.cancelRunning) {\n          _this.cancelRunning();\n        }\n\n        if (from === to) {\n          // Removing this here fixes some lingering attributes. But why?\n          _this._el.removeAttribute(_this.stateChangeAttribute);\n\n          resolve(from, null);\n          return;\n        }\n\n        var running = true;\n\n        _this.cancelRunning = function () {\n          running = false;\n          resolve(null, null);\n        };\n\n        _this._el.removeEventListener(_this.endEvent, _this.activeEventHandler);\n\n        _this.activeEventHandler = null;\n\n        if (force) {\n          _this._el.setAttribute(_this.stateChangeAttribute, \"\".concat(from, \"=>\").concat(to));\n\n          _this.onStart({\n            el: _this._el,\n            from: from,\n            to: to\n          });\n\n          if (typeof options.onStart === 'function') {\n            options.onStart({\n              el: _this._el,\n              from: from,\n              to: to\n            });\n          }\n\n          _this._el.setAttribute(_this.stateAttribute, to);\n\n          _this._state = to;\n\n          if (!hold) {\n            _this._el.removeAttribute(_this.stateChangeAttribute);\n          }\n\n          resolve(to, null);\n          return;\n        }\n\n        raf().then(function () {\n          if (!running) throw new Error('cancelled');\n\n          _this._el.setAttribute(_this.stateChangeAttribute, \"\".concat(from, \"=>\").concat(to));\n\n          _this.onStart({\n            el: _this._el,\n            from: from,\n            to: to\n          });\n\n          if (typeof options.onStart === 'function') {\n            options.onStart({\n              el: _this._el,\n              from: from,\n              to: to\n            });\n          }\n\n          return raf();\n        }).then(function () {\n          if (!running) throw new Error('cancelled');\n\n          _this._el.removeEventListener(_this.endEvent, _this.activeEventHandler);\n\n          _this.activeEventHandler = function (e) {\n            // Ignore any events bubbling up\n            if (e.target !== _this._el || !running) return;\n\n            _this._el.removeEventListener(_this.endEvent, _this.activeEventHandler);\n\n            if (!hold) {\n              _this._el.removeAttribute(_this.stateChangeAttribute);\n            }\n\n            resolve(to, e);\n          };\n\n          _this._el.addEventListener(_this.endEvent, _this.activeEventHandler);\n\n          _this._el.setAttribute(_this.stateAttribute, to);\n\n          _this._state = to;\n        })[\"catch\"](function (error) {\n          // Only catch 'cancelled' errors.\n          if (error.message !== 'cancelled') throw error;\n        });\n      });\n    }\n    /**\n     * Remove any event listeners\n     */\n\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this._el.removeEventListener(this.endEvent, this.activeEventHandler);\n\n      this.activeEventHandler = null;\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this._el;\n    }\n    /**\n     * Returns current state\n     *\n     * @return {String} Current state\n     */\n\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this._state;\n    }\n  }]);\n\n  return Animation;\n}();\n\n/**\n * Manage state changes for a set of elements\n */\n\nvar AnimationsManager =\n/*#__PURE__*/\nfunction () {\n  function AnimationsManager() {\n    _classCallCheck(this, AnimationsManager);\n\n    this.animations = new Map();\n  }\n  /**\n   * Add a new element and return an animation for that element. If element already has an associated animation, return that animation.\n   * @param {Object} options\n   * @param {HTMLElement}  options.el Target element\n   * @param {String} [options.state=initial] Initial state. This is also the default state.\n   * @param {String} [options.stateAttribute=data-revealer] Attribute name to update with state.\n   * @param {String} [options.stateChangeAttribute=data-revealer-transition] Attribute name to update with change of state.\n   * @param {String} [options.endEvent=transitionend] Event name to listen for at end of state change.\n   * @param {Boolean} [options.hold=false] If true, changeAttribute will not be removed until the next state change.\n   * @param {Function} [options.onStart] Callback to execute immediate after applying stateChangeAttribute.\n   *\n   * @return {Animation}\n   */\n\n\n  _createClass(AnimationsManager, [{\n    key: \"add\",\n    value: function add(options) {\n      if (this.animations.has(options.el)) return this.animations.get(options.el);\n      var animation = new Animation(options);\n      this.animations.set(options.el, animation);\n      return animation;\n    }\n    /**\n     * Remove a single animation\n     * @param {Animation} animation Animation to remove. Any event listeners will also be removed.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(animation) {\n      this.animations[\"delete\"](animation.el);\n      animation.unload();\n    }\n    /**\n     * Remove all animations, including all event listeners.\n     */\n\n  }, {\n    key: \"removeAll\",\n    value: function removeAll() {\n      this.animations.forEach(function (animation) {\n        return animation.unload();\n      });\n    }\n  }]);\n\n  return AnimationsManager;\n}();\n\nfunction animation(options) {\n  var setOptions = {\n    endEvent: 'animationend',\n    hold: true\n  };\n  return new Animation(_objectSpread2({\n    options: options\n  }, setOptions));\n}\n\nfunction transition(options) {\n  return new Animation(options);\n}\n\nexport { Animation, AnimationsManager, animation, transition };\n","import { transition } from '@pixelunion/animations';\nimport EventHandler from '@pixelunion/events';\nimport NavigationDesktopMenu from './navigation-desktop-menu'; // eslint-disable-line import/no-cycle\n\n/**\n * @class NavigationDesktopParent\n * @classdesc NavigationDesktopParent controls the functionality of tier 2 menus\n */\nexport default class NavigationDesktopParent {\n  constructor(options) {\n    this.menuItem = options.menuItem;\n    this.detailsItem = options.menuItem.querySelector('[data-nav-desktop-details]');\n    this.parentMenu = options.parentMenu;\n    this._locked = options.locked || (() => false);\n\n    this.menuLink = this.detailsItem.querySelector('[data-nav-desktop-link]');\n    this.submenuEl = this.menuItem.querySelector('[data-nav-desktop-submenu]');\n    this.isMeganav = 'navDesktopMeganav' in this.submenuEl.dataset;\n\n    this._isOpen = false;\n    this.submenu = null;\n\n    this.events = new EventHandler();\n\n    this._open = this._open.bind(this);\n    this._close = this._close.bind(this);\n    this.close = this.close.bind(this);\n\n    // When a user hits the escape key all of the menus should close and the keyboard focus should return\n    // to the parent link. This will bubble up to the top parent menu.\n    this.closeEsc = e => {\n      if (e.key === 'Escape') {\n        this.menuLink.focus();\n        this._close();\n      }\n    };\n\n    // When the mouse leaves the open menu, we don't want to close it right away. Setting a delay on close\n    // allows situations where you might go to another parent menu but your mouse would drag slightly outside\n    // of the open menu, causing you to have to go back and open the menu again. This improves accessibility\n    // as well as general usability.\n    this.closeTimer = null;\n    this.mouseover = () => {\n      clearTimeout(this.closeTimer);\n      this._open();\n    };\n\n    this.mouseout = () => {\n      this.closeTimer = setTimeout(this.close, 400);\n    };\n\n    this.click = e => {\n      e.stopPropagation();\n      // If the menu is already open, we want to continue to the link in the <a> tag.\n      // For mouse hover, this is pretty straightforward, but with keyboard and touch navigation\n      // you will have to touch or trigger that link a second time. This is maybe not the best for\n      // accessibility, but it's a good compromise for now.\n\n      const clickedParent = e.target.closest('[data-nav-desktop-link]');\n\n      if (clickedParent && clickedParent.dataset.href) {\n        // We only prevent the click through if the menu wasn't already open.\n        e.preventDefault();\n\n        if (this._isOpen) {\n          window.location = clickedParent.dataset.href;\n          return;\n        }\n      }\n\n      // If the submenu isn't open, open it\n      this._open();\n    };\n\n    // During keyboard navigation, when you focus onto the parent menuItem, this will close the other\n    // menu items that were previously open. This usually happens when you were navigating within\n    // a submenu and then tab out of it to the next menu item at a lower tier.\n    this.focusin = e => {\n      e.stopPropagation();\n      this.parentMenu.closeSiblings(this);\n    };\n\n    // Set up animation event\n    this.animation = transition({ el: this.submenuEl, state: 'closed' });\n\n    this.events.register(this.menuItem, 'mouseover', () => this.mouseover());\n    this.events.register(this.menuItem, 'mouseout', () => this.mouseout());\n    this.events.register(this.menuItem, 'click', e => this.click(e));\n    this.events.register(this.menuItem, 'touchend', e => this.click(e));\n    this.events.register(this.menuItem, 'focusin', e => this.focusin(e));\n\n    // If the user clicks, taps, or their keyboard focus reaches outside of the menu\n    // we should close this menu.\n    this.events.register(document.body, 'click', () => this._close());\n    this.events.register(document.body, 'focusin', () => this._close());\n  }\n\n  /**\n   * Close the dropdown menu immediately\n   *\n   */\n  forceClose() {\n    this._close();\n  }\n\n  /**\n   * Close the dropdown menu\n   *\n   */\n  close() {\n    this._close();\n  }\n\n  /**\n   * Open the dropdown menu immediately\n   */\n  forceOpen() {\n    this._open(true);\n  }\n\n  /**\n   * Open the dropdown menu\n   */\n  open() {\n    this._open();\n  }\n\n  /**\n   * Check to see if dropdown is offscreen and apply a class so it can be styled differently.\n   */\n  _setAlternateDrop() {\n    if (this.isMeganav) return;\n\n    const menuBounds = this.submenuEl.getBoundingClientRect();\n    if (menuBounds.right > document.documentElement.clientWidth) {\n      this.submenuEl.classList.add('alternate-drop');\n    }\n    if (menuBounds.left < 0) {\n      this.submenuEl.classList.add('alternate-drop-left');\n    }\n  }\n\n  /**\n   * Remove any class applied to prevent offscreen menus\n   */\n  _removeAlternateDrop() {\n    this.submenuEl.classList.remove('alternate-drop');\n  }\n\n  /**\n   * Opens the dropdown menu\n   *\n   * @private\n   */\n  _open(force = false) {\n    if (this._isOpen || this._locked()) return;\n\n    this._isOpen = true;\n    this.parentMenu.closeSiblings(this);\n\n    this.closeEscEvent = this.events.register(window, 'keyup', e => this.closeEsc(e));\n\n    if (!this.submenu) {\n      this.submenu = new NavigationDesktopMenu({ navList: this.submenuEl });\n    }\n\n    this._removeAlternateDrop();\n\n    this.animation.animateTo('open', {\n      onStart: ({ el }) => {\n        const { scrollHeight } = el;\n\n        if (!this._heightSet) {\n          el.style.setProperty('--open-height', `${scrollHeight}px`);\n          this._heightSet = true;\n        }\n\n        this._setAlternateDrop();\n\n        this.detailsItem.setAttribute('open', 'open');\n      },\n      force,\n    }).then(() => {\n      this.submenuEl.dataset.opened = 'true';\n    });\n\n    this.menuLink.setAttribute('aria-expanded', true);\n    this.detailsItem.setAttribute('open', 'open');\n  }\n\n  /**\n   * Closes the dropdown menu\n   *\n   * @private\n   */\n  _close() {\n    if (!this._isOpen || this._locked()) return;\n\n    if (this.submenu) {\n      this.submenu.unload();\n      this.submenu = null;\n    }\n\n    this._isOpen = false;\n\n    this.events.unregister(this.closeEscEvent);\n\n    this.animation.animateTo('closed', {\n      onStart: ({ el }) => {\n        el.dataset.opened = 'false';\n      },\n    }).then(() => {\n      this._removeAlternateDrop();\n      this.menuLink.setAttribute('aria-expanded', false);\n      this.detailsItem.removeAttribute('open');\n    });\n  }\n\n  /**\n   * Unbinds all events\n   *\n   */\n  unload() {\n    this.forceClose();\n    this.events.unregisterAll();\n\n    if (this.closeEscEvent) {\n      this.events.unregister(this.closeEscEvent);\n    }\n  }\n}\n","import EventHandler from '@pixelunion/events';\nimport NavigationDesktopParent from './navigation-desktop-parent'; // eslint-disable-line import/no-cycle\n\n/**\n * @class NavigationDesktopMenu\n * @classdesc NavigationDesktopMenu controls the overall menu functionality and initializes Tier 2 menus\n */\nexport default class NavigationDesktopMenu {\n  constructor(options) {\n    this.navList = options.navList;\n    this.menuItems = this.navList.children;\n\n    // NavigationDesktopParent for meganav, if any, that is selected for editing in the TE.\n    this._selectedBlock = null;\n\n    this.parents = [];\n\n    this.events = new EventHandler();\n\n    for (let i = 0; i < this.menuItems.length; i++) {\n      const menuItem = this.menuItems[i];\n      if (menuItem.dataset.navDesktopParent !== undefined) {\n        this.parents.push(\n          new NavigationDesktopParent({\n            menuItem,\n            parentMenu: this,\n            locked: () => this._selectedBlock !== null,\n          }),\n        );\n      } else {\n        // If the keyboard navigation moves to another menuItem, we should close any\n        // other existing menus that are open.\n        this.events.register(menuItem, 'focusin', () => this.closeAllMenus());\n      }\n    }\n  }\n\n  onBlockSelect(block) {\n    const meganavParent = this.parents.find(parent => parent.menuItem.contains(block));\n\n    if (!meganavParent) return;\n\n    meganavParent.forceOpen();\n    this._selectedBlock = meganavParent;\n  }\n\n  onBlockDeselect() {\n    this._selectedBlock = null;\n    this.closeAllMenus();\n  }\n\n  /**\n   * This function will close all menus that are not the current menu.\n   * This is mostly used by the HeaderNavParent class.\n   *\n   * @param { Object } current - The current menuItem\n   */\n  closeSiblings(current) {\n    this.parents.forEach(parent => {\n      if (parent !== current) {\n        parent.close();\n      }\n    });\n  }\n\n  /**\n   * This function will close all menus\n   *\n   */\n  closeAllMenus() {\n    this.parents.forEach(parent => parent.close());\n  }\n\n  /**\n   * Unbinds all events\n   *\n   */\n  unload() {\n    this.parents.forEach(parent => { parent.unload(); });\n    this.events.unregisterAll();\n  }\n}\n","import NavigationDesktopMenu from './scripts/navigation-desktop-menu';\n\n/**\n * @class NavigationDesktop\n * @classdesc Header navigation component is used to display menus on the header and set up their functionality\n *\n * @extends Core.Component\n */\nexport default class NavigationDesktop extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.navTier1 = el.querySelector('[data-nav-desktop-tier-1]');\n\n    this.events.register(el, 'meganav:select', e => {\n      if (!this.headerNavMenu) return;\n      if (!Core.Breakpoints.min('M')) return;\n\n      this.headerNavMenu.onBlockSelect(e.target);\n    });\n    this.events.register(el, 'meganav:deselect', () => {\n      if (!this.headerNavMenu) return;\n\n      this.headerNavMenu.onBlockDeselect();\n    });\n  }\n\n  /**\n   * On mount, we initialize the 1st level navigation menu\n   */\n  onMount() {\n    if (this.navTier1) {\n      this.headerNavMenu = new NavigationDesktopMenu({\n        navList: this.navTier1,\n      });\n    }\n  }\n}\n","/**\n * @class BlockAnnouncement\n * @classdesc Class for handling theme editor interactions\n */\nexport default class BlockAnnouncement extends Core.BlockComponent {\n  constructor(el, context) {\n    super(el, context);\n  }\n\n  onSelect() {\n    const selectEvent = new CustomEvent('announcement-block:select', { detail: { index: this.el.dataset.slideIndex }, bubbles: true });\n    this.el.dispatchEvent(selectEvent);\n  }\n\n  onDeselect() {\n    const deselectEvent = new CustomEvent('announcement-block:deselect', { bubbles: true });\n    this.el.dispatchEvent(deselectEvent);\n  }\n}\n","import debounce from 'just-debounce';\n\n/**\n * @class HeaderToolBar\n * @classdesc The cart drawer component is used to handle the cart drawer functionality.\n *\n * @extends Core.Component\n */\nexport default class HeaderToolBar extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.slider = el.querySelector('[data-announcement-slider]');\n    this.headerToolbar = el.querySelector('[data-header-toolbar-list]');\n    this.slides = el.querySelectorAll('[data-announcement-block]');\n    this.controls = el.querySelector('[data-header-toolbar-controls]');\n    this.controlButtons = el.querySelectorAll('[data-header-toolbar-control-button]');\n    this.previousButton = el.querySelector('[data-header-toolbar-direction=\"previous\"]');\n    this.nextButton = el.querySelector('[data-header-toolbar-direction=\"next\"]');\n    this.currentIndex = 1;\n    this.min = 1;\n    this.max = this.slides.length;\n\n    if (this.data.settings.block_size > 1) {\n      this._setButtonStates();\n    }\n\n    this.events.register(this.controls, 'click', debounce(e => {\n      this._setIndex(e.target.dataset.headerToolbarDirection);\n\n      const link = e.target.closest('a');\n      const matchingText = this.headerToolbar.querySelector(`li[id='${link.getAttribute('href').replace('#', '')}-${this.currentIndex}']`);\n\n      e.preventDefault();\n      this.headerToolbar.scrollTo({ left: matchingText.offsetLeft, behavior: 'smooth' });\n\n      this._setActiveState(matchingText);\n\n      this._setTabIndex();\n    }), 500);\n\n    this.events.register(this.headerToolbar, 'scroll', debounce(() => this._setActiveSlide(), 100));\n    this.events.register(el, 'announcement-block:select', (e) => this.onBlockSelect(e));\n  }\n\n  /**\n   * Fires when an announcement block is selected in the theme editor\n   */\n  onBlockSelect(e) {\n    this.forceIndex(e);\n  }\n\n  /**\n   * Force a specific announcement block to slide into view\n   *\n   */\n  forceIndex(e) {\n    this.currentIndex = Number(e.detail.index);\n    this.headerToolbar.scrollTo({ left: e.target.offsetLeft, behavior: 'smooth' });\n    this._setButtonStates();\n\n    this._setActiveState(e.target);\n\n    this._setTabIndex();\n  }\n\n  /**\n   * Controls which slide is active\n   *\n   * @private\n   */\n  _setActiveSlide() {\n    const currentSlideIndex = Math.floor(this.headerToolbar.scrollLeft / this.headerToolbar.offsetWidth);\n\n    this.controlButtons.forEach((button, index) => {\n      if (index === currentSlideIndex) {\n        button.dataset.active = 'true';\n      } else {\n        button.dataset.active = 'false';\n      }\n    });\n  }\n\n  /**\n   * Loops through slides and sets the active state\n   *\n   * @param {HTMLElement} target - The target element\n   * @private\n   */\n  _setActiveState(el) {\n    this.slides.forEach(slide => {\n      slide.dataset.active = 'false';\n    });\n\n    el.dataset.active = 'true';\n  }\n\n  /**\n   * Sets the current slide index\n   *\n   * @param {string} direction - The direction of the slide\n   * @private\n   */\n  _setIndex(direction) {\n    if (direction === 'next' && this.nextButton.dataset.disabled !== 'true') {\n      if (this.currentIndex < this.max) {\n        this.currentIndex++;\n      }\n    } else if (direction === 'previous' && this.previousButton.dataset.disabled !== 'true') {\n      if (this.currentIndex > this.min) {\n        this.currentIndex--;\n      }\n    }\n\n    this._setButtonStates();\n  }\n\n  /**\n   * Handles state of the control buttons\n   *\n   * @private\n   */\n  _setButtonStates() {\n    if (this.slides.length < 2) return;\n    if (this.currentIndex === this.max) {\n      this.nextButton.dataset.disabled = 'true';\n    } else {\n      this.nextButton.dataset.disabled = 'false';\n    }\n\n    if (this.currentIndex === this.min) {\n      this.previousButton.dataset.disabled = 'true';\n    } else {\n      this.previousButton.dataset.disabled = 'false';\n    }\n  }\n\n  /**\n   * Controls which links are tabbable in the current context of the slider\n   *\n   * @private\n   */\n  _setTabIndex() {\n    this.slides.forEach(slide => {\n      const aTags = slide.querySelectorAll('a');\n\n      if (slide.dataset.active === 'true') {\n        aTags.forEach(a => {\n          a.setAttribute('tabindex', '0');\n        });\n      } else {\n        aTags.forEach(a => {\n          a.setAttribute('tabindex', '-1');\n        });\n      }\n    });\n  }\n\n  /**\n   * Returns the height of the header toolbar.\n   *\n   */\n  getHeight() {\n    return this.el.offsetHeight;\n  }\n\n  /**\n   * Unregisters all event listeners\n   *\n   */\n  unload() {\n    this.events.unregisterAll();\n  }\n}\n","export default class LiveSearchTakeover {\n  constructor({\n    liveSearch,\n    events,\n    triggerEls,\n    takeoverEl,\n  }) {\n    const closeEl = takeoverEl.querySelector('[data-search-cancel-button]');\n    this.liveSearch = liveSearch;\n    this.events = events;\n    this.previousFocus = null;\n    this.open = false;\n    this.animation = Core.Animations.transition({ el: takeoverEl, state: 'closed' });\n    this.siteOverlay = Core.Components.getComponent('site-overlay');\n    triggerEls.forEach(el => {\n      events.register(el, 'click', e => this._handleTriggerClick(e));\n    });\n    events.register(closeEl, 'click', () => this._close());\n    events.register(document, 'click', e => {\n      if (takeoverEl.contains(e.target)) return;\n\n      this._close();\n    });\n    events.register(takeoverEl, 'focusout', () => {\n      window.requestAnimationFrame(() => {\n        if (!takeoverEl.contains(document.activeElement)) {\n          this._close();\n          if (this.siteOverlay) this.siteOverlay.hide();\n        }\n      });\n    });\n  }\n\n  _handleTriggerClick(e) {\n    e.preventDefault();\n    const escapeEvent = this.events.register(window, 'keyup', keyevent => {\n      if (keyevent.key === 'Escape') {\n        this.events.unregister(escapeEvent);\n        this._close();\n      }\n    });\n    this._open();\n  }\n\n  _open() {\n    if (this.open) return;\n\n    this.animation.animateTo('open')\n      .then(() => {\n        this.previousFocus = document.activeElement;\n        this.liveSearch.focus();\n        this.open = true;\n      });\n  }\n\n  _close() {\n    if (!this.open) return;\n\n    this.liveSearch.close()\n      .then(() => this.animation.animateTo('closed'))\n      .then(() => {\n        if (this.previousFocus) this.previousFocus.focus();\n        this.open = false;\n      });\n  }\n}\n","import debounce from 'just-debounce';\nimport LiveSearchTakeover from './scripts/liveSearchTakeover';\n\n/**\n * @class Header\n * @classdesc The header section is used to handle the header functionality.\n *\n * @extends Core.SectionComponent\n */\nexport default class Header extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n    this.header = this.el.querySelector('[data-header]');\n    this.cartCount = this.el.querySelector('[data-cart-count]');\n    this.cartDrawerButton = this.el.querySelector('[data-cart-button]');\n    this.mobileDrawerButton = this.el.querySelector('[data-menu-button]');\n    this.mobileDrawerCloseButton = this.el.querySelector('[data-menu-close-button]');\n    this.searchButtons = this.el.querySelectorAll('[data-search-button]');\n    this.liveSearchTakeover = this.el.querySelector('[data-live-search-takeover]');\n    this.mobileMenu = null;\n    this.sticky = this.data.settings.sticky;\n    this.showBorder = this.data.settings.show_border;\n    this.enable_live_search = this.data.settings.enable_live_search;\n    this.live_search_open = false;\n\n    this.events.register(document, 'cart:update', e => {\n      this._updateCartCount(e.detail.count);\n    });\n    this.events.register(document, 'product:add-to-cart:success', e => {\n      this._updateCartCount(e.detail.cart.item_count);\n    });\n\n    if (this.sticky && this.showBorder === false) {\n      this.events.register(document, 'scroll', debounce(() => { this._setStickyShadow(); }, 100, false, true));\n    }\n  }\n\n  /**\n   * On mount, we create the event listeners for the header section.\n   */\n  onMount() {\n    // Event for opening the mobile menu drawer\n    this.drawerMenu = this.query('navigation-drawer');\n    this.events.register(this.mobileDrawerButton, 'click', e => {\n      e.stopPropagation();\n      this.drawerMenu.open(this.mobileDrawerButton);\n\n      this.escapeEvent = this.events.register(window, 'keyup', keyevent => {\n        if (keyevent.key === 'Escape') {\n          this._toggleMenuButton(false);\n          this.drawerMenu.close();\n          this.mobileDrawerButton.focus();\n          this.events.unregister(this.escapeEvent);\n        }\n      });\n\n      // Set up events to handle keyboard, mouse, and touch events\n      this.bodyClickEvent = this.events.register(document, 'click', () => {\n        this._closeDrawerMenu();\n      });\n\n      this.focusBodyEvent = this.events.register(document.body, 'focusin', () => {\n        this._closeDrawerMenu();\n      });\n\n      Core.Breakpoints.onChange(() => this._closeDrawerMenu());\n\n      this._toggleMenuButton(true);\n    });\n\n    // We need to stop propagation on the events that happen on the drawer menu so that the menu\n    // doesn't close from focusin or click events within it.\n    this.menuDrawerFocusInEvent = this.events.register(this.drawerMenu.el, 'focusin', event => {\n      event.stopPropagation();\n    });\n\n    this.menuDrawerClickEvent = this.events.register(this.drawerMenu.el, 'click', event => event.stopPropagation());\n\n    this.events.register(this.mobileDrawerCloseButton, 'click', event => {\n      event.stopPropagation();\n      this._closeDrawerMenu();\n    });\n\n    // Event for opening the cart drawer\n    const cartDrawer = Core.Components.getComponent('cart-drawer');\n    if (cartDrawer && cartDrawer.data.enabled && !document.body.classList.contains('template-cart')) {\n      this.events.register(this.cartDrawerButton, 'click', e => {\n        e.stopPropagation();\n        e.preventDefault();\n        cartDrawer.open(this.cartDrawerButton, false);\n      });\n    }\n\n    this.headerToolbar = this.query('header-tool-bar');\n\n    this._setHeightVariables();\n    this.events.register(window, 'resize', debounce(() => this._setHeightVariables(), 100));\n\n    if (this.enable_live_search) {\n      this.liveSearchTakeover = new LiveSearchTakeover({\n        liveSearch: this.query('live-search'),\n        events: this.events,\n        triggerEls: this.searchButtons,\n        takeoverEl: this.liveSearchTakeover,\n      });\n    }\n  }\n\n  /**\n   * Forces the mobile drawer menu to close\n   * @private\n   */\n  _closeDrawerMenu() {\n    this._toggleMenuButton(false);\n    this.mobileDrawerButton.focus();\n    this.drawerMenu.close();\n    this.events.unregister(this.bodyClickEvent);\n    this.events.unregister(this.focusBodyEvent);\n  }\n\n  /**\n   * Toggles the menu and close button in the mobile header.\n   * @param {Boolean} open If true, the menu is opening.\n   * @private\n   */\n  _toggleMenuButton(open) {\n    if (open) {\n      this.mobileDrawerButton.classList.add('hidden');\n      this.mobileDrawerCloseButton.classList.remove('hidden');\n    } else {\n      this.mobileDrawerButton.classList.remove('hidden');\n      this.mobileDrawerCloseButton.classList.add('hidden');\n    }\n  }\n\n  /**\n   * Updates the cart count in the header\n   *\n   * @param {number} count - The cart item count to display.\n   * @private\n   */\n  _updateCartCount(count) {\n    this.cartCount.innerHTML = count;\n\n    if (count === 0) {\n      this.cartCount.classList.add('header__cart-count--is-zero');\n    } else {\n      this.cartCount.classList.remove('header__cart-count--is-zero');\n    }\n  }\n\n  /**\n   * Updates the sticky header logic\n   *\n   * @private\n   */\n  _setHeightVariables() {\n    this.headerSection = document.querySelector('[data-header-section]');\n    let headerHeight = 0;\n\n    if (this.headerToolbar) {\n      this.headerToolbarHeight = this.headerToolbar.getHeight();\n      this.headerSection.style.setProperty('--announcement-height', `${this.headerToolbarHeight}px`);\n      headerHeight += this.headerToolbarHeight;\n    }\n\n    headerHeight += this.header.getBoundingClientRect().height;\n    this.headerSection.style.setProperty('--header-height', `${headerHeight}px`);\n  }\n\n  /**\n   * Checks the scroll position and sets the sticky shadow\n   *\n   * @private\n   */\n  _setStickyShadow() {\n    if (window.scrollY > 100) {\n      this.header.classList.add('header--shadow');\n    } else {\n      this.header.classList.remove('header--shadow');\n    }\n  }\n}\n","const classes = {\n  alternateDrop: 'disclosure__modal--alternate-drop',\n  alternateVerticalDrop: 'disclosure__modal--above',\n};\n\n/**\n * @class Disclosure\n * @classdesc Manages the opening and closing of disclosure elements.\n */\nexport default class Disclosure extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.disclosureToggle = el.querySelector('[data-disclosure-toggle]');\n    this.disclosureModal = el.querySelector('[data-disclosure-modal]');\n    this.disclosureOptions = el.querySelectorAll('[data-disclosure-option]');\n    this.disclosureClose = el.querySelector('[data-disclosure-close]');\n\n    this.isOpen = false;\n\n    const input = document.createElement('input');\n    input.name = this.data.inputName;\n    input.value = this.data.inputValue;\n    input.type = 'hidden';\n    input.dataset.disclosureInput = true;\n\n    this.el.appendChild(input);\n\n    this.disclosureAnimation = Core.Animations.transition({ el: this.disclosureModal, state: 'closed' });\n\n    this.disclosureInput = input;\n\n    // Set up the click events for the toggle button\n    this.events.register(this.disclosureToggle, 'click', e => {\n      if (this.isOpen) {\n        this._hideList();\n        return;\n      }\n\n      const ariaExpanded = e.currentTarget.getAttribute('aria-expanded') === 'true';\n\n      e.currentTarget.setAttribute('aria-expanded', !ariaExpanded);\n\n      this.disclosureModal.classList.remove(classes.alternateDrop);\n      this.disclosureModal.classList.remove(classes.alternateVerticalDrop);\n\n      this.isOpen = true;\n\n      this.disclosureAnimation.animateTo('open', {\n        onStart: ({ el: disclosureModal }) => {\n          const { right, bottom } = disclosureModal.getBoundingClientRect();\n          const { innerWidth, innerHeight } = window;\n          const gutter = 30;\n          if ((right + gutter) > innerWidth) {\n            disclosureModal.classList.add(classes.alternateDrop);\n          }\n\n          if ((bottom + gutter) > innerHeight) {\n            disclosureModal.classList.add(classes.alternateVerticalDrop);\n          }\n        },\n      });\n\n      const siteOverlay = Core.Components.getComponent('site-overlay');\n\n      if (siteOverlay && Core.Breakpoints.max('S')) {\n        siteOverlay.show();\n      }\n    });\n\n    // Set up the click event handlers for the disclosure options\n    this.disclosureOptions.forEach(option => {\n      this.events.register(option, 'click', e => {\n        e.preventDefault();\n        this.disclosureInput.value = e.currentTarget.dataset.value;\n\n        if (!this.data.alwaysShowHeading) {\n          this.disclosureToggle.innerHTML = e.currentTarget.innerHTML;\n        }\n\n        this.disclosureOptions.forEach(item => {\n          if (item === option) {\n            item.classList.add('disclosure__link--selected');\n            item.setAttribute('aria-current', true);\n          } else {\n            item.classList.remove('disclosure__link--selected');\n            item.setAttribute('aria-current', false);\n          }\n        });\n\n        this.el.dispatchEvent(new Event('input', { bubbles: true }));\n\n        // Give it a little bit of a delay after a new choice is selected before closing\n        // so that users can see that their option was selected.\n        setTimeout(() => this._hideList(), 300);\n      });\n    });\n\n    this.events.register(this.disclosureClose, 'click', e => {\n      e.preventDefault();\n      this._hideList();\n    });\n\n    // Setup events for keyboard navigation\n    this.events.register(this.disclosureToggle, 'focusout', e => {\n      const disclosureLostFocus = !this.el.contains(e.relatedTarget);\n\n      if (disclosureLostFocus) {\n        this._hideList();\n      }\n    });\n\n    this.events.register(this.disclosureModal, 'focusout', e => {\n      const childInFocus = e.currentTarget.contains(e.relatedTarget);\n\n      if (this.isOpen && !childInFocus) {\n        this._hideList();\n      }\n    });\n\n    this.events.register(window, 'keyup', e => {\n      if (e.key === 'Escape' || e.key === 'Esc') {\n        if (this.el.contains(document.activeElement)) {\n          this.disclosureToggle.focus();\n        }\n\n        this._hideList();\n      }\n    });\n\n    this.events.register(document.body, 'click', e => {\n      const isOption = this.el.contains(e.target);\n\n      if (this.isOpen && !isOption) {\n        this._hideList();\n      }\n    });\n  }\n\n  /**\n   * Gets the current value of the input\n   *\n   * @returns Value of the input\n   */\n  getValue() {\n    return this.disclosureInput.value;\n  }\n\n  /**\n   * Closes the disclosure list\n   * @private\n   */\n  _hideList() {\n    this.disclosureAnimation.animateTo('closed').then(() => {\n      this.isOpen = false;\n      this.disclosureToggle.setAttribute('aria-expanded', false);\n    });\n\n    const siteOverlay = Core.Components.getComponent('site-overlay');\n\n    if (siteOverlay && Core.Breakpoints.max('S')) {\n      siteOverlay.hide();\n    }\n  }\n}\n","/**\n * @class CrossBorder\n * @classdesc A class for handling form submission on the cross border disclosure elements\n * @extends Core.Component\n */\nexport default class CrossBorder extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.forms = el.querySelectorAll('[data-cross-border-form]');\n    this.forms.forEach(form => this.events.register(form, 'input', () => form.submit()));\n  }\n}\n","export default class Share extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.input = el.querySelector('input');\n    this.inputWrapper = el.querySelector('[data-share-input-wrapper]');\n    this.successContainer = el.querySelector('[data-share-copy-success]');\n\n    this.state = {\n      open: false,\n    };\n  }\n\n  onMount() {\n    this.button = this.query('button');\n    this.events.register(this.button.el, 'click', () => this.copyToClipboard());\n  }\n\n  copyToClipboard() {\n    const { open } = this.state;\n\n    if (!open) {\n      navigator.clipboard.writeText(this.input.value)\n        .then(() => {\n          this.inputWrapper.classList.add('hidden');\n          this.successContainer.textContent = this.data.locales.success_message;\n          this.input.classList.add('hidden');\n          this.successContainer.classList.remove('hidden');\n          this.setState({ open: true });\n\n          setTimeout(() => {\n            this.inputWrapper.classList.remove('hidden');\n            this.successContainer.textContent = '';\n            this.input.classList.remove('hidden');\n            this.successContainer.classList.add('hidden');\n            this.setState({ open: false });\n          }, 30000);\n        });\n    }\n  }\n}\n","export default class ProductPage extends Core.Component {\n  onMount() {\n    const drawerHeaderFragment = this.el.querySelector('[data-drawer-header-template]').content.cloneNode(true);\n    const drawerFragment = this.el.querySelector('[data-drawer-template]').content.cloneNode(true);\n    const embedModalBtnEl = this.el.querySelector('[data-drawer-btn]');\n    const drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (!drawerModal) return;\n\n    this._drawerFlyout = drawerModal.createFlyout();\n    this._drawerFlyout\n      .then(drawerFlyout => {\n        if (!drawerFlyout) return;\n\n        this.events.register(embedModalBtnEl, 'click', e => {\n          e.stopPropagation();\n          e.preventDefault();\n\n          drawerFlyout.populateHeading(drawerHeaderFragment);\n          drawerFlyout.populateContent(drawerFragment);\n          drawerModal.openFlyout(drawerFlyout, embedModalBtnEl);\n          this.events.register(drawerFlyout.el, 'product-page-drawer:close', () => drawerModal.closeFlyout(drawerFlyout));\n        });\n      });\n  }\n\n  onDismount() {\n    super.onDismount();\n\n    if (this._drawerFlyout) {\n      this._drawerFlyout.then(drawerFlyout => drawerFlyout.destroy());\n    }\n  }\n}\n","export default class ProductSizeGuideDrawer extends Core.Component {\n  onMount() {\n    const drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (drawerModal) {\n      const embedModalBtnEl = this.el.querySelector('[data-drawer-close]');\n\n      this.events.register(embedModalBtnEl, 'click', e => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const closeEvent = new CustomEvent('product-page-drawer:close', { bubbles: true });\n        this.el.dispatchEvent(closeEvent);\n      });\n    }\n  }\n}\n","export default class ProductSizeGuide extends Core.Component {\n  onMount() {\n    const drawerHeaderFragment = this.el.querySelector('[data-drawer-header-template]').content.cloneNode(true);\n    const drawerFragment = this.el.querySelector('[data-drawer]').content.cloneNode(true);\n    const embedModalBtnEl = this.el.querySelector('[data-drawer-btn]');\n    const drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (!drawerModal) return;\n\n    this._drawerFlyout = drawerModal.createFlyout();\n    this._drawerFlyout\n      .then(drawerFlyout => {\n        if (!drawerFlyout) return;\n\n        this.events.register(embedModalBtnEl, 'click', e => {\n          e.stopPropagation();\n          e.preventDefault();\n\n          drawerFlyout.populateHeading(drawerHeaderFragment);\n          drawerFlyout.populateContent(drawerFragment);\n          drawerModal.openFlyout(drawerFlyout, embedModalBtnEl);\n          this.events.register(drawerFlyout.el, 'product-page-drawer:close', () => drawerModal.closeFlyout(drawerFlyout));\n        });\n      });\n  }\n\n  onDismount() {\n    super.onDismount();\n\n    if (this._drawerFlyout) {\n      this._drawerFlyout.then(drawerFlyout => drawerFlyout.destroy());\n    }\n  }\n}\n","/**\n * @class ProductGalleryModal\n * @classdesc A modal for rendering the product gallery\n *\n * @extends Core.Component\n */\nexport default class ProductGalleryModal extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.content = this.el.querySelector('[data-product-gallery-modal-content]');\n    this.closeBtn = this.el.querySelector('[data-product-gallery-modal-close]');\n  }\n\n  /**\n   * Opens the gallery modal\n   * @public\n   */\n  open(mediaId = null) {\n    this.el.classList.add('product-gallery-modal--visible');\n    Core.Utils.scrollLock(this.el, this.content);\n\n    const mediaItem = this.el.querySelector(`.product-gallery-modal__media-item[data-media=\"${mediaId}\"]`);\n\n    if (mediaItem) {\n      mediaItem.classList.add('product-gallery-modal__media-item--selected');\n      mediaItem.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    this.escEvent = this.events.register(window, 'keydown', e => {\n      if (e.key === 'Escape' || e.key === 'Esc') {\n        this.close();\n      }\n    });\n\n    this.closeBtnEvent = this.events.register(this.closeBtn, 'click', () => this.close());\n  }\n\n  /**\n   * Closes the gallery modal\n   * @public\n   */\n  close() {\n    const mediaItems = this.el.querySelectorAll('.product-gallery-modal__media-item');\n    this.events.unregister(this.escEvent);\n    this.events.unregister(this.closeBtnEvent);\n    this.el.classList.remove('product-gallery-modal--visible');\n    mediaItems.forEach(mediaItem => mediaItem.classList.remove('product-gallery-modal__media-item--selected'));\n    Core.Utils.scrollUnlock(this.el);\n  }\n}\n","/**\n * @class MediaModel\n * @classdesc Handles creating an model media element\n *\n * @extends Core.Component\n */\nexport default class MediaModel extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    const modelEl = this.el.querySelector('model-viewer');\n\n    this._model = Core.Media.createModel(modelEl);\n  }\n\n  /**\n   * Play the model and dispatch video-related events based on resolve/reject from Promise\n   * @public\n   */\n  play() {\n    this._model.play();\n  }\n\n  /**\n   * Pause the video\n   * @public\n   */\n  pause() {\n    this._model.pause();\n  }\n\n  /**\n   * Unload the video on unmount\n   */\n  onDismount() {\n    this._model.unload();\n  }\n}\n","/**\n * @class MediaExternalVideo\n * @classdesc Handles creating an external video media element\n *\n * @extends Core.Component\n */\nexport default class MediaExternalVideo extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    const videoEl = el.querySelector('iframe');\n\n    this._video = Core.Media.createVideo(videoEl, this.data.type);\n  }\n\n  /**\n   * Play the video\n   * @public\n   */\n  play() {\n    this._video.play();\n  }\n\n  /**\n   * Pause the video\n   * @public\n   */\n  pause() {\n    this._video.pause();\n  }\n}\n","/**\n * @class MediaVideo\n * @classdesc Handles creating a video media element\n *\n * @extends Core.Component\n */\nexport default class MediaVideo extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    const videoEl = this.el.querySelector('video');\n\n    this._video = Core.Media.createVideo(videoEl, 'html5');\n  }\n\n  /**\n   * Play the media\n   * @public\n   */\n  pause() {\n    this._video.pause();\n  }\n\n  /**\n   * Pause the media\n   * @public\n   */\n  play() {\n    this._video.play();\n  }\n}\n","function scrollIntoView(gallery, media, direction = 'horizontal') {\n  switch (direction) {\n    case 'horizontal':\n      gallery.scrollTo({\n        left: media.offsetLeft,\n        behavior: 'smooth',\n      });\n      break;\n    case 'vertical':\n      gallery.scrollTo({\n        top: media.offsetTop,\n        behavior: 'smooth',\n      });\n      break;\n    default:\n      break;\n  }\n}\n\nexport default class FeaturedProductGallery extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.gallery = el.querySelector('[data-product-gallery-list]');\n    this.galleryMedia = this.gallery.querySelectorAll('[data-media]');\n    this.zoomableImageBtns = el.querySelectorAll('[data-product-gallery-media-zoom]');\n    this.navigationThumbnails = el.querySelector('[data-product-gallery-navigation-thumbnails]');\n    this.navigationCurrentMedia = el.querySelector('[data-product-gallery-navigation-current-media]');\n    this.navigationArrowPrevious = el.querySelector('[data-product-gallery-navigation-arrow-previous]');\n    this.navigationArrowNext = el.querySelector('[data-product-gallery-navigation-arrow-next]');\n\n    this.state = {\n      selectedMedia: this.data.selected_media,\n    };\n\n    if (this.data.enable_autoplay) {\n      this._interval = setInterval(() => {\n        const selectedMediaEl = this.gallery.querySelector(`[data-media='${this.state.selectedMedia}']`);\n        const currMediaPosition = Array.prototype.indexOf.call(this.galleryMedia, selectedMediaEl);\n        const nextMediaIndex = (currMediaPosition + 1) >= this.galleryMedia.length\n          ? 0\n          : currMediaPosition + 1;\n        const matchingMedia = this.galleryMedia[nextMediaIndex];\n\n        if (matchingMedia) {\n          scrollIntoView(this.gallery, matchingMedia);\n        }\n      }, 3000);\n\n      const event = this.events.register(el, 'pointerover', () => {\n        clearInterval(this._interval);\n\n        this.events.unregister(event);\n      });\n    }\n\n    this.zoomableImageBtns.forEach(zoomableImageBtn => {\n      this.events.register(zoomableImageBtn, 'click', e => {\n        const img = e.target.closest('[data-media]');\n\n        if (!img) return;\n\n        const { media: mediaId } = img.dataset;\n        const galleryModal = this.query('product-gallery-modal');\n\n        if (galleryModal) {\n          galleryModal.open(mediaId);\n        }\n      });\n    });\n\n    if (this.galleryMedia.length > 1) {\n      this.events.register(this.navigationThumbnails, 'click', e => {\n        e.preventDefault();\n\n        const thumbnailMediaEl = e.target.closest('[data-media]');\n\n        if (!thumbnailMediaEl) return; // We clicked into the void\n\n        const matchingMedia = this.gallery.querySelector(`[data-media='${thumbnailMediaEl.dataset.media}']`);\n\n        if (matchingMedia) {\n          scrollIntoView(this.gallery, matchingMedia);\n        }\n      });\n\n      this.events.register(this.navigationArrowPrevious, 'click', e => {\n        e.preventDefault();\n\n        const selectedMediaEl = this.gallery.querySelector(`[data-media='${this.state.selectedMedia}']`);\n        const currMediaPosition = Array.prototype.indexOf.call(this.galleryMedia, selectedMediaEl);\n        const nextMediaIndex = currMediaPosition - 1;\n        const matchingMedia = this.galleryMedia[nextMediaIndex];\n\n        if (matchingMedia) {\n          scrollIntoView(this.gallery, matchingMedia);\n        }\n      });\n\n      this.events.register(this.navigationArrowNext, 'click', e => {\n        e.preventDefault();\n\n        const selectedMediaEl = this.gallery.querySelector(`[data-media='${this.state.selectedMedia}']`);\n        const currMediaPosition = Array.prototype.indexOf.call(this.galleryMedia, selectedMediaEl);\n        const nextMediaIndex = currMediaPosition + 1;\n        const matchingMedia = this.galleryMedia[nextMediaIndex];\n\n        if (matchingMedia) {\n          scrollIntoView(this.gallery, matchingMedia);\n        }\n      });\n\n      this._intersectionObserver = new IntersectionObserver(this._handleIntersection.bind(this), { root: this.gallery, rootMargin: '0px 0px 0px 0px', threshold: 0.5 });\n      this.galleryMedia.forEach(galleryMedia => this._intersectionObserver.observe(galleryMedia));\n\n      Core.Breakpoints.onChange(this._handleBreakpointChange.bind(this));\n    }\n  }\n\n  onContextChange({ selectedVariant }) {\n    if (!selectedVariant || !selectedVariant.featured_media) return;\n\n    const matchingMedia = this.gallery.querySelector(`[data-media='${selectedVariant.featured_media.id}']`);\n\n    if (matchingMedia) {\n      clearInterval(this._interval);\n      scrollIntoView(this.gallery, matchingMedia);\n\n      this.setState({\n        selectedMedia: matchingMedia.dataset.media,\n      });\n    }\n  }\n\n  onStateChange(newState) {\n    const matchingMedia = this.gallery.querySelector(`[data-media='${newState.selectedMedia}']`);\n    const mediaThumbnails = this.navigationThumbnails.querySelectorAll('[data-media]');\n    const matchingMediaThumbnail = this.navigationThumbnails.querySelector(`[data-media='${newState.selectedMedia}']`);\n\n    mediaThumbnails.forEach(mediaThumbnail => mediaThumbnail.removeAttribute('data-media-selected'));\n\n    if (matchingMediaThumbnail) {\n      scrollIntoView(this.navigationThumbnails, matchingMediaThumbnail, 'vertical');\n\n      matchingMediaThumbnail.setAttribute('data-media-selected', '');\n    }\n\n    const shopifyXrEl = this.el.querySelector('[data-gallery-xr]');\n\n    if (!shopifyXrEl) return;\n\n    if (matchingMedia.dataset.mediaType === 'model') {\n      shopifyXrEl.dataset.shopifyModel3dId = newState.selectedMedia;\n    } else {\n      shopifyXrEl.dataset.shopifyModel3dId = shopifyXrEl.dataset.defaultModelId;\n    }\n  }\n\n  /**\n   * Called when the component is dismounted\n   */\n  onDismount() {\n    if (this._intersectionObserver) {\n      this._intersectionObserver.disconnect();\n    }\n\n    this.events.unregisterAll();\n  }\n\n  _handleBreakpointChange({ current }) {\n    if (current.value === 'S') {\n      const matchingMedia = this.galleryMedia[0];\n\n      if (matchingMedia) {\n        scrollIntoView(this.gallery, matchingMedia);\n        const matchingMediaIndex = Array.prototype\n          .indexOf.call(this.galleryMedia, matchingMedia);\n        this.navigationArrowPrevious.disabled = matchingMediaIndex === 0;\n        this.navigationCurrentMedia.innerText = matchingMediaIndex + 1;\n        this.navigationArrowNext.disabled = matchingMediaIndex === this.galleryMedia.length - 1;\n      }\n    }\n  }\n\n  /**\n   * Handles the intersection event of a media item and gallery viewport\n   * Updates the navigation arrows\n   */\n  _handleIntersection(entries) {\n    const intersectingEntry = entries\n      .reduce((acc, entry) => {\n        let largestIntersectingEntry = acc;\n\n        if (\n          entry.intersectionRatio >= this._intersectionObserver.thresholds\n          && (\n            !largestIntersectingEntry\n            || largestIntersectingEntry.intersectionRatio < entry.intersectionRatio\n          )\n        ) {\n          largestIntersectingEntry = entry;\n        }\n\n        return largestIntersectingEntry;\n      }, null);\n\n    if (!intersectingEntry) return;\n\n    Core.Media.pauseAll();\n\n    const intersectingMediaIndex = Array.prototype\n      .indexOf.call(this.galleryMedia, intersectingEntry.target);\n\n    if (intersectingMediaIndex >= 0) {\n      const currImgPosition = intersectingMediaIndex + 1; // Position is 1-based index\n\n      this.navigationArrowPrevious.disabled = intersectingMediaIndex === 0;\n      this.navigationCurrentMedia.innerText = currImgPosition;\n      this.navigationArrowNext.disabled = intersectingMediaIndex === this.galleryMedia.length - 1;\n\n      this.setState({\n        selectedMedia: intersectingEntry.target.dataset.media,\n      });\n    }\n  }\n}\n","export default class FeaturedProduct extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n\n    const { product, selectedVariant } = this.data;\n\n    this.state = {\n      product,\n      selectedVariant,\n    };\n\n    this.events.register(el, 'product:add-to-cart:success', event => this._onAddToCartSuccess(event));\n    this.events.register(el, 'product:variant-change', event => this._onVariantChange(event));\n\n    const productGridEl = el.querySelector('[data-product-grid]');\n    const productGridColumnDetailsEl = el.querySelector('[data-product-grid-column-details]');\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n        const viewportHeight = window.visualViewport.height;\n\n        if (entry.contentRect.height <= viewportHeight) {\n          productGridEl.dataset.stickyPosition = 'top';\n        } else {\n          productGridEl.dataset.stickyPosition = 'bottom';\n        }\n      }\n    });\n\n    resizeObserver.observe(productGridColumnDetailsEl);\n  }\n\n  _onAddToCartSuccess() {\n    const { selectedVariant } = this.state;\n\n    this._refreshProduct(selectedVariant);\n  }\n\n  _onVariantChange(event) {\n    const { variant, state } = event.detail;\n\n    if (state !== 'unselected') {\n      this._refreshProduct(variant);\n\n      this.setState({ selectedVariant: variant });\n    }\n  }\n\n  _refreshProduct(variant) {\n    // Update the price component using fetch\n    fetch(`${this.data.url}/async?variant=${variant.id}&section_id=${this.sectionId}`)\n      .then(response => response.text())\n      .then(responseText => {\n        const html = new DOMParser().parseFromString(responseText, 'text/html');\n        const skuBlockEl = html.querySelector('[data-type=\"sku\"]');\n        const priceBlockEl = html.querySelector('[data-type=\"price\"]');\n        const inventoryStatusBlockEl = html.querySelector('[data-type=\"inventory_status\"]');\n        const buyButtonsEl = html.querySelector('[data-type=\"buy_buttons\"]');\n        const sharingEl = html.querySelector('[data-type=\"share\"]');\n\n        if (skuBlockEl) {\n          this.el.querySelector('[data-type=\"sku\"]').innerHTML = skuBlockEl.innerHTML;\n        }\n\n        if (priceBlockEl) {\n          this.el.querySelector('[data-type=\"price\"]').innerHTML = priceBlockEl.innerHTML;\n        }\n\n        if (inventoryStatusBlockEl) {\n          this.el.querySelector('[data-type=\"inventory_status\"]').innerHTML = inventoryStatusBlockEl.innerHTML;\n        }\n\n        if (buyButtonsEl) {\n          this.el.querySelector('[data-type=\"buy_buttons\"]').innerHTML = buyButtonsEl.innerHTML;\n        }\n\n        if (sharingEl) {\n          this.el.querySelector('[data-type=\"share\"]').innerHTML = sharingEl.innerHTML;\n        }\n      });\n  }\n}\n","/**\n * @class ProductCard\n * @classdesc The class for a product card.\n *\n * @extends Core.Component\n */\nexport default class ProductCard extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.productImage = this.el.querySelector('[data-product-image]');\n    this.productVariantColorLabel = this.el.querySelector('[data-variant-color-label]');\n  }\n\n  onMount() {\n    this.swatches = this.query('product-card-swatches');\n    this.quickAddButton = this.el.querySelector('[data-quick-add-button]');\n    this.quickAddMobile = this.query('button-floating');\n    this.quickshop = Core.Components.getComponent('quickshop');\n\n    if (this.swatches) {\n      this.events.register(this.swatches.el, 'swatch:update', e => {\n        this._updateSelectedVariant(e.detail.color);\n      });\n    }\n\n    // Handle quick add button click to show quickshop\n    if (this.quickAddButton) {\n      this.events.register(this.quickAddButton, 'mouseover', e => {\n        e.stopPropagation();\n        const { productLink } = this.quickAddButton.dataset;\n        this.quickshop.loadQuickshop({ productLink });\n      });\n\n      this.events.register(this.quickAddButton, 'click', e => {\n        e.stopPropagation();\n        const { productLink } = this.quickAddButton.dataset;\n        this.quickshop.open(this.quickAddButton, { productLink });\n      });\n    }\n\n    if (this.quickAddMobile) {\n      this.events.register(this.quickAddMobile.el, 'click', e => {\n        e.stopPropagation();\n        const { productLink } = this.quickAddButton.dataset;\n        this.quickshop.open(this.quickAddMobile.el, { productLink });\n      });\n    }\n  }\n\n  onDismount() {\n    this.events.unregisterAll();\n  }\n\n  /**\n   * This method will display the image for the variant of the color requested, if one exists.\n   * @param {String} color The color of the variant to switch to\n   * @private\n   */\n  _updateSelectedVariant(color) {\n    const variantImagesContainer = this.el.querySelector('[data-variant-images]');\n    const variantImages = variantImagesContainer.querySelectorAll('[data-variant-image]');\n    const currentImage = this.el.querySelector(`[data-variant-image=\"${color}\"]`);\n\n    variantImagesContainer.classList.add('hidden');\n\n    variantImages.forEach(image => {\n      image.classList.add('hidden');\n    });\n\n    if (currentImage) {\n      variantImagesContainer.classList.remove('hidden');\n      currentImage.classList.remove('hidden');\n    }\n\n    if (this.productVariantColorLabel) {\n      this.productVariantColorLabel.innerHTML = color;\n    }\n  }\n}\n","/**\n * @class ProductCardSlider\n * @classdesc A class for handling product card slider interactions\n * @extends Core.Component\n */\nexport default class ProductCardSlider extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n  }\n\n  onMount() {\n    this.slider = this.el.querySelector('[data-slider]');\n    this.sliderItems = this.slider.querySelectorAll('[data-slider-item]');\n    this.buttonContainer = this.el.querySelector('[data-product-card-slider-buttons]');\n    this.previousButton = this.buttonContainer.querySelector('[data-slider-button-previous]');\n    this.nextButton = this.buttonContainer.querySelector('[data-slider-button-next]');\n    this.scrollIncrementBreakpoint = this.data.scrollIncrementBp;\n\n    this._setScrollIncrement();\n    this._setButtonContainerHeight();\n\n    this.events.register(this.previousButton, 'click', event => this._handleClick(event));\n    this.events.register(this.nextButton, 'click', event => this._handleClick(event));\n    this.events.register(window, 'resize', () => this._setButtonContainerHeight());\n    Core.Breakpoints.onChange(() => this._setScrollIncrement());\n\n    // The 10% rootMargin is to account for the 10% \"sneak peak\" of the next card in the slider\n    this._observer = new IntersectionObserver(this._handleIntersection.bind(this), { root: this.slider, rootMargin: '0px 10% 0px 0px', threshold: 1.0 });\n    this.sliderItems.forEach(item => this._observer.observe(item));\n\n  }\n\n  /**\n   * Handles the click event for when the previous/next buttons are clicked.\n   * Slider scrolls one card-length per click.\n   * @param {Event} event - The 'click' event object\n   */\n  _handleClick(event) {\n    event.preventDefault();\n\n    const { name } = event.currentTarget;\n    const newScrollPosition = name === 'next'\n      ? this.slider.scrollLeft + this.scrollIncrement\n      : this.slider.scrollLeft - this.scrollIncrement;\n\n    this.slider.scrollTo({ left: newScrollPosition, behavior: 'smooth' });\n  }\n\n  /**\n   *\n   * Callback for IntersectionObserver.\n   * Toggle button visibility based on users scroll position in slider\n   * @param {IntersectionObserverEntry[]} entries\n   */\n  _handleIntersection(entries) {\n    // Safari doesn't support `scrollTo`'s `smooth` behavior. Therefore,\n    // process the entries in batches as multiple cards may become visible\n    // in a single scroll movement\n    const intersectionCardIndices = entries\n      .filter(entry => entry.isIntersecting)\n      .map(({ target }) => Array.prototype.indexOf.call(this.sliderItems, target));\n\n    if (intersectionCardIndices.length === 0) return;\n\n    const containsFirstCard = intersectionCardIndices.includes(0);\n    const containsLastCard = intersectionCardIndices.includes(this.sliderItems.length - 1);\n\n    this.previousButton.classList.toggle('hidden', containsFirstCard);\n    this.nextButton.classList.toggle('hidden', containsLastCard);\n  }\n\n  /**\n   * Determine how many cards to scroll when previous/next buttons\n   * are clicked.\n   */\n  _setScrollIncrement() {\n    this.multiplier = Core.Breakpoints.min(this.scrollIncrementBreakpoint)\n      ? Number(this.data.cardsPerRow, 10)\n      : Number(this.data.cardsPerRowMobile, 10);\n\n    if (this.sliderItems[0] !== undefined) {\n      this.scrollIncrement = this.sliderItems[0].clientWidth * this.multiplier;\n    }\n  }\n\n  /**\n   * Manually set button container height so buttons are centred\n   * relative to product card images\n   */\n  _setButtonContainerHeight() {\n    if (!this.buttonContainer) return;\n    const { offsetHeight } = this.slider.querySelector('[data-product-image]');\n    this.buttonContainer.style.height = `${offsetHeight}px`;\n  }\n}\n","export default class CustomerAddressForm extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.countryContainer = el.querySelector('[data-address-form-country]');\n    this.countrySelect = this.countryContainer.querySelector('select');\n    this.provinceContainer = el.querySelector('[data-address-form-province]');\n    this.provinceSelect = this.provinceContainer.querySelector('select');\n\n    this.countryProvinceObserver = new Shopify.CountryProvinceSelector(\n      this.countrySelect.id,\n      this.provinceSelect.id,\n      {\n        hideElement: this.provinceContainer.id,\n      },\n    );\n  }\n\n  onMount() {\n    const editButton = this.query('button', 'edit-address');\n    const deleteButton = this.query('button', 'delete-address');\n    const resetButton = this.query('button', 'reset-address');\n\n    Core.Events.register(editButton.el, 'click', e => {\n      this.toggleEditForm(e);\n    });\n    Core.Events.register(resetButton.el, 'click', e => this.toggleEditForm(e));\n\n    if (deleteButton) {\n      Core.Events.register(deleteButton.el, 'click', e => this.handleDeleteClick(e));\n    }\n  }\n\n  toggleEditForm({ currentTarget }) {\n    const addressForm = this.el.querySelector('[data-edit-address-modal]');\n    const open = addressForm.dataset.open === 'true';\n    addressForm.setAttribute('data-open', open ? 'false' : 'true');\n    currentTarget.setAttribute('aria-expanded', open ? 'false' : 'true');\n  }\n\n  handleDeleteClick({ currentTarget }) {\n    // eslint-disable-next-line no-alert\n    if (confirm(currentTarget.getAttribute('data-confirm-message'))) {\n      Shopify.postLink(currentTarget.dataset.target, {\n        parameters: { _method: 'delete' },\n      });\n    }\n  }\n}\n","/**\n * @class CartDrawerTemplate\n * @classdesc The content for the cart drawer\n *\n * @extends Core.SectionComponent\n */\nexport default class CartDrawerTemplate extends Core.SectionComponent {\n}\n","const scrollLock = require('scroll-lock');\nconst isbot = require('isbot');\n\nfunction getAge(birthdate) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n\n/**\n * @class AgeGate\n * @classdesc The class for site Age Gate.\n *\n * @extends Core.Component\n */\nexport default class AgeGate extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n    this._ageGate = this.el.querySelector('[data-age-gate]');\n\n    if (!this._ageGate) return; // We're not enabled\n\n    this._ageGateForm = this._ageGate.querySelector('[data-age-gate-form]');\n    this._ageGateErrorEl = this._ageGateForm.querySelector('[data-age-gate-error]');\n    this._requiredAge = this._ageGateForm.dataset.requiredAge;\n    this._ageGateForm.addEventListener('submit', this._onFormSubmit.bind(this));\n\n    if (isbot(navigator.userAgent)) {\n      this.close();\n    } else if (this._ageGate.style.display === '') {\n      this.open();\n    }\n  }\n\n  open() {\n    scrollLock.disablePageScroll();\n    this._ageGate.style.display = '';\n  }\n\n  close() {\n    scrollLock.enablePageScroll();\n    this._ageGate.style.display = 'none';\n  }\n\n  _onFormSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const data = new FormData(event.target);\n    const day = data.get('day');\n    const month = data.get('month');\n    const year = data.get('year');\n\n    if (day === '' || month === '' || year === '') return;\n\n    const age = getAge(new Date(year, month, day));\n\n    if (age >= this._requiredAge) {\n      this.close();\n      sessionStorage.setItem('age-gate', age);\n    } else {\n      this._ageGateErrorEl.style.display = '';\n    }\n  }\n}\n","export default class ButtonText extends Core.Component {\n  get disabled() {\n    return this.el.disabled;\n  }\n\n  set disabled(disabled) {\n    this.el.disabled = disabled;\n  }\n\n  get text() {\n    return this.el.innerText;\n  }\n\n  set text(text) {\n    this.el.innerText = text;\n  }\n}\n","const LOCAL_STORAGE_KEY = 'pxu-shopify-surface-pick-up';\n\nconst isNotExpired = timestamp => timestamp + (1000 * 60 * 60) >= Date.now();\n\n// Haversine Distance\n// The haversine formula is an equation giving great-circle distances between\n// two points on a sphere from their longitudes and latitudes\nfunction calculateDistance(\n  latitude1,\n  longitude1,\n  latitude2,\n  longitude2,\n  unitSystem,\n) {\n  const dtor = Math.PI / 180;\n  const radius = unitSystem === 'metric' ? 6378.14 : 3959;\n\n  const rlat1 = latitude1 * dtor;\n  const rlong1 = longitude1 * dtor;\n  const rlat2 = latitude2 * dtor;\n  const rlong2 = longitude2 * dtor;\n\n  const dlon = rlong1 - rlong2;\n  const dlat = rlat1 - rlat2;\n\n  const a = Math.sin(dlat / 2) ** 2\n    + Math.cos(rlat1) * Math.cos(rlat2) * Math.sin(dlon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return radius * c;\n}\n\nasync function getGeoLocation() {\n  return new Promise((resolve, reject) => {\n    const options = {\n      maximumAge: 3600000, // 1 hour\n      timeout: 5000,\n    };\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(({ coords }) => resolve(coords), reject, options);\n    } else {\n      reject();\n    }\n  });\n}\n\nasync function setLocation({ latitude, longitude }) {\n  const newData = {\n    latitude,\n    longitude,\n    timestamp: Date.now(),\n  };\n\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(newData));\n\n  return fetch('/localization.json', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ latitude, longitude }),\n  }).then(() => ({ latitude, longitude }));\n}\n\nasync function getLocation(requestLocation = false) {\n  const cachedLocation = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n  if (cachedLocation && isNotExpired(cachedLocation.timestamp)) {\n    return cachedLocation;\n  }\n\n  if (requestLocation) {\n    return getGeoLocation().then(coords => {\n      setLocation(coords); // We don't need to wait for this\n\n      return coords;\n    });\n  }\n\n  return null;\n}\n\nexport default class SurfacePickUpDrawer extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    const items = el.querySelectorAll('[data-surface-pick-up-item]');\n\n    getLocation(true)\n      .then(coords => {\n        items.forEach(item => {\n          const distanceEl = item.querySelector('[data-distance]');\n          const distanceUnitEl = item.querySelector('[data-distance-unit]');\n          const unitSystem = distanceUnitEl.dataset.distanceUnit;\n          const itemLatitude = parseFloat(distanceEl.dataset.latitude);\n          const itemLongitude = parseFloat(distanceEl.dataset.longitude);\n\n          if (coords && isFinite(itemLatitude) && isFinite(itemLongitude)) {\n            const distance = calculateDistance(\n              coords.latitude,\n              coords.longitude,\n              itemLatitude,\n              itemLongitude,\n              unitSystem,\n            );\n\n            distanceEl.innerHTML = distance.toFixed(1);\n          } else {\n            distanceEl.remove();\n            distanceUnitEl.remove();\n          }\n        });\n      })\n      .catch(e => {\n        console.debug(e);\n\n        items.forEach(item => {\n          const distanceEl = item.querySelector('[data-distance]');\n          const distanceUnitEl = item.querySelector('[data-distance-unit]');\n\n          distanceEl.remove();\n          distanceUnitEl.remove();\n        });\n      });\n  }\n\n  onMount() {\n    const drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (drawerModal) {\n      const embedModalBtnEl = this.el.querySelector('[data-surface-pick-up-drawer-close]');\n\n      this.events.register(embedModalBtnEl, 'click', e => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const closeEvent = new CustomEvent('surface-pick-up-drawer:close', { bubbles: true });\n        this.el.dispatchEvent(closeEvent);\n      });\n    }\n  }\n}\n","export default class SurfacePickUp extends Core.Component {\n  onMount() {\n    const drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (!drawerModal) return;\n\n    this._drawerFlyout = drawerModal.createFlyout();\n\n    const embedModalBtn = this.query('button');\n\n    if (!embedModalBtn) return; // We're not looking at a variant with surface pick up\n\n    const drawerHeaderFragment = this.el.querySelector('[data-drawer-header-template]').content.cloneNode(true);\n    const drawerFragment = this.el.querySelector('[data-drawer-template]').content.cloneNode(true);\n    const { el: embedModalBtnEl } = embedModalBtn;\n\n    this.events.register(embedModalBtnEl, 'click', e => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      this._drawerFlyout\n        .then(drawerFlyout => {\n          if (!drawerFlyout) return;\n\n          drawerFlyout.populateHeading(drawerHeaderFragment);\n          drawerFlyout.populateContent(drawerFragment);\n          drawerModal.openFlyout(drawerFlyout, embedModalBtnEl);\n\n          this.events.register(drawerFlyout.el, 'surface-pick-up-drawer:close', () => drawerModal.closeFlyout(drawerFlyout));\n        });\n    });\n  }\n\n  onDismount() {\n    super.onDismount();\n\n    if (this._drawerFlyout) {\n      this._drawerFlyout.then(drawerFlyout => drawerFlyout.destroy());\n    }\n  }\n}\n","export default class Notification extends Core.Component {\n  get type() {\n    return this.el.getAttribute('role') === 'alert' ? 'error' : 'success';\n  }\n\n  set type(type) {\n    this.el.setAttribute('role', type === 'error' ? 'alert' : 'status');\n  }\n\n  get content() {\n    return this.el.innerHTML;\n  }\n\n  set content(content) {\n    this.el.innerHTML = content;\n  }\n\n  get hidden() {\n    return this.el.hasAttribute('hidden');\n  }\n\n  set hidden(hidden) {\n    if (hidden) {\n      this.el.setAttribute('hidden', '');\n    } else {\n      this.el.removeAttribute('hidden');\n    }\n  }\n}\n","export default class GiftCardRecipientForm extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n    this.inputs = this.el.querySelectorAll('[data-input]');\n    this.email = this.el.querySelector('[data-input-email]');\n    this.checkbox = this.el.querySelector('[data-input-checkbox]');\n    this.notification = this.el.querySelector('.notification');\n\n    this.events.register(this.checkbox, 'change', () => {\n      if (this.checkbox.checked) {\n        this._open();\n      } else {\n        this._close();\n      }\n    });\n  }\n\n  _open() {\n    this.el.classList.add('recipient-form--open');\n    this.email.setAttribute('required', '');\n  }\n\n  _close() {\n    this.el.classList.remove('recipient-form--open', 'recipient-form--errors');\n    this.email.removeAttribute('required');\n\n    if (this.notification) {\n      this.notification.hidden = true;\n    }\n\n    this.inputs.forEach(input => {\n      input.value = '';\n    });\n  }\n}\n","export default class ButtonAction extends Core.Component {\n  set size(size) {\n    switch (size) {\n      case 'small':\n      case 'medium':\n      case 'large':\n        this.el.classList.remove('button-action--small', 'button-action--medium', 'button-action--large');\n        this.el.classList.add(`button-action--${size}`);\n        break;\n      default:\n        break;\n    }\n  }\n\n  set style(style) {\n    switch (style) {\n      case 'primary':\n      case 'secondary':\n      case 'tertiary':\n        this.el.classList.remove('button-action--primary', 'button-action--secondary', 'button-action--tertiary');\n        this.el.classList.add(`button-action--${style}`);\n        break;\n      default:\n        break;\n    }\n  }\n\n  get disabled() {\n    return this.el.disabled;\n  }\n\n  set disabled(disabled) {\n    this.el.disabled = disabled;\n  }\n\n  get text() {\n    return this.el.innerText;\n  }\n\n  set text(text) {\n    this.el.innerText = text;\n  }\n\n  set loading(loading) {\n    if (loading) {\n      this.el.setAttribute('data-loading', '');\n      this.el.setAttribute('aria-busy', true);\n    } else {\n      this.el.removeAttribute('data-loading');\n      this.el.setAttribute('aria-busy', false);\n    }\n  }\n\n  get loading() {\n    return this.el.hasAttribute('data-loading');\n  }\n}\n","export default class BuyButtons extends Core.Component {\n  onMount() {\n    const dynamicCheckoutBtnEl = this.el.querySelector('[data-shopify=\"payment-button\"]');\n\n    if (window.Shopify && Shopify.PaymentButton) {\n      Shopify.PaymentButton.init();\n    }\n\n    if (dynamicCheckoutBtnEl && !dynamicCheckoutBtnEl.classList.contains('.shopify-payment-button__button--hidden')) {\n      const btn = this.query('button-action');\n\n      btn.style = 'secondary';\n    }\n\n    this.events.register(this.el, 'submit', e => {\n      e.preventDefault();\n\n      const btn = this.query('button-action');\n      const notifications = this.queryAll('notification');\n      const recipientForm = this.el.querySelector('[data-recipient-form]');\n\n      btn.loading = true;\n\n      fetch(\n        `${window.PXUTheme.routes.cart_add_url}.js`,\n        {\n          method: 'POST',\n          headers: { Accept: 'application/javascript', 'X-Requested-With': 'XMLHttpRequest' },\n          body: new FormData(e.target),\n        },\n      )\n        .then(response => (\n          Promise.all([\n            response,\n            fetch(\n              `${window.PXUTheme.routes.cart_url}.js`,\n              {\n                method: 'GET',\n                headers: { Accept: 'application/javascript', 'X-Requested-With': 'XMLHttpRequest' },\n              },\n            ),\n          ])\n        ))\n        .then(([response1, response2]) => Promise.all([response1.json(), response2.json()]))\n        .then(([response, cart]) => {\n          if (response.status) {\n            const addToCartErrorEvent = new CustomEvent('product:add-to-cart:error', { detail: { cart, error: response }, bubbles: true });\n            this.el.dispatchEvent(addToCartErrorEvent);\n\n            notifications.forEach(notification => {\n              notification.type = 'error';\n              if (response.description.email) {\n                notifications[0].hidden = false;\n              } else {\n                notification.content = response.description;\n                notification.hidden = false;\n              }\n            });\n\n            if (response.description.email) {\n              recipientForm.classList.add('recipient-form--errors');\n            }\n\n            return;\n          }\n\n          if (recipientForm) {\n            recipientForm.classList.remove('recipient-form--errors');\n\n            notifications.forEach(notification => {\n              notification.hidden = true;\n            });\n          }\n\n          if (window.location.pathname === '/cart') {\n            window.location.reload();\n            return;\n          }\n\n          const addToCartEvent = new CustomEvent('product:add-to-cart:success', { detail: { cart, line_item: response }, bubbles: true });\n          this.el.dispatchEvent(addToCartEvent);\n\n          const cartDrawer = Core.Components.getComponent('cart-drawer');\n\n          if (cartDrawer && cartDrawer.data.enabled) {\n            cartDrawer.open(btn.el, true, [response]);\n          } else {\n            window.location = window.PXUTheme.routes.cart_url;\n          }\n        })\n        .catch(err => console.error('Error:', err))\n        .finally(() => { btn.loading = false; });\n    });\n  }\n\n  setButtonState(state) {\n    const btn = this.query('button-action');\n    switch(state) {\n      case 'unavailable':\n        btn.el.innerHTML = this.data.unavailable;\n        btn.el.setAttribute('disabled', '');\n        break;\n      case 'sold out':\n        btn.el.innerHTML = this.data.soldOut;\n        btn.el.setAttribute('disabled', '');\n        break;\n      case 'available':\n        btn.el.innerHTML = this.data.addToCart;\n        btn.el.removeAttribute('disabled');\n    }\n  }\n}\n","/**\n * @class InputFieldset\n * @classdesc Represents an input of type fieldset\n *\n * @extends Core.Component\n */\nexport default class InputFieldset extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.labelEl = el.querySelector('[data-label]');\n  }\n\n  /**\n   * Gets the fieldset label\n   */\n  get label() {\n    return this.labelEl.innerHTML;\n  }\n\n  /**\n   * Sets the fieldset label with new content\n   *\n   * @param {HTMLElement|DOMString|string} content - The content to replace the\n   *                                       current labels content with.\n   */\n  set label(content) {\n    if (content instanceof HTMLElement) {\n      this.labelEl.innerHTML = '';\n      this.labelEl.appendChild(content);\n    } else {\n      this.labelEl.innerHTML = content;\n    }\n  }\n\n  setUnavailableValues(values) {\n    const existingOptions = [...this.queryAll('input-radio'), ...this.queryAll('input-swatch')];\n\n    existingOptions.forEach(existingOption => {\n      existingOption.unavailable = values.some(value => value === existingOption.value);\n    });\n  }\n\n  disableValues(values) {\n    const existingOptions = [...this.queryAll('input-radio'), ...this.queryAll('input-swatch')];\n\n    existingOptions.forEach(existingOption => {\n      if (values.some(value => value === existingOption.value)) {\n        existingOption.disabled = true;\n      }\n    });\n  }\n\n  removeValues(values) {\n    const existingOptions = [...this.queryAll('input-radio'), ...this.queryAll('input-swatch')];\n\n    existingOptions.forEach(existingOption => {\n      if (values.some(value => value === existingOption.value)) {\n        // This doesn't feel right, maybe we should have a Component.remove(); method?\n        existingOption.el.remove();\n      }\n    });\n  }\n}\n","/**\n * @class InputRadio\n * @classdesc Represents an input of type radio\n *\n * @extends Core.Component\n */\nexport default class InputRadio extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.inputEl = el.querySelector('[data-input]');\n\n    // Get all radio inputs with same name and listen to their changes events\n    // to sync this component\n    // This is anti-pattern for a component but is acceptable because\n    // all radio inputs with the same name inherently control each other\n    const groupEls = document.querySelectorAll(`input[type=\"radio\"][name=\"${this.inputEl.name}\"]`);\n\n    groupEls.forEach(groupEl => {\n      this.events.register(groupEl, 'change', () => {\n        if (this.inputEl.checked) {\n          this.el.setAttribute('data-checked', '');\n        } else {\n          this.el.removeAttribute('data-checked');\n        }\n      });\n    });\n  }\n\n  get value() {\n    return this.inputEl.value;\n  }\n\n  get disabled() {\n    return this.inputEl.disabled;\n  }\n\n  set disabled(disabled) {\n    if (disabled) {\n      this.el.setAttribute('data-disabled', '');\n    } else {\n      this.el.removeAttribute('data-disabled');\n    }\n\n    this.inputEl.disabled = disabled;\n  }\n\n  get checked() {\n    return this.inputEl.checked;\n  }\n\n  set checked(checked) {\n    if (checked) {\n      this.el.setAttribute('data-checked', '');\n    } else {\n      this.el.removeAttribute('data-checked');\n    }\n\n    this.inputEl.checked = checked;\n  }\n\n  get unavailable() {\n    return this.el.hasAttribute('data-unavailable');\n  }\n\n  set unavailable(unavailable) {\n    if (unavailable) {\n      this.el.setAttribute('data-unavailable', '');\n    } else {\n      this.el.removeAttribute('data-unavailable');\n    }\n  }\n}\n","/**\n * @class InputSwatch\n * @classdesc Represents an input of type radio\n *\n * @extends Core.Component\n */\nexport default class InputSwatch extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.inputEl = el.querySelector('[data-input]');\n\n    // Get all radio inputs with same name and listen to their changes events\n    // to sync this component\n    // This is anti-pattern for a component but is acceptable because\n    // all radio inputs with the same name inherently control each other\n    const groupEls = document.querySelectorAll(`input[type=\"radio\"][name=\"${this.inputEl.name}\"]`);\n\n    groupEls.forEach(groupEl => {\n      this.events.register(groupEl, 'change', () => {\n        if (this.inputEl.checked) {\n          this.el.setAttribute('data-checked', '');\n        } else {\n          this.el.removeAttribute('data-checked');\n        }\n      });\n    });\n  }\n\n  get value() {\n    return this.inputEl.value;\n  }\n\n  get disabled() {\n    return this.inputEl.disabled;\n  }\n\n  set disabled(disabled) {\n    if (disabled) {\n      this.el.setAttribute('data-disabled', '');\n    } else {\n      this.el.removeAttribute('data-disabled');\n    }\n\n    this.inputEl.disabled = disabled;\n  }\n\n  get checked() {\n    return this.inputEl.checked;\n  }\n\n  set checked(checked) {\n    if (checked) {\n      this.el.setAttribute('data-checked', '');\n    } else {\n      this.el.removeAttribute('data-checked');\n    }\n\n    this.inputEl.checked = checked;\n  }\n\n  get unavailable() {\n    return this.el.hasAttribute('data-unavailable');\n  }\n\n  set unavailable(unavailable) {\n    if (unavailable) {\n      this.el.setAttribute('data-unavailable', '');\n    } else {\n      this.el.removeAttribute('data-unavailable');\n    }\n  }\n}\n","/**\n * @class OptionSelectableBoxes\n * @classdesc Represents an option as selectable boxes\n *\n * @extends Core.Component\n */\nexport default class OptionSelectableBoxes extends Core.Component {\n  /**\n   * Returns the selected value or false if unselected\n   */\n  get selectedValue() {\n    const inputs = [...this.queryAll('input-swatch'), ...this.queryAll('input-radio')];\n    const checkedInput = inputs.find(input => input.checked);\n\n    if (checkedInput) {\n      return checkedInput.value;\n    }\n\n    return false;\n  }\n\n  set selectedValue(value) {\n    const inputs = [...this.queryAll('input-swatch'), ...this.queryAll('input-radio')];\n    const selectedInput = inputs.find(input => input.value === value);\n\n    inputs.forEach(input => {\n      if (input === selectedInput) {\n        input.checked = true;\n      } else {\n        input.checked = false;\n      }\n    });\n  }\n\n  get position() {\n    return this.data.position;\n  }\n\n  onMount() {\n    this.events.register(this.el, 'change', () => {\n      const inputFieldset = this.query('input-fieldset');\n      const { selectedValue } = this;\n      const div = document.createElement('div');\n\n      div.innerHTML = this.data.chosen_option.replace('|value|', `<span>${selectedValue}</span>`);\n\n      if (inputFieldset) {\n        if (selectedValue) {\n          inputFieldset.label = div.innerHTML;\n        } else {\n          inputFieldset.label = this.data.chose_option;\n        }\n      }\n    });\n  }\n\n  setUnavailableValues(values) {\n    const inputFieldset = this.query('input-fieldset');\n\n    if (inputFieldset) {\n      inputFieldset.setUnavailableValues(values);\n    }\n  }\n\n  disableValues(values) {\n    const inputFieldset = this.query('input-fieldset');\n\n    if (inputFieldset) {\n      inputFieldset.disableValues(values);\n    }\n  }\n\n  removeValues(values) {\n    const inputFieldset = this.query('input-fieldset');\n\n    if (inputFieldset) {\n      inputFieldset.removeValues(values);\n    }\n  }\n}\n","/**\n * @class InputSelect\n * @classdesc Represents an input of type select\n *\n * @extends Core.Component\n */\nexport default class InputSelect extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.inputEl = el.querySelector('[data-input]');\n    this.labelEl = el.querySelector('[data-label]');\n  }\n\n  get value() {\n    return this.inputEl.value;\n  }\n\n  set value(value) {\n    this.inputEl.value = value;\n  }\n\n  /**\n   * Returns the select label\n   */\n  get label() {\n    return this.labelEl.innerHTML;\n  }\n\n  /**\n   * Sets the select label\n   *\n   * @param {HTMLElement|DOMString|string} content - The content to replace the\n   *                                       current labels content with.\n   */\n  set label(content) {\n    if (content instanceof HTMLElement) {\n      this.labelEl.innerHTML = '';\n      this.labelEl.appendChild(content);\n    } else {\n      this.labelEl.innerHTML = content;\n    }\n  }\n\n  disableValues(values) {\n    const existingOptions = this.inputEl.querySelectorAll('option');\n\n    existingOptions.forEach(existingOption => {\n      if (values.some(value => value === existingOption.value)) {\n        existingOption.setAttribute('disabled', '');\n      }\n    });\n\n    return null;\n  }\n\n  removeValues(values) {\n    const existingOptions = this.inputEl.querySelectorAll('option');\n\n    existingOptions.forEach(existingOption => {\n      if (values.some(value => value === existingOption.value)) {\n        existingOption.remove();\n      }\n    });\n\n    return null;\n  }\n}\n","/**\n * @class OptionDropdown\n * @classdesc Represents an option as dropdown\n *\n * @extends Core.Component\n */\nexport default class OptionDropdown extends Core.Component {\n  /**\n   * Returns the selected value or false if unselected\n   */\n  get selectedValue() {\n    const input = this.query('input-select');\n\n    if (input) {\n      return input.value !== '' ? input.value : false;\n    }\n\n    return false;\n  }\n\n  set selectedValue(value) {\n    const input = this.query('input-select');\n\n    input.value = value;\n  }\n\n  get position() {\n    return this.data.position;\n  }\n\n  onMount() {\n    this.events.register(this.el, 'change', () => {\n      const inputSelect = this.query('input-select');\n      const { selectedValue } = this;\n\n      if (inputSelect) {\n        if (selectedValue) {\n          inputSelect.label = this.data.chosen_option;\n        } else {\n          inputSelect.label = this.data.chose_option;\n        }\n      }\n    });\n  }\n\n  // This method does nothing.\n  // It exists to match the selectable boxes interface\n  setUnavailableValues() {\n    return undefined;\n  }\n\n  disableValues(values) {\n    const inputSelect = this.query('input-select');\n\n    if (inputSelect) {\n      inputSelect.disableValues(values);\n    }\n  }\n\n  removeValues(values) {\n    const inputSelect = this.query('input-select');\n\n    if (inputSelect) {\n      inputSelect.removeValues(values);\n    }\n  }\n}\n","const valueElementType = {\n  select: 'option',\n  radio: 'input[type=\"radio\"]',\n};\n\nfunction getOptions(optionsEls) {\n  const select = [];\n  const radio = [];\n\n  for (let i = 0; i < optionsEls.length; i++) {\n    const optionEl = optionsEls[i];\n    const wrappers = optionEl.matches('[data-variant-option-value-wrapper]')\n      ? [optionEl]\n      : Array.prototype.slice.call(optionEl.querySelectorAll('[data-variant-option-value-wrapper]'));\n    const values = optionEl.matches('[data-variant-option-value]')\n      ? [optionEl]\n      : Array.prototype.slice.call(optionEl.querySelectorAll('[data-variant-option-value]'));\n\n    if (!values.length) break;\n\n    const option = {\n      option: optionEl,\n      wrappers,\n      values,\n    };\n\n    if (values[0].matches(valueElementType.select)) {\n      select.push(option);\n    } else if (values[0].matches(valueElementType.radio)) {\n      radio.push(option);\n    }\n  }\n\n  return {\n    select,\n    radio,\n  };\n}\n\nfunction getVariantFromSelectedOptions(variants, selectedOptions) {\n  for (let i = 0; i < variants.length; i++) {\n    const variant = variants[i];\n    const isVariant = variant.options.every((option, index) => option === selectedOptions[index]);\n\n    if (isVariant) return variant; // We found the variant\n  }\n\n  return false;\n}\n\nfunction _getVariant(variants, options) {\n  return variants\n    .find(variant => variant.options.every((option, index) => option === options[index]));\n}\n\nfunction _setOptionsMap(\n  product,\n  selectedOptions,\n  optionsMap,\n  option1,\n  option2 = null,\n  option3 = null,\n) {\n  const updatedOptionsMap = { ...optionsMap };\n  const options = [option1, option2, option3].filter(option => !!option);\n  const variant = _getVariant(product.variants, options);\n  const variantOptionMatches = options.filter(\n    (option, index) => option === selectedOptions[index],\n  ).length;\n  const isCurrentVariant = variantOptionMatches === product.options.length;\n  const isNeighbor = variantOptionMatches === product.options.length - 1;\n\n  for (let i = 0; i < options.length; i++) {\n    const option = options[i];\n\n    if (option) {\n      let {\n        setByCurrentVariant,\n        setByNeighbor,\n        accessible,\n        available,\n      } = optionsMap[i][option];\n\n      if (variant) {\n        accessible = variant.available || accessible;\n\n        // The current variant is always\n        // the priority for option availability\n        if (isCurrentVariant) {\n          setByCurrentVariant = true;\n          ({ available } = variant);\n        } else if (!setByCurrentVariant && isNeighbor) {\n          // If the variant is a neighbor\n          // And the option doesn't belong to the variant\n          // Use its availability information for the option\n          // If multiple neighbors exist, prefer true\n          available = setByNeighbor ? available || variant.available : variant.available;\n          setByNeighbor = true;\n        }\n      } else if (isCurrentVariant) {\n        // Catch case where current variant doesn't exist\n        // Ensure availability is false\n        setByCurrentVariant = true;\n        available = false;\n      } else if (!setByCurrentVariant && isNeighbor) {\n        // Catch case where neighbor doesn't exist\n        // Ensure availability is false\n        // If multiple neighbors exist, prefer true\n        available = setByNeighbor ? available : false;\n        setByNeighbor = true;\n      }\n\n      // If the option isn't set by either\n      // the current variant or a neighbor\n      // default to general accessibility\n      if (!setByCurrentVariant && !setByNeighbor) {\n        available = accessible;\n      }\n\n      updatedOptionsMap[i][option] = {\n        setByCurrentVariant,\n        setByNeighbor,\n        accessible,\n        available,\n      };\n    }\n  }\n\n  return updatedOptionsMap;\n}\n\nfunction getOptionsAccessibility(product, selectedOptions) {\n  let optionsMap = product.options.map(() => ({}));\n\n  for (let i = 0; i < product.options.length; i++) {\n    for (let j = 0; j < product.variants.length; j++) {\n      const variant = product.variants[j];\n      const option = variant.options[i];\n\n      optionsMap[i][option] = {\n        setByCurrentVariant: false,\n        setByNeighbor: false,\n        accessible: false,\n        available: false,\n      };\n    }\n  }\n\n  const option1Values = optionsMap.length >= 1 ? Object.keys(optionsMap[0]) : [];\n  const option2Values = optionsMap.length >= 2 ? Object.keys(optionsMap[1]) : [];\n  const option3Values = optionsMap.length >= 3 ? Object.keys(optionsMap[2]) : [];\n\n  option1Values.forEach((option1Value => {\n    option2Values.forEach((option2Value => {\n      option3Values.forEach((option3Value => {\n        optionsMap = _setOptionsMap(\n          product,\n          selectedOptions,\n          optionsMap,\n          option1Value,\n          option2Value,\n          option3Value,\n        );\n      }));\n\n      if (!option3Values.length) {\n        optionsMap = _setOptionsMap(\n          product,\n          selectedOptions,\n          optionsMap,\n          option1Value,\n          option2Value,\n        );\n      }\n    }));\n\n    if (!option2Values.length) {\n      optionsMap = _setOptionsMap(\n        product,\n        selectedOptions,\n        optionsMap,\n        option1Value,\n      );\n    }\n  }));\n\n  return optionsMap;\n}\n\nexport {\n  getOptions,\n  getOptionsAccessibility,\n  getVariantFromSelectedOptions,\n};\n","import {\n  getVariantFromSelectedOptions,\n  getOptionsAccessibility,\n} from './scripts/options';\n\nexport default class OptionsSelector extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.el.style.display = '';\n    this._onChangeFn = this._onOptionChange.bind(this);\n\n    this._optionsEls = this.el.querySelectorAll('[data-variant-option]');\n  }\n\n  onMount() {\n    if (!this.context.product) return;\n\n    const selectedOptions = this.getSelectedOptions();\n\n    this._setOptionVisibility(selectedOptions);\n    this._updateOptionAvailability(selectedOptions);\n\n    this.events.register(this.el, 'change', this._onChangeFn);\n  }\n\n  getSelectedOptions() {\n    const options = [...this.queryAll('option-dropdown'), ...this.queryAll('option-selectable-boxes')];\n    const selectedOptions = options.reduce((acc, option) => {\n      const { selectedValue } = option;\n\n      if (selectedValue) {\n        acc[option.position - 1] = selectedValue;\n      }\n\n      return acc;\n    }, options.map(() => ''));\n\n    return selectedOptions;\n  }\n\n  setSelectedOptions(selectedOptions) {\n    const options = [...this.queryAll('option-dropdown'), ...this.queryAll('option-selectable-boxes')];\n\n    options.forEach(option => {\n      if (option.position - 1 < selectedOptions.length) {\n        option.selectedValue = selectedOptions[option.position - 1];\n      }\n    });\n\n    this._onOptionChange();\n  }\n\n  _setOptionVisibility(selectedOptions) {\n    const optionsAccessibility = getOptionsAccessibility(this.context.product, selectedOptions);\n    const options = [...this.queryAll('option-dropdown'), ...this.queryAll('option-selectable-boxes')];\n\n    options.forEach(option => {\n      const optionValueAccessibility = optionsAccessibility[option.position - 1];\n\n      const inaccessibleValues = Object\n        .keys(optionValueAccessibility)\n        .filter(value => !optionValueAccessibility[value].accessible);\n\n      if (this.data.remove_unavailable) {\n        option.removeValues(inaccessibleValues);\n      } else if (this.data.disable_unavailable) {\n        option.disableValues(inaccessibleValues);\n      }\n    });\n  }\n\n  _updateOptionAvailability(selectedOptions) {\n    const optionsAccessibility = getOptionsAccessibility(this.context.product, selectedOptions);\n    const options = [...this.queryAll('option-dropdown'), ...this.queryAll('option-selectable-boxes')];\n\n    options.forEach(option => {\n      const optionValueAvailability = optionsAccessibility[option.position - 1];\n\n      const unavailableValues = Object\n        .keys(optionValueAvailability)\n        .filter(value => !optionValueAvailability[value].available);\n\n      option.setUnavailableValues(unavailableValues);\n    });\n  }\n\n  _updateVariantSelection(selectedOptions) {\n    if (!this.context.product) return;\n\n    const variant = getVariantFromSelectedOptions(\n      this.context.product.variants,\n      selectedOptions,\n    );\n\n    let state = 'selected';\n\n    if (!variant) {\n      const isUnselected = selectedOptions.some(option => option === '');\n\n      state = isUnselected ? 'unselected' : 'unavailable';\n    }\n\n    const event = new CustomEvent('product:options-change', {\n      bubbles: true,\n      cancelable: false,\n      detail: {\n        variant,\n        options: selectedOptions,\n        state,\n      },\n    });\n\n    this.el.dispatchEvent(event);\n  }\n\n  _onOptionChange() {\n    const selectedOptions = this.getSelectedOptions();\n\n    this._updateOptionAvailability(selectedOptions);\n    this._updateVariantSelection(selectedOptions);\n  }\n}\n","export default class VariantSelector extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this._product = this.context.product;\n    this._selectedVariant = this._product\n      ? this._product.variants.find(v => v.id.toString() === this.context.selected_variant)\n      : null;\n\n    const mainInputEl = this.el.querySelector('input[data-variants]');\n    this._mainEl = mainInputEl || this.el.querySelector('select[data-variants]');\n    this.events.register(this._mainEl, 'change', event => this._onMainElChange(event));\n  }\n\n  get product() {\n    return this._product;\n  }\n\n  get selectedVariant() {\n    return this._selectedVariant;\n  }\n\n  onMount() {\n    this.events.register(this.parent.el, 'product:options-change', event => this._onVariantChange(event));\n  }\n\n  _onVariantChange(event) {\n    const { variant, state } = event.detail;\n    const cancelled = !this._dispatchEvent(variant, state);\n\n    if (!cancelled) {\n      this._selectedVariant = variant;\n      this._mainEl.value = variant.id;\n    }\n\n    return cancelled;\n  }\n\n  _onMainElChange(event) {\n    const { value: variantId } = event.currentTarget;\n    const variant = this._product.variants\n      .find(v => v.id.toString() === variantId.toString());\n    const cancelled = this._onVariantChange({ detail: { variant, state: variant ? 'unavailable' : 'unselected' } });\n\n    if (cancelled) {\n      event.preventDefault();\n    }\n  }\n\n  _dispatchEvent(variant, state) {\n    const event = new CustomEvent('product:variant-change', {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        product: this._product,\n        variant,\n        state,\n      },\n    });\n\n    return this.el.dispatchEvent(event);\n  }\n}\n","export default class Button extends Core.Component {\n  get disabled() {\n    return this.el.disabled;\n  }\n\n  set disabled(disabled) {\n    this.el.disabled = disabled;\n  }\n\n  get text() {\n    return this.el.innerText;\n  }\n\n  set text(text) {\n    this.el.innerText = text;\n  }\n\n  setAttribute(attribute, value) {\n    this.el.setAttribute(attribute, value);\n  }\n\n  getAttribute(attribute) {\n    this.el.getAttribute(attribute);\n  }\n\n  hasAttribute(attribute) {\n    this.el.hasAttribute(attribute);\n  }\n\n  removeAttribute(attribute) {\n    this.el.removeAttribute(attribute);\n  }\n}\n","/**\n * @class ProductCardSwatches\n * @classdesc This class handles all of the actions of the swatch buttons on the product cards.\n *\n * @extends Core.Component\n */\nexport default class ProductCardSwatches extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.swatchButtons = this.el.querySelectorAll('[data-swatch-button]');\n    this.showMoreButton = this.el.querySelector('[data-swatches-show-more]');\n\n    this.swatchButtons.forEach(swatchButton => {\n      this.events.register(swatchButton, 'click', () => {\n        // Fire off event to indicate which swatch was clicked\n        let detail = { color: swatchButton.dataset.color }\n        if (swatchButton.dataset.variantIndex) {\n          detail.variantIndex = parseInt(swatchButton.dataset.variantIndex, 10);\n        }\n\n        const clickEvent = new CustomEvent('swatch:update', { detail });\n        this.el.dispatchEvent(clickEvent);\n\n        this.swatchButtons.forEach(button => {\n          button.dataset.selected = '';\n        });\n\n        swatchButton.dataset.selected = 'selected';\n      });\n    });\n\n    this.hiddenButtonsCheck();\n  }\n\n  hiddenButtonsCheck() {\n    // We need to hide the swatches that are overflowing the container and handle showing them\n    // after clicking the show more button.\n    const rowTop = this.swatchButtons[0].getBoundingClientRect().top;\n\n    this.hiddenButtons = [...this.swatchButtons].reduce((hiddenButtons, nextButton) => {\n      if (hiddenButtons.length > 0 || nextButton.getBoundingClientRect().top > rowTop) {\n        return hiddenButtons.concat(nextButton);\n      }\n\n      return hiddenButtons;\n    }, []);\n\n    if (this.hiddenButtons.length > 0) {\n      // Hide all of the buttons that are overflowing so keyboard can't access them\n      this.hiddenButtons.forEach(button => button.classList.add('hidden'));\n\n      this.showMoreButton.innerHTML = this.showMoreButton.innerHTML.replace('count', this.hiddenButtons.length);\n      this.el.classList.add('product-card-swatches--collapsed');\n      this.showMoreButton.classList.remove('hidden');\n\n      this.events.register(this.showMoreButton, 'click', () => {\n        this.el.classList.remove('product-card-swatches--collapsed');\n        this.el.classList.add('product-card-swatches--expanded');\n\n        this.hiddenButtons.forEach(button => button.classList.remove('hidden'));\n      });\n    }\n\n  }\n}\n","/**\n * @class CrossSellCard\n * @classdesc The class for a product cross sell card.\n *\n * @extends Core.Component\n */\nexport default class CrossSellCard extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.state = {\n      product: this.data.product,\n      selectedVariant: this.data.selectedVariant,\n    };\n\n    this._imgChangeFn = this._updateSelectedImage.bind(this);\n  }\n\n  onMount() {\n    this.productImage = this.el.querySelector('[data-product-image]');\n    this.productVariantColorLabel = this.el.querySelectorAll('[data-variant-color-label]');\n    this.swatches = this.query('product-card-swatches');\n    this.selectOptionsLink = this.el.querySelector('[data-cross-sell-card-atc]');\n    this.backLink = this.el.querySelector('[data-cross-sell-card-back]');\n    this.productDetails = this.el.querySelector('[data-cross-sell-card-details]');\n    this.productForm = this.el.querySelector('[data-cross-sell-card-form]');\n    this.optionsSelector = this.query('options-selector');\n\n    this._bindEvents();\n  }\n\n  onDismount() {\n    this.events.unregisterAll();\n  }\n\n  /**\n   * Binds card events (click event to toggle form etc.)\n   */\n  _bindEvents() {\n    if (this.swatches) {\n      this.events.register(this.swatches.el, 'swatch:update', e => {\n        this._imgChangeFn(e.detail);\n      });\n\n      this.events.register(this.el, 'cross-sell:selected', event => {\n        // In the case where the cards are animating from display: none (ie. the \n        // cart drawer), the 'overflowing' swatches won't register on load as hidden\n        // because the height of the element is 0.\n        // We handle this by emitting an event on the card in the parent element which\n        // triggers an extra check for hidden swatches\n        setTimeout(() => { this.swatches.hiddenButtonsCheck(); }, 50);\n      });\n    }\n\n    this.events.register(this.selectOptionsLink, 'click', e => {\n      e.preventDefault();\n      this._toggleProductForm();\n    });\n\n    this.events.register(this.backLink, 'click', e => {\n      e.preventDefault();\n      this._toggleProductForm();\n    });\n\n    this.events.register(this.el, 'product:variant-change', event => this._onVariantChange(event));\n  }\n\n  _onVariantChange(event) {\n    const { product, variant } = event.detail;\n    this.setState({ selectedVariant: variant });\n\n    const buyButtons = this.query('buy-buttons');\n\n    if (variant) {\n      if (variant.available) {\n        buyButtons.setButtonState('available');\n      } else {\n        buyButtons.setButtonState('sold out');\n      }\n    } else {\n      buyButtons.setButtonState('unavailable');\n    }\n  }\n\n  /**\n   * Toggle the product form or product details into view\n   */\n  _toggleProductForm() {\n    this.productDetails.classList.toggle('hidden');\n    this.productForm.classList.toggle('hidden');\n\n    if (this.optionsSelector) {\n      this.optionsSelector.setSelectedOptions(this.state.selectedVariant.options);\n    }\n  }\n\n  /**\n   * When a swatch is selected, change the backround image to that variant image\n   * @param color {string} - the name of the variant color to identify the image\n   */\n  _updateSelectedImage({ color, variantIndex }) {\n    const currentImage = this.el.querySelector(`[data-variant-image=\"${color}\"]`);\n    const variantImagesContainer = this.el.querySelector('[data-variant-images]');\n    const variantImages = variantImagesContainer.querySelectorAll('[data-variant-image]');\n    const initialImage = this.el.querySelector('[data-cross-sell-card-img]');\n\n    const variant = this.state.product.variants[variantIndex];\n\n    if (variant && variant.available) {\n      this.setState({ selectedVariant: variant });\n\n      this.productVariantColorLabel.forEach(el => {\n        const colorString = color.charAt(0).toUpperCase() + color.slice(1);\n        el.innerHTML = colorString;\n      });\n\n      if (currentImage) {\n        variantImagesContainer.classList.add('hidden');\n\n        variantImages.forEach(image => {\n          image.classList.add('hidden');\n        });\n\n        variantImagesContainer.classList.remove('hidden');\n        currentImage.classList.remove('hidden');\n        initialImage.classList.add('hidden');\n      }\n    }\n  }\n}\n","/**\n * @class ProductCrossSell\n * @classdesc This component fetches content for the cross-sell feature\n *\n * @extends Core.Component\n */\n\nexport default class ProductCrossSell extends Core.Component {\n  onMount() {\n    this.nextButton = null;\n    this.prevButton = null;\n  }\n\n  onDismount() {\n    this.unload();\n  }\n\n  /**\n   * Fetches section content via the Shopify recommendations endpoint\n   * @param {string} sectionId - the ID of the section to fetch\n   */\n  fetchRecommendations(sectionId) {\n    const url = `${this.data.recommendations_route}?section_id=${sectionId}&product_id=${this.data.product_id}&limit=4`;\n    return fetch(url)\n      .then(response => response.text())\n      .then(text => {\n        const html = document.createElement('div');\n        html.innerHTML = text;\n\n        this.el.querySelector('[data-cross-sell-content]').innerHTML = html.querySelector('[data-cross-sell-content]').innerHTML;\n        this._initAnimations();\n        this._bindEvents();\n      });\n  }\n\n  /**\n   * Initialize the animations for switching cards\n   */\n  _initAnimations() {\n    this.cardWrappers = this.el.querySelectorAll('[data-cross-sell-card-wrapper]');\n    this.animations = {};\n    this.animatingIn = false;\n    this.animatingOut = false;\n\n    this.cardWrappers.forEach(el => {\n      const { cardIndex } = el.dataset;\n      let state = 'hidden';\n\n      if (parseInt(cardIndex) === 1) {\n        state = 'visible';\n      }\n\n      this.animations[cardIndex] = Core.Animations.transition({ el, state });\n    });\n  }\n\n  /**\n   * Initialize animations\n   * Bind click events to previous and next buttons\n   */\n  _bindEvents() {\n    this.nextButton = this.el.querySelector('[data-cross-sell-next]');\n    this.prevButton = this.el.querySelector('[data-cross-sell-previous]');\n\n    if (this.nextButton && this.prevButton) {\n      this.events.register(this.nextButton, 'click', e => this._nextProduct(e.currentTarget));\n      this.events.register(this.prevButton, 'click', e => this._previousProduct(e.currentTarget));\n    }\n  }\n\n  /**\n   * Callback for 'next' button click\n   * @param target {element} - the click event's 'currentTarget'\n   */\n  _nextProduct(target) {\n    if (this.animatingIn || this.animatingOut || target.hasAttribute('disabled')) return;\n\n    const selectedEvent = new CustomEvent('cross-sell:selected');\n    const selectedCard = this.el.querySelector('[data-cross-sell-selected]');\n    const selectedIndex = parseInt(selectedCard.dataset.cardIndex);\n    const nextIndex = selectedIndex + 1;\n    const nextCard = this.el.querySelector(`[data-card-index=\"${nextIndex}\"]`);\n    const navLabel = this.el.querySelector('[data-index-current]');\n\n\n    if (this.animations[selectedIndex] && this.animations[nextIndex]) {\n      this.animatingIn = true;\n      this.animatingOut = true;\n\n      if (nextIndex <= this.cardWrappers.length) {\n        this.animations[selectedIndex].animateTo('hidden')\n          .then(() => {\n            this.animatingOut = false;\n          });\n        this.animations[nextIndex].animateTo('visible')\n          .then(() => {\n            this.animatingIn = false;\n          });\n\n        selectedCard.removeAttribute('data-cross-sell-selected');\n        nextCard.setAttribute('data-cross-sell-selected', '');\n\n        const cardComponent = nextCard.querySelector('[data-component=\"cross-sell-card\"]');\n\n        cardComponent.dispatchEvent(selectedEvent);\n\n        navLabel.innerText = nextIndex;\n\n        if (nextIndex === this.cardWrappers.length) {\n          this.nextButton.setAttribute('disabled', '');\n        }\n\n        if (selectedIndex === 1) {\n          this.prevButton.removeAttribute('disabled');\n        }\n      }\n    }\n  }\n\n  /**\n   * Callback for 'previous' button click\n   * @param target {element} - the click event's 'currentTarget'\n   */\n  _previousProduct(target) {\n    if (this.animatingIn || this.animatingOut || target.hasAttribute('disabled')) return;\n\n    const selectedCard = this.el.querySelector('[data-cross-sell-selected]');\n    const selectedIndex = parseInt(selectedCard.dataset.cardIndex);\n    const nextIndex = selectedIndex - 1;\n    const nextCard = this.el.querySelector(`[data-card-index=\"${nextIndex}\"]`);\n    const navLabel = this.el.querySelector('[data-index-current]');\n\n    if (this.animations[selectedIndex] && this.animations[nextIndex]) {\n      this.animatingIn = true;\n      this.animatingOut = true;\n\n      if (nextIndex >= 1) {\n        this.animations[selectedIndex].animateTo('hidden')\n          .then(() => {\n            this.animatingOut = false;\n          });\n\n        this.animations[nextIndex].animateTo('visible')\n          .then(() => {\n            this.animatingIn = false;\n          });\n\n        selectedCard.removeAttribute('data-cross-sell-selected');\n        nextCard.setAttribute('data-cross-sell-selected', '');\n\n        navLabel.innerText = nextIndex;\n\n        if (nextIndex === 1) {\n          this.prevButton.setAttribute('disabled', '');\n        }\n\n        if (selectedIndex === this.cardWrappers.length) {\n          this.nextButton.removeAttribute('disabled');\n        }\n      }\n    }\n  }\n\n  unload() {\n    this.events.unregisterAll();\n    this.animations = {};\n  }\n}\n","export default class InputTextarea extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.inputEl = el.querySelector('[data-input]');\n  }\n\n  get value() {\n    return this.inputEl.value;\n  }\n\n  set value(value) {\n    this.inputEl.value = value;\n  }\n}\n","/**\n * @class QuantitySelector\n * @classdesc Quantity selectors are used to update the quantity of a product. Currently it can be used for the cart and product page.\n *\n * @extends Core.Component\n */\nexport default class QuantitySelector extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.buttonPlus = el.querySelector('[data-quantity-plus]');\n    this.buttonMinus = el.querySelector('[data-quantity-minus]');\n    this.quantityInput = el.querySelector('[data-quantity-input]');\n\n    this.events.register(this.buttonPlus, 'click', e => this._inputChange(e));\n    this.events.register(this.buttonMinus, 'click', e => this._inputChange(e));\n    this.events.register(this.quantityInput, 'change', e => this._inputChange(e));\n\n    this.inputTimer = null;\n  }\n\n  /**\n   * Triggered when one of the quantity selector buttons or input is updated.\n   * Dispatches an event called `quantity:update` which passes along `quantity` and `actionName` from the quantity selector.\n   *\n   * @param {Event} e - The event sent by the form being updated.\n   * @private\n   */\n  _inputChange(e) {\n    e.preventDefault();\n    clearInterval(this.inputTimer);\n\n    const currentTarget = e.target;\n    const previousValue = this.quantityInput.value;\n\n    if (currentTarget.name === 'plus') {\n      this.quantityInput.stepUp();\n    } else if (currentTarget.name === 'minus' && this.quantityInput.value >= 1) {\n      this.quantityInput.stepDown();\n    }\n\n    if (this.quantityInput.min && this.quantityInput.value < this.quantityInput.min) {\n      this.quantityInput.value = this.quantityInput.min;\n    } else if (this.quantityInput.max && this.quantityInput.value > this.quantityInput.max) {\n      this.quantityInput.value = this.quantityInput.max;\n    }\n\n    this.inputTimer = setTimeout(() => {\n      // Fire off event to submit the new params to the parent section\n      if (previousValue !== this.quantityInput.value || currentTarget.type === 'number') {\n        const updateEvent = new CustomEvent('quantity:update', { detail: { quantity: parseInt(this.quantityInput.value, 10), actionName: currentTarget.name } });\n        this.el.dispatchEvent(updateEvent);\n      }\n    }, 500);\n  }\n\n  /**\n   * Sets focus on targeted element\n   *\n   * @param {Object} name - The element to focus on.\n   */\n  focus(name = null) {\n    if (name) {\n      this.el.querySelector(`[name=\"${name}\"]`).focus();\n    } else {\n      this.quantityInput.focus();\n    }\n  }\n\n  /**\n   * Returns value of quantity input\n   *\n   */\n  getValue() {\n    return this.quantityInput.value;\n  }\n}\n","/**\n * The default template render function. Turns a template string into an image\n * URL.\n *\n * @param {String} template\n * @param {Size} size\n * @returns {String}\n */\nfunction defaultTemplateRender(template, size) {\n  return template.replace('{size}', `${size.width}x${size.height}`)\n}\n\n/**\n * @type Settings\n */\nconst defaults = {\n  scale: 1,\n  template: false,\n  templateRender: defaultTemplateRender,\n  max: { width: Infinity, height: Infinity},\n  round: 32,\n  placeholder: false,\n  crop: null,\n};\n\n/**\n * Get a data attribute value from an element, with a default fallback and\n * sanitization step.\n *\n * @param {Element} el\n *\n * @param {String} name\n *        The data attribute name.\n *\n * @param {Object} options\n *        An object holding fallback values if the data attribute does not\n *        exist. If this object doesn't have the property, we further fallback\n *        to our defaults.\n *\n * @param {Function} [sanitize]\n *        A function to sanitize the data attribute value with.\n *\n * @returns {String|*}\n */\nfunction getData(el, name, options, sanitize) {\n  const attr = `data-rimg-${name}`;\n  if (!el.hasAttribute(attr)) return options[name] || defaults[name];\n\n  const value = el.getAttribute(attr);\n\n  return sanitize\n    ? sanitize(value)\n    : value;\n}\n\n/**\n * Sanitize data attributes that represent a size (in the form of `10x10`).\n *\n * @param {String} value\n * @returns {Object} An object with `width` and `height` properties.\n */\nfunction parseSize(value) {\n  value = value.split('x');\n  return { width: parseInt(value[0], 10), height: parseInt(value[1], 10) };\n}\n\n/**\n * Sanitize crop values to ensure they are valid, or null\n *\n * @param {String} value\n * @returns {Object} Shopify crop parameter ('top', 'center', 'bottom', 'left', 'right') or null, if an unsupported value is found\n */\nfunction processCropValue(value) {\n  switch (value) {\n    case 'top':\n    case 'center':\n    case 'bottom':\n    case 'left':\n    case 'right':\n      return value;\n    default:\n      return null;\n  }\n}\n\n/**\n * Loads information about an element.\n *\n * Options can be set on the element itself using data attributes, or through\n * the `options` parameter. Data attributes take priority.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n * @returns {Item}\n */\nexport default function parseItem(el, options = {}) {\n  const isImage = el.hasAttribute('data-rimg-template');\n\n  /**\n   * @typedef {Settings} Item\n   */\n  return {\n    el,\n\n    // Type of element\n    isImage,\n    isBackgroundImage: isImage && el.tagName !== 'IMG',\n\n    // Image scale\n    scale: parseInt(getData(el, 'scale', options)),\n\n    // Device density\n    density: window.devicePixelRatio || 1,\n\n    // Image template URL\n    template: getData(el, 'template', options),\n    templateRender: options.templateRender || defaults.templateRender,\n\n    // Maximum image dimensions\n    max: getData(el, 'max', options, parseSize),\n\n    // Round image dimensions to the nearest multiple\n    round: getData(el, 'round', options),\n\n    // Placeholder image dimensions\n    placeholder: getData(el, 'placeholder', options, parseSize),\n\n    // Crop value; null if image is uncropped, otherwise equal to the Shopify crop parameter ('center', 'top', etc.)\n    crop: getData(el, 'crop', options, processCropValue),\n  };\n}\n","/**\n * Round to the nearest multiple.\n *\n * This is so we don't tax the image server too much.\n *\n * @param {Number} size The size, in pixels.\n * @param {Number} [multiple] The multiple to round to the nearest.\n * @param {Number} [maxLimit] Maximum allowed value - value to return if rounded multiple is above this limit\n * @returns {Number}\n */\nexport default function roundSize(size, multiple = 32, maxLimit = Infinity) {\n  return size === 0 \n    ? multiple \n    : Math.min(Math.ceil(size / multiple) * multiple, maxLimit);\n}\n","/**\n * Get the size of an element.\n *\n * If it is too small, it's parent element is checked, and so on. This helps\n * avoid the situation where an element doesn't have a size yet or is positioned\n * out of the layout.\n *\n * @param {HTMLElement} el\n * @return {Object} size\n * @return {Number} size.width The width, in pixels.\n * @return {Number} size.height The height, in pixels.\n */\nexport default function getElementSize(el) {\n  const size = { width: 0, height: 0 };\n\n  while (el) {\n    size.width = el.offsetWidth;\n    size.height = el.offsetHeight;\n    if (size.width > 20 && size.height > 20) break;\n    el = el.parentNode;\n  }\n\n  return size;\n};\n","/**\n * Return the maximum supported density of the image, given the container.\n *\n * @param {Item} item\n * @param {Size} size\n */\n\nexport default function supportedDensity(item, size) {\n  return Math.min(\n    Math.min(Math.max(item.max.width / size.width, 1), item.density),\n    Math.min(Math.max(item.max.height / size.height, 1), item.density),\n  ).toFixed(2);\n}\n","/**\n * Trigger a custom event.\n *\n * Note: this approach is deprecated, but still required to support older\n * browsers such as IE 10.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\n *\n * @param {HTMLElement} el\n *        The element to trigger the event on.\n *\n * @param {String} name\n *        The event name.\n *\n * @returns {Boolean}\n *          True if the event was canceled.\n */\n export function trigger(el, name) {\n  const event = document.createEvent('Event');\n  event.initEvent(name, true, true);\n  return !el.dispatchEvent(event);\n}\n","import roundSize from './roundSize';\nimport getElementSize from './getElementSize';\nimport supportedDensity from './supportedDensity';\nimport { trigger } from './events';\n\n/**\n * Set the image URL on the element. Supports background images and `srcset`.\n *\n * @param {Item} item\n * @param {Size} size\n * @param {Boolean} isPlaceholder\n */\nfunction setImage(item, size, isPlaceholder, onLoad) {\n  const render = item.templateRender;\n  const density = isPlaceholder ? 1 : supportedDensity(item, size);\n  const round = isPlaceholder ? 1 : item.round;\n\n  // Calculate the final display size, taking into account the image's\n  // maximum dimensions.\n  const targetWidth = size.width * density;\n  const targetHeight = size.height * density;\n\n  let displaySize;\n\n  if (item.crop) {\n    displaySize = {\n      width: roundSize(targetWidth, round, item.max.width),\n      height: roundSize(targetHeight, round, item.max.height),\n    };\n  } else {\n    // Shopify serves images clamped by the requested dimensions (fitted to the smallest dimension).\n    // To get the desired and expected pixel density we need to request cover dimensions (fitted to largest dimension).\n    // This isn't a problem with cropped images which are served at the exact dimension requested.\n    const containerAspectRatio = size.width / size.height;\n    const imageAspectRatio = item.max.width / item.max.height;\n\n    if (containerAspectRatio > imageAspectRatio) {\n      // fit width\n      displaySize = {\n        width: roundSize(targetWidth, round, item.max.width),\n        height: roundSize(targetWidth / imageAspectRatio, round, item.max.height),\n      };\n    } else {\n      // fit height\n      displaySize = {\n        width: roundSize(targetHeight * imageAspectRatio, round, item.max.width),\n        height: roundSize(targetHeight, round, item.max.height),\n      }\n    }\n  }\n\n  const url = render(item.template, displaySize);\n\n  // On load callback\n  const image = new Image();\n  image.onload = onLoad;\n  image.src = url;\n\n  // Set image\n  if (item.isBackgroundImage) {\n    item.el.style.backgroundImage = `url('${url}')`;\n  } else {\n    item.el.setAttribute('srcset', `${url} ${density}x`);\n  }\n}\n\n/**\n * Load the image, set loaded status, and trigger the load event.\n *\n * @fires rimg:load\n * @fires rimg:error\n * @param {Item} item\n * @param {Size} size\n */\nfunction loadFullImage(item, size) {\n  const el = item.el;\n\n  setImage(item, size, false, (event) => {\n    if (event.type === 'load') {\n      el.setAttribute('data-rimg', 'loaded');\n    } else {\n      el.setAttribute('data-rimg', 'error');\n      trigger(el, 'rimg:error');\n    }\n\n    trigger(el, 'rimg:load');\n  });\n}\n\n/**\n * Load in a responsive image.\n *\n * Sets the image's `srcset` attribute to the final image URLs, calculated based\n * on the actual size the image is being shown at.\n *\n * @fires rimg:loading\n *        The image URLs have been set and we are waiting for them to load.\n *\n * @fires rimg:loaded\n *        The final image has loaded.\n *\n * @fires rimg:error\n *        The final image failed loading.\n *\n * @param {Item} item\n */\nexport default function loadImage(item) {\n  const el = item.el;\n\n  // Already loaded?\n  const status = el.getAttribute('data-rimg');\n  if (status === 'loading' || status === 'loaded') return;\n\n  // Is the SVG loaded?\n  // In Firefox, el.complete always returns true so we also check el.naturalWidth,\n  // which equals 0 until the image loads\n  if (el.naturalWidth == 0\n    && el.complete\n    && !item.isBackgroundImage) {\n    // Wait for the load event, then call load image\n    el.addEventListener('load', function cb() {\n      el.removeEventListener('load', cb);\n      loadImage(item);\n    });\n\n    return;\n  }\n\n  // Trigger loading event, and stop if cancelled\n  if (trigger(el, 'rimg:loading')) return;\n\n  // Mark as loading\n  el.setAttribute('data-rimg', 'loading');\n\n  // Get element size. This is used as the ideal display size.\n  const size = getElementSize(item.el);\n\n  size.width *= item.scale;\n  size.height *= item.scale;\n\n  if (item.placeholder) {\n    // Load a placeholder image first, followed by the full image. Force the\n    // element to keep its dimensions while it loads. If the image is smaller\n    // than the element size, use the image's size. Density is taken into account\n    // for HiDPI devices to avoid blurry images.\n    if (!item.isBackgroundImage) {\n      el.setAttribute('width', Math.min(Math.floor(item.max.width / item.density), size.width));\n      el.setAttribute('height', Math.min(Math.floor(item.max.height / item.density), size.height));\n    }\n\n    setImage(item, item.placeholder, true, () => loadFullImage(item, size));\n  } else {\n    loadFullImage(item, size);\n  }\n}\n","import parseItem from './parseItem';\nimport loadImage from './loadImage';\nimport { trigger } from './events';\n\n/**\n * Prepare an element to be displayed on the screen.\n *\n * Images have special logic applied to them to swap out the different sources.\n *\n * @fires rimg:enter\n *        The element is entering the viewport.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n */\nexport default function load(el, options) {\n  if (!el) return;\n  trigger(el, 'rimg:enter');\n\n  const item = parseItem(el, options);\n\n  if (item.isImage) {\n    if (!item.isBackgroundImage) {\n      el.setAttribute('data-rimg-template-svg', el.getAttribute('srcset'));\n    }\n\n    loadImage(item);\n  }\n}\n","import parseItem from './parseItem';\nimport loadImage from './loadImage';\nimport { trigger } from './events';\n\n/**\n * Reset an element's state so that its image can be recalculated.\n *\n * @fires rimg:update\n *        The element is being updated.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n */\nexport default function update(el, options) {\n  if (!el) return;\n  trigger(el, 'rimg:update');\n\n  const item = parseItem(el, options);\n\n  if (item.isImage) {\n    if (!item.isBackgroundImage) {\n      el.setAttribute('data-rimg', 'lazy');\n      el.setAttribute('srcset', el.getAttribute('data-rimg-template-svg'));\n    }\n\n    loadImage(item);\n  }\n}\n","/**\n * Returns true if the element is within the viewport.\n * @param {HTMLElement} el\n * @returns {Boolean}\n */\nexport default function inViewport(el) {\n  if (!el.offsetWidth || !el.offsetHeight || !el.getClientRects().length) {\n    return false;\n  }\n\n  const root = document.documentElement;\n  const width = Math.min(root.clientWidth, window.innerWidth);\n  const height = Math.min(root.clientHeight, window.innerHeight);\n  const rect = el.getBoundingClientRect();\n\n  return (\n    rect.bottom >= 0 &&\n    rect.right >= 0 &&\n    rect.top <= height &&\n    rect.left <= width\n  );\n}\n","import load from './load';\nimport update from './update';\nimport inViewport from './inViewport';\n\n/**\n * @typedef {Object} Size\n * @property {Number} width\n * @property {Number} height\n */\n\n/**\n * A function to turn a template string into a URL.\n *\n * @callback TemplateRenderer\n * @param {String} template\n * @param {Size} size\n * @returns {String}\n */\n\n/**\n * @typedef {Object} Settings\n *\n * @property {String} [template]\n *           A template string used to generate URLs for an image. This allows us to\n *           dynamically load images with sizes to match the container's size.\n *\n * @property {TemplateRenderer} [templateRender]\n *           A function to turn a template string into a URL.\n *\n * @property {Size} [max]\n *           The maximum available size for the image. This ensures we don't\n *           try to load an image larger than is possible.\n * \n * @property {Number} [scale]\n *           A number to scale the final image dimensions by. \n *           Only applies to lazy-loaded images. Defaults to 1.\n *\n * @property {Number} [round]\n *           Round image dimensions to the nearest multiple. This is intended to\n *           tax the image server less by lowering the number of possible image\n *           sizes requested.\n *\n * @property {Size} [placeholder]\n *           The size of the lo-fi image to load before the full image.\n * \n * @property {String} [crop]\n *           Crop value; null if image is uncropped, otherwise equal \n *           to the Shopify crop parameter ('center', 'top', etc.).\n */\n\n/**\n * Initialize the responsive image handler.\n *\n * @param {String|HTMLElement|NodeList} selector\n *        The CSS selector, element, or elements to track for lazy-loading.\n *\n * @param {Settings} options\n *\n * @returns {PublicApi}\n */\nexport default function rimg(selector = '[data-rimg=\"lazy\"]', options = {}) {\n  // Intersections\n  const io = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        io.unobserve(entry.target);\n        load(entry.target, options);\n      }\n    });\n  }, {\n    // Watch the viewport, with 20% vertical margins\n    rootMargin: '20% 0px',\n  });\n\n  /**\n   * @typedef {Object} PublicApi\n   */\n  const api = {\n    /**\n     * Track a new selector, element, or nodelist for lazy-loading.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    track(selector = '[data-rimg=\"lazy\"]') {\n      const els = querySelector(selector);\n\n      for (let i = 0; i < els.length; i++) {\n        // If an element is already in the viewport, load it right away. This\n        // fixes a race-condition with dynamically added elements.\n        if (inViewport(els[i])) {\n          load(els[i], options);\n        } else {\n          io.observe(els[i]);\n        }\n      }\n    },\n\n    /**\n     * Update element(s) that have already been loaded to force their images\n     * to be recalculated.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    update(selector = '[data-rimg=\"loaded\"]') {\n      const els = querySelector(selector);\n      for (let i = 0; i < els.length; i++) update(els[i], options);\n    },\n\n    /**\n     * Stop tracking element(s) for lazy-loading.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    untrack(selector = '[data-rimg]') {\n      const els = querySelector(selector);\n      for (let i = 0; i < els.length; i++) io.unobserve(els[i]);\n    },\n\n    /**\n     * Manually load images.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    load(selector = '[data-rimg]') {\n      const els = querySelector(selector);\n      for (let i = 0; i < els.length; i++) {\n        load(els[i], options);\n      }\n    },\n\n    /**\n     * Unload all event handlers and observers.\n     * @type Function\n     */\n    unload() {\n      io.disconnect();\n    },\n  };\n\n  // Add initial elements\n  api.track(selector);\n\n  return api;\n}\n\n/**\n * Finds a group of elements on the page.\n *\n * @param {String|HTMLElement|NodeList} selector\n * @returns {Object} An array-like object.\n */\nfunction querySelector(selector) {\n  if (typeof selector === 'string') {\n    return document.querySelectorAll(selector);\n  }\n\n  if (selector instanceof HTMLElement) {\n    return [selector];\n  }\n\n  if (selector instanceof NodeList) {\n    return selector;\n  }\n\n  return [];\n}\n","import rimg from './rimg';\nimport './matches';\n\nconst state = {\n  init,\n  watch,\n  unwatch,\n  load,\n};\n\nexport default state;\n\n/**\n * Track an element, and its children.\n *\n * @param {HTMLElement} el\n */\nfunction watch(el) {\n  // Track element\n  if (typeof el.matches === 'function' && el.matches(state.selector)) {\n    state.instance.track(el);\n  }\n\n  // Track element's children\n  state.instance.track(el.querySelectorAll(state.selector));\n}\n\n/**\n * Untrack an element, and its children\n *\n * @param {HTMLElement} el\n * @private\n */\nfunction unwatch(el) {\n  // Untrack element's children\n  state.instance.untrack(el.querySelectorAll(state.selector));\n\n  // Untrack element\n  if (typeof el.matches === 'function' && el.matches(state.selector)) {\n    state.instance.untrack(el);\n  }\n}\n\n/**\n * Manually load an image\n *\n * @param {HTMLElement} el\n */\nfunction load(el) {\n  // Load element\n  if (typeof el.matches === 'function' && el.matches(state.selector)) {\n    state.instance.load(el);\n  }\n\n  // Load element's children\n  state.instance.load(el.querySelectorAll(state.selector));\n}\n\n/**\n * Update an element, and its children.\n *\n * @param {HTMLElement} el\n */\nfunction _update() {\n  const currentWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n  // Return if we're not 2x smaller, or larger than the existing loading size\n  if (currentWidth / state.loadedWidth > 0.5 && currentWidth / state.loadedWidth < 2) {\n    return;\n  }\n\n  state.loadedWidth = currentWidth;\n  state.instance.update();\n}\n\nfunction init(selector = '[data-rimg=\"lazy\"]', options = {}) {\n  state.selector = selector;\n  state.instance = rimg(selector, options);\n  state.loadedWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n  const resizeObserver = new ResizeObserver(() => _update());\n\n  resizeObserver.observe(document.body);\n\n  // Listen for Shopify theme editor events\n  document.addEventListener('shopify:section:load', event => watch(event.target));\n\n  document.addEventListener('shopify:section:unload', event => unwatch(event.target));\n\n  // Listen for custom events to allow themes to hook into rimg\n  document.addEventListener('theme:rimg:watch', event => watch(event.target));\n\n  document.addEventListener('theme:rimg:unwatch', event => unwatch(event.target));\n\n  // Support custom events triggered through jQuery\n  // See: https://github.com/jquery/jquery/issues/3347\n  if (window.jQuery) {\n    jQuery(document).on({\n      'theme:rimg:watch': event => watch(event.target),\n      'theme:rimg:unwatch': event => unwatch(event.target),\n    });\n  }\n}\n","import rimg from './scripts/rimgShopify';\n\n// Global instance\nrimg.init();\n\nexport default class LazyImg extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    rimg.watch(this.el);\n  }\n\n  unload() {\n    rimg.unwatch(this.el);\n  }\n}\n","import debounce from 'just-debounce';\n\n/**\n * @class CartDrawer\n * @classdesc The cart drawer component is used to handle the cart drawer functionality.\n *\n * @extends Core.Component\n */\nexport default class CartDrawer extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    // Event listeners that have a different lifecycle to the component\n    this._cartDrawerEventListeners = [];\n\n    this.cartDrawer = this.el;\n    this.cartDrawerErrors = this.el.querySelector('[data-cart-drawer-form-errors]');\n    this.cartDrawerItemErrors = el.querySelectorAll('[data-cart-drawer-form-item-error]');\n\n    this.state = {\n      item_count: this.data.item_count,\n    };\n  }\n\n  onMount() {\n    const cartDrawerEl = this.el.querySelector('[data-cart-drawer]');\n\n    this._fetchCartDrawer = Promise.resolve(cartDrawerEl);\n    this.drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (!this.drawerModal) return;\n\n    this.drawerFlyout = this.drawerModal.createFlyout();\n    this.enabled = this.data.enabled;\n\n    this._populateFlyout(cartDrawerEl);\n  }\n\n  onDismount() {\n    super.onDismount();\n\n    if (this.drawerFlyout) {\n      this.drawerFlyout.then(drawerFlyout => drawerFlyout.destroy());\n    }\n  }\n\n  async prefetch() {\n    // We fetch the cart drawer template and\n    // reapply it to the drawer to get a unique instance of the cart drawer form\n    this._fetchCartDrawer = this._fetchCartDrawer\n      .then(() => fetch(`${window.PXUTheme.routes.cart_url}?section_id=cart-drawer-template`))\n      .then(response => response.text()) // Return text string of the HTML\n      .then(html => (\n        // Convert the HTML string into a document object\n        new DOMParser()\n          .parseFromString(html, 'text/html')\n          .querySelector('[data-cart-drawer]')\n      ));\n\n    return this._fetchCartDrawer;\n  }\n\n  /**\n   * Opens a cart drawer using a drawer modal\n   *\n   * @param {HTMLNode} trigger The trigger that was clicked to open the cart drawer\n   */\n  async open(trigger, refresh = true, itemsAdded = null) {\n    if (!this.enabled || !this.drawerFlyout) return;\n\n    const drawerFlyout = await this.drawerFlyout;\n\n    const fetchCartDrawer = (refresh\n      ? this.prefetch()\n      : this._fetchCartDrawer);\n\n    fetchCartDrawer\n      .then(cartDrawerEl => this._populateFlyout(cartDrawerEl, itemsAdded))\n      .then(() => {\n        this.drawerModal.closeAllFlyouts();\n        this.drawerModal.openFlyout(drawerFlyout, trigger);\n      });\n  }\n\n  async _populateFlyout(cartDrawerEl, itemsAdded = false) {\n    const drawerFlyout = await this.drawerFlyout;\n\n    const cartHeadingFragment = cartDrawerEl\n      .querySelector('[data-cart-drawer-heading-template]')\n      .content\n      .cloneNode(true);\n\n    drawerFlyout.populateHeading(cartHeadingFragment, true);\n\n    if (itemsAdded) {\n      const notificationFragment = cartDrawerEl.querySelector('[data-cart-drawer-notification-template]').content.cloneNode(true);\n      const notificationFragmentMessageText = notificationFragment.querySelector('[data-cart-drawer-notification-message-text]');\n      const notificationMessageSingular = notificationFragmentMessageText.querySelector('[data-cart-drawer-notification-message-atc-singular]');\n      const notificationMessagePlural = notificationFragmentMessageText.querySelector('[data-cart-drawer-notification-message-atc-plural]');\n\n      if (itemsAdded.length === 1) {\n        notificationMessageSingular.innerText = notificationMessageSingular\n          .innerText\n          .replace('||title||', itemsAdded[0].title);\n        notificationMessagePlural.remove();\n      } else {\n        notificationMessagePlural.innerText = notificationMessagePlural.innerText.replace('||count||', itemsAdded.length);\n        notificationMessageSingular.remove();\n      }\n\n      drawerFlyout.populateNotification(notificationFragment, true);\n    }\n\n    this._destroyCartDrawerListeners();\n\n    drawerFlyout.populateContent(cartDrawerEl, true);\n\n    Core\n      .Components\n      .awaitComponents(cartDrawerEl)\n      .then(components => {\n        const productCrossSell = components.find(component => component.name === 'product-cross-sell');\n\n        if (productCrossSell) {\n          productCrossSell.fetchRecommendations('cart-drawer-template');\n        }\n      })\n      .then(() => this._createCartDrawerListeners(cartDrawerEl));\n  }\n\n  _destroyCartDrawerListeners() {\n    this._cartDrawerEventListeners.forEach(cartDrawerEventListener => (\n      this.events.unregister(cartDrawerEventListener)\n    ));\n\n    this._cartDrawerEventListeners = [];\n  }\n\n  /**\n   * Initializes the listeners for the cart drawer content.\n   *\n   * @private\n   */\n  _createCartDrawerListeners(cartDrawerEl) {\n    const cartDrawerCount = cartDrawerEl.querySelector('[data-cart-drawer-count]');\n    const cartRows = cartDrawerEl.querySelectorAll('[data-cart-drawer-form-item]');\n    const cartNotes = cartDrawerEl.querySelector('[data-cart-notes] [data-component=\"input-textarea\"]');\n    const cartDrawerUpdateEvent = this.events.register(\n      document,\n      'cart:update',\n      e => {\n        if (cartDrawerCount) {\n          cartDrawerCount.innerHTML = e.detail.count;\n        }\n      },\n    );\n\n    this._cartDrawerEventListeners.push(cartDrawerUpdateEvent);\n\n    cartRows.forEach(row => {\n      const lineItemKey = row.dataset.cartDrawerFormItem;\n      const quantitySelector = row.querySelector('[data-component=\"quantity-selector\"]');\n      const buttonRemoveItem = row.querySelector('[data-remove]');\n\n      const quantityChangeEvent = this.events.register(\n        quantitySelector,\n        'quantity:update',\n        e => {\n          const { quantity } = e.detail;\n\n          if (quantity === 0) {\n            this\n              ._removeRow(row)\n              .then(() => this._updateLineItem(lineItemKey, 0));\n          } else {\n            this._updateLineItem(lineItemKey, quantity);\n          }\n        },\n      );\n\n      const removeClickEvent = this.events.register(\n        buttonRemoveItem,\n        'click',\n        e => {\n          e.preventDefault();\n          this\n            ._removeRow(row)\n            .then(() => this._updateLineItem(lineItemKey, 0));\n        },\n      );\n\n      this._cartDrawerEventListeners.push(quantityChangeEvent, removeClickEvent);\n    });\n\n    if (cartNotes) {\n      const cartNoteChangeEvent = this.events.register(\n        cartNotes,\n        'input',\n        debounce(e => this._updateNote(e), 500),\n      );\n\n      this._cartDrawerEventListeners.push(cartNoteChangeEvent);\n    }\n  }\n\n  /**\n   * Refreshes the cart content based off of the drawer cart template\n   *\n   * @param {Number} lineItemKey - The unique key of the line item to update.\n   * @param {Number} itemCount - The current quantity of items in the cart\n   * @private\n   */\n  _refreshCart(response, lineItemKey) {\n    const { item_count: itemCount, sections } = response;\n    const cartDrawerEl = new DOMParser()\n      .parseFromString(sections['cart-drawer-template'], 'text/html')\n      .querySelector('[data-cart-drawer]');\n\n    this\n      ._populateFlyout(cartDrawerEl)\n      .then(() => {\n        if (this.state.item_count === itemCount) {\n          Core\n            .Components\n            .awaitComponents(cartDrawerEl)\n            .then(() => {\n              const row = cartDrawerEl.querySelector(`[data-cart-drawer-form-item=\"${lineItemKey}\"]`);\n              const targetSelector = Core.Components.getComponent(row.querySelector('[data-component=\"quantity-selector\"]'));\n              const inputValue = targetSelector.getValue();\n\n              row\n                .querySelector('[data-cart-drawer-form-item-error]')\n                .innerHTML = this.data.locales.quantityError.replace('{{ quantity }}', inputValue);\n            });\n        }\n\n        this.setState({\n          item_count: itemCount,\n        });\n\n        const updateEvent = new CustomEvent('cart:update', { detail: { count: itemCount }, bubbles: true });\n        this.el.dispatchEvent(updateEvent);\n      });\n  }\n\n  /**\n   * Updates the cart with the new quantity and refreshes the innerHTML content.\n   *\n   * @param {number} lineItemKey - The unique key of the line item to update.\n   * @param {object} e - The event object triggered.\n   * @private\n   */\n  _updateLineItem(key, quantity) {\n    const formData = {\n      id: key,\n      quantity,\n      sections: 'cart-drawer-template',\n      sections_url: `${window.PXUTheme.routes.cart_url}`,\n    };\n\n    fetch(`${window.PXUTheme.routes.cart_change_url}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', Accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest' },\n      body: JSON.stringify(formData),\n    })\n      .then(response => response.json())\n      .then(response => this._refreshCart(response, key))\n      .catch(error => this._handleError(error));\n  }\n\n  /**\n   * Handles general error messaging.\n   *\n   * @param {String} error - The error message to display.\n   * @private\n   */\n  _handleError(error) {\n    this.cartDrawerErrors.style.display = 'block';\n    this.cartDrawerErrors.innerHTML = this.data.locales.error;\n\n    console.error(error);\n  }\n\n  /**\n   * Clear error messaging from the cart section.\n   *\n   * @private\n   */\n  _clearErrors() {\n    this.cartDrawerErrors.style.display = 'none';\n    this.cartDrawerErrors.innerHTML = '';\n    this.cartDrawerItemErrors.forEach(error => {\n      error.innerHTML = '';\n    });\n  }\n\n  /**\n   * Animates the removal of items from the cart\n   *\n   * @param {object} data - The data object containing the id, key, and row of the item to remove.\n   * @private\n   */\n  _removeRow(rowEl) {\n    const animateRemoval = Core.Animations.transition({ el: rowEl, state: 'active' });\n\n    rowEl.style.setProperty('--open-height', `${rowEl.scrollHeight}px`);\n\n    return animateRemoval\n      .animateTo('fade')\n      .then(() => animateRemoval.animateTo('remove'))\n      .then(() => rowEl.remove());\n  }\n\n  _updateNote(e) {\n    fetch(window.PXUTheme.routes.cart_update_url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', Accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest' },\n      body: JSON.stringify({ note: e.target.value }),\n    });\n  }\n}\n","/**\n * @class Quickshop\n * @classdesc The quickshop for a theme that will show a product within it dynamically\n *\n * @extends Core.Component\n */\nexport default class Quickshop extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n    this.loaded = false;\n    this.loadedLink = '';\n  }\n\n  onMount() {\n    this.drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (!this.drawerModal) return;\n\n    this.drawerFlyout = this.drawerModal.createFlyout();\n  }\n\n  onDismount() {\n    super.onDismount();\n\n    if (this.drawerFlyout) {\n      this.drawerFlyout.then(drawerFlyout => drawerFlyout.destroy());\n    }\n  }\n\n  /**\n   * Opens a quickshop using a drawer modal\n   *\n   * @param {HTMLNode} trigger The trigger that was clicked to open the quickshop\n   * @param {Object} data An object containing data relevant to the quickshop\n   * @param {String} data.productLink The link to fetch the product quickshop content\n   */\n  async open(trigger, data) {\n    if (!this.drawerFlyout) return;\n\n    const drawerFlyout = await this.drawerFlyout;\n\n    this.drawerModal.clearFlyout(drawerFlyout);\n    this.drawerModal.openFlyout(drawerFlyout, trigger);\n\n    if (!this.loaded || this.loadedLink !== data.productLink) {\n      this.loadQuickshop(data)\n        .then(() => {\n          drawerFlyout.populateHeading(this.headingFragment, true);\n          drawerFlyout.populateContent(this.content, true);\n          this._bindATCEvent(this.content, drawerFlyout);\n        });\n    } else {\n      drawerFlyout.populateHeading(this.headingFragment, true);\n      drawerFlyout.populateContent(this.content, true);\n      this._bindATCEvent(this.content, drawerFlyout);\n    }\n  }\n\n  _bindATCEvent(drawerContent, drawerFlyout) {\n    const buyButton = drawerContent.querySelector('[data-component=\"buy-buttons\"]');\n\n    this.events.register(buyButton, 'product:add-to-cart:success', () => {\n      this.drawerModal.closeFlyout(drawerFlyout);\n      this.loaded = false;\n    });\n  }\n\n  /**\n   *\n   * Preloads quickshop for quicker initialization\n   *\n   * @param {Object} data An object containing data relevant to the quickshop\n   * @param {String} data.productLink The link to fetch the product quickshop content\n   * @returns {Promise}\n   */\n  loadQuickshop(data) {\n    const { productLink } = data;\n\n    return new Promise(resolve => {\n      fetch(productLink.includes('?') ? `${productLink}&view=quickshop` : `${productLink}?view=quickshop`)\n        .then(response => response.text()) // Return text string of the HTML\n        .then(html => {\n          // Convert the HTML string into a document object\n          const quickshopComponentEl = new DOMParser().parseFromString(html, 'text/html').querySelector('[data-product-quickshop]');\n          const quickshopSectionEl = quickshopComponentEl.parentElement;\n          const quickshopHeadingFragment = quickshopSectionEl\n            .querySelector('[data-product-quickshop-heading-template]')\n            .content\n            .cloneNode(true);\n\n          this.headingFragment = quickshopHeadingFragment;\n          this.content = quickshopSectionEl;\n          this.loaded = true;\n          this.loadedLink = productLink;\n          resolve();\n        });\n    });\n  }\n}\n","/**\n * @class Flyout\n * @classdesc A instance of the a drawer flyout which can be populated with content\n */\nexport default class Flyout extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.flyoutHeaderWrapper = this.el.querySelector('[data-flyout-header-wrapper]');\n    this.flyoutHeader = this.el.querySelector('[data-flyout-header]');\n    this.flyoutHeading = this.el.querySelector('[data-flyout-heading]');\n    this.flyoutNotification = this.el.querySelector('[data-flyout-notification]');\n    this.flyoutCloseBtn = this.el.querySelector('[data-flyout-close-btn]');\n    this.flyoutContent = this.el.querySelector('[data-flyout-content]');\n    this.flyoutFooter = this.el.querySelector('[data-flyout-footer]');\n\n    this.flyoutContent = this.el.querySelector('[data-flyout-content]');\n    this.flyoutAnimation = Core.Animations.transition({ el: this.el, state: 'closed' });\n    this.flyoutNotificationAnimation = Core.Animations.transition({ el: this.flyoutNotification, state: 'closed' });\n\n    this.events.register(this.flyoutCloseBtn, 'click', () => this.parent.closeFlyout(this));\n    this.events.register(this.el, 'click', e => e.stopPropagation());\n\n    this.state = {\n      open: false,\n      trigger: null,\n    };\n  }\n\n  onDismount() {\n    super.onDismount();\n\n    Core.Utils.scrollUnlock(this.el);\n    Core.A11y.removeTrapFocus();\n  }\n\n  /**\n   * Opens the flyout, traps focus within it, and locks the scroll behaviour\n   * on the site (except for this flyout).\n   *\n   * @param {Boolean} loading If true, will clear the content and set the state to loading\n   */\n  open(trigger) {\n    this.setState({\n      open: true,\n      trigger,\n    });\n\n    this.flyoutAnimation\n      .animateTo('open')\n      .then(() => this.focus());\n  }\n\n  focus() {\n    Core.Utils.scrollLock(this.el, this.flyoutContent);\n\n    // Trap focus so that all items within the content are now accessible through keyboard\n    Core.A11y.trapFocus(this.el);\n  }\n\n  clear() {\n    this.clearHeading();\n    this.clearNotification();\n    this.clearContent();\n    this.clearFooter();\n  }\n\n  clearHeading() {\n    this.flyoutHeader.setAttribute('hidden', '');\n    this.flyoutHeading.innerHTML = '';\n\n    if (this.flyoutNotification.hasAttribute('hidden')) {\n      this.flyoutHeaderWrapper.setAttribute('hidden', '');\n    }\n  }\n\n  clearNotification(animate = false) {\n    return this.flyoutNotificationAnimation\n      .animateTo(\n        'closed',\n        {\n          onStart: () => this.flyoutNotification.style.setProperty('--notification-height', ''),\n          force: !animate,\n        },\n      )\n      .then(() => {\n        this.flyoutNotification.setAttribute('hidden', '');\n        this.flyoutNotification.innerHTML = '';\n\n        if (this.flyoutHeader.hasAttribute('hidden')) {\n          this.flyoutHeaderWrapper.setAttribute('hidden', '');\n        }\n      });\n  }\n\n  clearContent() {\n    this.flyoutContent.innerHTML = '';\n  }\n\n  clearFooter() {\n    this.flyoutFooter.setAttribute('hidden', '');\n    this.flyoutFooter.innerHTML = '';\n  }\n\n  /**\n   * Updates the content of the flyout to contain the DOM in contentHTML. If the element is already\n   * in the DOM, that element will be moved inside of this flyout and will no longer exist in its\n   * original location.\n   *\n   * @param {HTMLNode} contentNode The content to be placed in the flyout (will be moved in the DOM)\n   */\n  populateHeading(contentNode, replace = false) {\n    if (replace) {\n      this.flyoutHeading.innerHTML = '';\n    }\n\n    this.flyoutHeading.appendChild(contentNode);\n    this.flyoutHeader.removeAttribute('hidden');\n    this.flyoutHeaderWrapper.removeAttribute('hidden');\n\n    if (this.state.open) {\n      // Trap focus again so that all items within the content are now accessible through keyboard\n      Core.A11y.trapFocus(this.el);\n    }\n  }\n\n  populateNotification(contentNode, replace = false, animate = false, timeout = 0) {\n    if (replace) {\n      this.flyoutNotification.innerHTML = '';\n    }\n\n    this.flyoutNotification.appendChild(contentNode);\n    this.flyoutNotification.removeAttribute('hidden');\n    this.flyoutHeaderWrapper.removeAttribute('hidden');\n\n    const animation = Promise.resolve();\n    const scrollheight = Array\n      .from(this.flyoutNotification.children)\n      .reduce((acc, child) => (acc + child.scrollHeight), 0);\n\n    if (this.state.open) {\n      // Trap focus again so that all items within the content are now accessible through keyboard\n      Core.A11y.trapFocus(this.el);\n\n      // Resize the element\n      this.flyoutNotification.style.setProperty('--notification-height', `${scrollheight}px`);\n    } else {\n      animation.then(() => (\n        this.flyoutNotificationAnimation\n          .animateTo(\n            'opened',\n            {\n              onStart: () => this.flyoutNotification.style.setProperty('--notification-height', `${scrollheight}px`),\n              force: !animate,\n            },\n          )\n      ));\n    }\n\n    return animation.then(() => {\n      if (timeout > 0) {\n        setTimeout(() => this.clearNotification(true), timeout);\n      }\n    });\n  }\n\n  /**\n   * Updates the content of the flyout to contain the DOM in contentHTML. If the element is already\n   * in the DOM, that element will be moved inside of this flyout and will no longer exist in its\n   * original location.\n   *\n   * @param {HTMLNode} contentNode The content to be placed in the flyout (will be moved in the DOM)\n   */\n  populateContent(contentNode, replace = false) {\n    if (replace) {\n      this.flyoutContent.innerHTML = '';\n    }\n\n    this.flyoutContent.appendChild(contentNode);\n\n    if (this.state.open) {\n      // Trap focus again so that all items within the content are now accessible through keyboard\n      Core.A11y.trapFocus(this.el);\n    }\n  }\n\n  populateFooter(contentNode, replace = false) {\n    if (replace) {\n      this.flyoutFooter.innerHTML = '';\n    }\n\n    this.flyoutFooter.appendChild(contentNode);\n    this.flyoutFooter.removeAttribute('hidden');\n\n    if (this.state.open) {\n      // Trap focus again so that all items within the content are now accessible through keyboard\n      Core.A11y.trapFocus(this.el);\n    }\n  }\n\n  /**\n   * Closes this flyout, and then removes the trap focus from it.\n   */\n  close() {\n    this.setState({\n      open: false,\n      trigger: null,\n    });\n\n    return this.flyoutAnimation\n      .animateTo('closed')\n      .then(() => {\n        Core.Utils.scrollUnlock(this.el);\n        Core.A11y.removeTrapFocus();\n      });\n  }\n\n  destroy() {\n    this.el.remove();\n  }\n}\n","/**\n * @class DrawerModal\n * @classdesc A drawer modal component that can support multiple flyouts with content within them.\n *\n * @extends Core.Component\n */\nexport default class DrawerModal extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.template = el.querySelector('[data-drawer-flyout-template]');\n    this.events.register(window, 'keyup', e => { if (e.key === 'Escape') this.closeAllFlyouts(); });\n    this.events.register(document, 'click', e => {\n      if (e.target.tagName !== 'SHOPIFY-INSTALLMENTS-MODAL') {\n        this.closeAllFlyouts();\n      }\n    });\n  }\n\n  onMount() {\n    this.siteOverlay = Core.Components.getComponent('site-overlay');\n  }\n\n  /**\n   * Creates a new drawer modal which can be opened and closed.\n   * @param {HTMLNode} content The content to be included within the flyout\n   * @param {String} direction The direction the flyout should open from, if \"left\" will open from\n   * the left instead of \"right\".\n   * @returns {Flyout} The new flyout object\n   */\n  createFlyout(content) {\n    const flyoutFragment = this.template.content.cloneNode(true);\n    const flyoutEl = flyoutFragment.firstElementChild;\n\n    const awaitingFlyoutEl = Core.Components.awaitComponents(flyoutEl);\n\n    this.el.appendChild(flyoutEl);\n\n    return awaitingFlyoutEl\n      .then(components => components.find(component => component.el === flyoutEl))\n      .then(flyout => {\n        if (flyout && content) {\n          flyout.populateContent(content);\n        }\n\n        return flyout;\n      });\n  }\n\n  destroyFlyout(flyout) {\n    if (!flyout) return;\n\n    flyout.el.remove();\n  }\n\n  /**\n   * Clears the content in the flyout\n   * @param {*} flyout  The flyout to clear\n   */\n  clearFlyout(flyout) {\n    if (!flyout) return;\n\n    flyout.clear();\n  }\n\n  /**\n   * Opens the flyout.\n   * Will show the site overlay if available.\n   * @param {*} flyout The flyout to be opened\n   * @param {*} trigger The trigger that was clicked to open this flyout\n   * @param {*} loading If true, will clear the content of the flyout and set the state to loading\n   */\n  openFlyout(flyout, trigger) {\n    if (!flyout) return;\n\n    if (this.siteOverlay) {\n      this.siteOverlay.show();\n    }\n\n    flyout.open(trigger);\n  }\n\n  /**\n   * Closes the flyout that is passed in.\n   * @param {Flyout} flyout The flyout to be closed\n   */\n  closeFlyout(flyout) {\n    if (!flyout) return;\n\n    const { trigger } = flyout.state;\n\n    flyout.close();\n\n    const openFlyouts = this.children.filter(f => f.state.open);\n    const nextFlyout = openFlyouts.length ? openFlyouts[openFlyouts.length - 1] : null;\n\n    if (nextFlyout) {\n      nextFlyout.focus();\n    } else {\n      if (this.siteOverlay) {\n        this.siteOverlay.hide();\n      }\n\n      if (trigger) {\n        trigger.focus();\n      }\n    }\n  }\n\n  /**\n   * Closes all flyouts, returns focus to the first trigger, and removes the scroll lock.\n   */\n  closeAllFlyouts() {\n    const flyouts = this.children;\n\n    flyouts.forEach(flyout => this.closeFlyout(flyout));\n  }\n}\n","/**\n * @class SiteOverlay\n * @classdesc An overlay to be placed over the full site content to block interaction\n * with site components while modals are open.\n *\n * @extends Core.Component\n */\nexport default class SiteOverlay extends Core.Component {\n  constructor(el, context) {\n    super(el, context);\n\n    this.overlayAnimation = Core.Animations.transition({ el: this.el, state: 'closed' });\n    this.events.register(this.el, 'click', () => this.hide());\n    this.events.register(window, 'keyup', e => { if (e.key === 'Escape') this.hide(); });\n  }\n\n  /**\n   * Shows an overlay over the entire site\n   */\n  show({ belowHeader = false } = {}) {\n    if (belowHeader) {\n      this.el.style.setProperty('--index-overlay', 'calc(var(--index-header) - 1)');\n    } else {\n      this.el.style.removeProperty('--index-overlay');\n    }\n\n    this.overlayAnimation.animateTo('open');\n  }\n\n  /**\n   * Hides the overlay\n   */\n  hide() {\n    this.overlayAnimation.animateTo('closed');\n  }\n}\n","import debounce from 'just-debounce';\n\n/**\n * @class HeaderPassword\n * @classdesc The header section is used to handle the header functionality.\n *\n * @extends Core.SectionComponent\n */\nexport default class HeaderPassword extends Core.SectionComponent {\n  constructor(el, context) {\n    super(el, context);\n    this.header = this.el.querySelector('[data-header-password]');\n    this.sticky = this.data.settings.sticky;\n    this.showBorder = this.data.settings.show_border;\n\n    this.events.register(document, 'cart:update', e => {\n      this._updateCartCount(e.detail.count);\n    });\n\n    if (this.sticky && this.showBorder === false) {\n      this.events.register(document, 'scroll', debounce(() => { this._setStickyShadow(); }, 100, false, true));\n    }\n  }\n\n  /**\n   * On mount, we create the event listeners for the header section.\n   */\n  onMount() {\n    const drawerFragment = this.el.querySelector('[data-drawer]').content.cloneNode(true);\n    const { el: embedModalBtnEl } = this.query('button', 'login');\n    const drawerModal = Core.Components.getComponent('drawer-modal');\n\n    if (!drawerModal) return;\n\n    this.drawerFlyout = drawerModal.createFlyout(drawerFragment);\n    this.drawerFlyout\n      .then(drawerFlyout => {\n        if (!drawerFlyout) return;\n\n        if (this.data.password_error) {\n          drawerFlyout.populateContent(drawerFragment);\n          drawerModal.openFlyout(drawerFlyout, embedModalBtnEl);\n\n          this.events.register(drawerFlyout.el, 'header-password-drawer:close', () => drawerModal.closeFlyout(drawerFlyout));\n        }\n\n        this.events.register(embedModalBtnEl, 'click', e => {\n          e.stopPropagation();\n          e.preventDefault();\n\n          drawerFlyout.populateContent(drawerFragment);\n          drawerModal.openFlyout(drawerFlyout, embedModalBtnEl);\n\n          this.events.register(drawerFlyout.el, 'header-password-drawer:close', () => drawerModal.closeFlyout(drawerFlyout));\n        });\n      });\n\n    this.headerToolbar = this.query('header-tool-bar');\n\n    this._setHeightVariables();\n    this.events.register(window, 'resize', debounce(() => this._setHeightVariables(), 100));\n  }\n\n  onDismount() {\n    super.onDismount();\n\n    if (this.drawerFlyout) {\n      this.drawerFlyout.then(drawerFlyout => drawerFlyout.destroy());\n    }\n  }\n\n  /**\n   * Updates the sticky header logic\n   *\n   * @private\n   */\n  _setHeightVariables() {\n    this.headerSection = document.querySelector('#shopify-section-header-password');\n\n    if (this.headerToolbar) {\n      this.headerToolbarHeight = this.headerToolbar.getHeight();\n      this.headerSection.style.setProperty('--announcement-height', `${this.headerToolbarHeight}px`);\n    }\n\n    const headerHeight = this.header.getBoundingClientRect().height;\n    this.headerSection.style.setProperty('--header-height', `${headerHeight}px`);\n  }\n\n  /**\n   * Checks the scroll position and sets the sticky shadow\n   *\n   * @private\n   */\n  _setStickyShadow() {\n    if (window.scrollY > 100) {\n      this.header.classList.add('header--shadow');\n    } else {\n      this.header.classList.remove('header--shadow');\n    }\n  }\n}\n","import HeaderPasswordDrawer from '@pixelunion/shopify-components/components/header-password-drawer/default/header-password-drawer.js';\nimport AddTheLookItem from '@pixelunion/shopify-components/components/add-the-look-item/default/add-the-look-item.js';\nimport ShopTheLook from '@pixelunion/shopify-components/sections/shop-the-look/default/shop-the-look.js';\nimport VideoPlayer from '@pixelunion/shopify-components/components/video-player/default/video-player.js';\nimport BlockPromoImage from '@pixelunion/shopify-components/blocks/block-promo-image/default/block-promo-image.js';\nimport BlockPromoText from '@pixelunion/shopify-components/blocks/block-promo-text/default/block-promo-text.js';\nimport BlockPromoEditorial from '@pixelunion/shopify-components/blocks/block-promo-editorial/default/block-promo-editorial.js';\nimport PromotionsGrid from '@pixelunion/shopify-components/sections/promotions-grid/default/promotions-grid.js';\nimport ProductRecommendations from '@pixelunion/shopify-components/sections/product-recommendations/default/product-recommendations.js';\nimport ProductDetails from '@pixelunion/shopify-components/components/product-details/default/product-details.js';\nimport ProductQuickshop from '@pixelunion/shopify-components/sections/product-quickshop/default/product-quickshop.js';\nimport ComplementaryProducts from '@pixelunion/shopify-components/blocks/block-complementary-products/default/block-complementary-products.js';\nimport ProductGallery from '@pixelunion/shopify-components/components/product-gallery/default/product-gallery.js';\nimport Product from '@pixelunion/shopify-components/sections/product/default/product.js';\nimport PageAgeGate from '@pixelunion/shopify-components/sections/page-age-gate/default/page-age-gate.js';\nimport MainSearch from '@pixelunion/shopify-components/sections/main-search/default/main-search.js';\nimport DrawerFilters from '@pixelunion/shopify-components/components/drawer-filters/default/drawer-filters.js';\nimport FiltersActiveMobile from '@pixelunion/shopify-components/components/filters-active-mobile/default/filters-active-mobile.js';\nimport FiltersButtonsMobile from '@pixelunion/shopify-components/components/filters-buttons-mobile/default/filters-buttons-mobile.js';\nimport FacetedFiltersMobile from '@pixelunion/shopify-components/components/faceted-filters-mobile/default/faceted-filters-mobile.js';\nimport FacetedFilters from '@pixelunion/shopify-components/components/faceted-filters/default/faceted-filters.js';\nimport MainCollectionGrid from '@pixelunion/shopify-components/sections/main-collection-grid/default/main-collection-grid.js';\nimport ProductCrossSellSlider from '@pixelunion/shopify-components/components/product-cross-sell-slider/default/product-cross-sell-slider.js';\nimport MainCart from '@pixelunion/shopify-components/sections/main-cart/default/main-cart.js';\nimport Blog from '@pixelunion/shopify-components/sections/main-blog/default/main-blog.js';\nimport ImageBanner from '@pixelunion/shopify-components/sections/image-banner/two-image/image-banner.js';\nimport NavigationDrawer from '@pixelunion/shopify-components/components/navigation-drawer/default/navigation-drawer.js';\nimport LiveSearch from '@pixelunion/shopify-components/components/live-search/default/live-search.js';\nimport BlockMeganav from '@pixelunion/shopify-components/blocks/block-meganav/default/block-meganav.js';\nimport NavigationDesktop from '@pixelunion/shopify-components/components/navigation-desktop/default/navigation-desktop.js';\nimport BlockAnnouncement from '@pixelunion/shopify-components/blocks/block-announcement/default/block-announcement.js';\nimport HeaderToolBar from '@pixelunion/shopify-components/components/header-toolbar/default/header-toolbar.js';\nimport Header from '@pixelunion/shopify-components/sections/header/default/header.js';\nimport Disclosure from '@pixelunion/shopify-components/components/disclosure/default/disclosure.js';\nimport CrossBorder from '@pixelunion/shopify-components/components/cross-border/default/cross-border.js';\nimport Share from '@pixelunion/shopify-components/components/share/default/share.js';\nimport ProductPage from '@pixelunion/shopify-components/components/product-page/default/product-page.js';\nimport ProductSizeGuideDrawer from '@pixelunion/shopify-components/components/product-page-drawer/default/product-page-drawer.js';\nimport ProductSizeGuide from '@pixelunion/shopify-components/components/product-size-guide/default/product-size-guide.js';\nimport ProductGalleryModal from '@pixelunion/shopify-components/components/product-gallery-modal/default/product-gallery-modal.js';\nimport MediaModel from '@pixelunion/shopify-components/components/media-model/default/media-model.js';\nimport MediaExternalVideo from '@pixelunion/shopify-components/components/media-external-video/default/media-external-video.js';\nimport MediaVideo from '@pixelunion/shopify-components/components/media-video/default/media-video.js';\nimport FeaturedProductGallery from '@pixelunion/shopify-components/components/featured-product-gallery/default/featured-product-gallery.js';\nimport FeaturedProduct from '@pixelunion/shopify-components/sections/featured-product/default/featured-product.js';\nimport ProductCard from '@pixelunion/shopify-components/components/product-card/default/product-card.js';\nimport ProductCardSlider from '@pixelunion/shopify-components/components/product-card-slider/default/product-card-slider.js';\nimport CustomerAddressForm from '@pixelunion/shopify-components/components/customer-address-form/default/customer-address-form.js';\nimport CartDrawerTemplate from '@pixelunion/shopify-components/sections/cart-drawer-template/default/cart-drawer-template.js';\nimport AgeGate from '@pixelunion/shopify-components/components/age-gate/default/age-gate.js';\nimport ButtonText from '@pixelunion/shopify-components/components/button-text/default/button-text.js';\nimport SurfacePickUpDrawer from '@pixelunion/shopify-components/components/surface-pick-up-drawer/default/surface-pick-up-drawer.js';\nimport SurfacePickUp from '@pixelunion/shopify-components/components/surface-pick-up/default/surface-pick-up.js';\nimport Notification from '@pixelunion/shopify-components/components/notification/default/notification.js';\nimport GiftCardRecipientForm from '@pixelunion/shopify-components/components/gift-card-recipient-form/default/gift-card-recipient-form.js';\nimport ButtonAction from '@pixelunion/shopify-components/components/button-action/default/button-action.js';\nimport BuyButtons from '@pixelunion/shopify-components/components/buy-buttons/default/buy-buttons.js';\nimport InputFieldset from '@pixelunion/shopify-components/components/input-fieldset/default/input-fieldset.js';\nimport InputRadio from '@pixelunion/shopify-components/components/input-radio/default/input-radio.js';\nimport InputSwatch from '@pixelunion/shopify-components/components/input-swatch/default/input-swatch.js';\nimport OptionSelectableBoxes from '@pixelunion/shopify-components/components/option-selectable-boxes/default/option-selectable-boxes.js';\nimport InputSelect from '@pixelunion/shopify-components/components/input-select/default/input-select.js';\nimport OptionDropdown from '@pixelunion/shopify-components/components/option-dropdown/default/option-dropdown.js';\nimport OptionsSelector from '@pixelunion/shopify-components/components/options-selector/default/options-selector.js';\nimport VariantSelector from '@pixelunion/shopify-components/components/variant-selector/default/variant-selector.js';\nimport Button from '@pixelunion/shopify-components/components/button/default/button.js';\nimport ProductCardSwatches from '@pixelunion/shopify-components/components/product-card-swatches/default/product-card-swatches.js';\nimport CrossSellCard from '@pixelunion/shopify-components/components/cross-sell-card/default/cross-sell-card.js';\nimport ProductCrossSell from '@pixelunion/shopify-components/components/product-cross-sell/default/product-cross-sell.js';\nimport InputTextarea from '@pixelunion/shopify-components/components/input-textarea/default/input-textarea.js';\nimport QuantitySelector from '@pixelunion/shopify-components/components/quantity-selector/default/quantity-selector.js';\nimport LazyImg from '@pixelunion/shopify-components/components/lazy-img/default/lazy-img.js';\nimport CartDrawer from '@pixelunion/shopify-components/components/cart-drawer/default/cart-drawer.js';\nimport Quickshop from '@pixelunion/shopify-components/components/quickshop/default/quickshop.js';\nimport Flyout from '@pixelunion/shopify-components/components/flyout/default/flyout.js';\nimport DrawerModal from '@pixelunion/shopify-components/components/drawer-modal/default/drawer-modal.js';\nimport SiteOverlay from '@pixelunion/shopify-components/components/site-overlay/default/site-overlay.js';\nimport HeaderPassword from '@pixelunion/shopify-components/sections/header-password/default/header-password.js';\nCore.Components.register(HeaderPasswordDrawer, 'header-password-drawer');\nCore.Components.register(AddTheLookItem, 'add-the-look-item');\nCore.Components.register(ShopTheLook, 'shop-the-look');\nCore.Components.register(VideoPlayer, 'video-player');\nCore.Components.register(BlockPromoImage, 'block-promo-image');\nCore.Components.register(BlockPromoText, 'block-promo-text');\nCore.Components.register(BlockPromoEditorial, 'block-promo-editorial');\nCore.Components.register(PromotionsGrid, 'promotions-grid');\nCore.Components.register(ProductRecommendations, 'product-recommendations');\nCore.Components.register(ProductDetails, 'product-details');\nCore.Components.register(ProductQuickshop, 'product-quickshop');\nCore.Components.register(ComplementaryProducts, 'complementary-products');\nCore.Components.register(ProductGallery, 'product-gallery');\nCore.Components.register(Product, 'product');\nCore.Components.register(PageAgeGate, 'page-age-gate');\nCore.Components.register(MainSearch, 'main-search');\nCore.Components.register(DrawerFilters, 'drawer-filters');\nCore.Components.register(FiltersActiveMobile, 'filters-active-mobile');\nCore.Components.register(FiltersButtonsMobile, 'filters-buttons-mobile');\nCore.Components.register(FacetedFiltersMobile, 'faceted-filters-mobile');\nCore.Components.register(FacetedFilters, 'faceted-filters');\nCore.Components.register(MainCollectionGrid, 'main-collection-grid');\nCore.Components.register(ProductCrossSellSlider, 'product-cross-sell-slider');\nCore.Components.register(MainCart, 'main-cart');\nCore.Components.register(Blog, 'blog');\nCore.Components.register(ImageBanner, 'image-banner');\nCore.Components.register(NavigationDrawer, 'navigation-drawer');\nCore.Components.register(LiveSearch, 'live-search');\nCore.Components.register(BlockMeganav, 'block-meganav');\nCore.Components.register(NavigationDesktop, 'navigation-desktop');\nCore.Components.register(BlockAnnouncement, 'block-announcement');\nCore.Components.register(HeaderToolBar, 'header-tool-bar');\nCore.Components.register(Header, 'header');\nCore.Components.register(Disclosure, 'disclosure');\nCore.Components.register(CrossBorder, 'cross-border');\nCore.Components.register(Share, 'share');\nCore.Components.register(ProductPage, 'product-page');\nCore.Components.register(ProductSizeGuideDrawer, 'product-size-guide-drawer');\nCore.Components.register(ProductSizeGuide, 'product-size-guide');\nCore.Components.register(ProductGalleryModal, 'product-gallery-modal');\nCore.Components.register(MediaModel, 'media-model');\nCore.Components.register(MediaExternalVideo, 'media-external-video');\nCore.Components.register(MediaVideo, 'media-video');\nCore.Components.register(FeaturedProductGallery, 'featured-product-gallery');\nCore.Components.register(FeaturedProduct, 'featured-product');\nCore.Components.register(ProductCard, 'product-card');\nCore.Components.register(ProductCardSlider, 'product-card-slider');\nCore.Components.register(CustomerAddressForm, 'customer-address-form');\nCore.Components.register(CartDrawerTemplate, 'cart-drawer-template');\nCore.Components.register(AgeGate, 'age-gate');\nCore.Components.register(ButtonText, 'button-text');\nCore.Components.register(SurfacePickUpDrawer, 'surface-pick-up-drawer');\nCore.Components.register(SurfacePickUp, 'surface-pick-up');\nCore.Components.register(Notification, 'notification');\nCore.Components.register(GiftCardRecipientForm, 'gift-card-recipient-form');\nCore.Components.register(ButtonAction, 'button-action');\nCore.Components.register(BuyButtons, 'buy-buttons');\nCore.Components.register(InputFieldset, 'input-fieldset');\nCore.Components.register(InputRadio, 'input-radio');\nCore.Components.register(InputSwatch, 'input-swatch');\nCore.Components.register(OptionSelectableBoxes, 'option-selectable-boxes');\nCore.Components.register(InputSelect, 'input-select');\nCore.Components.register(OptionDropdown, 'option-dropdown');\nCore.Components.register(OptionsSelector, 'options-selector');\nCore.Components.register(VariantSelector, 'variant-selector');\nCore.Components.register(Button, 'button');\nCore.Components.register(ProductCardSwatches, 'product-card-swatches');\nCore.Components.register(CrossSellCard, 'cross-sell-card');\nCore.Components.register(ProductCrossSell, 'product-cross-sell');\nCore.Components.register(InputTextarea, 'input-textarea');\nCore.Components.register(QuantitySelector, 'quantity-selector');\nCore.Components.register(LazyImg, 'lazy-img');\nCore.Components.register(CartDrawer, 'cart-drawer');\nCore.Components.register(Quickshop, 'quickshop');\nCore.Components.register(Flyout, 'flyout');\nCore.Components.register(DrawerModal, 'drawer-modal');\nCore.Components.register(SiteOverlay, 'site-overlay');\nCore.Components.register(HeaderPassword, 'header-password');"],"names":["HeaderPasswordDrawer","AddTheLookItem","ShopTheLook","VideoPlayer","BlockPromoImage","BlockPromoText","BlockPromoEditorial","PromotionsGrid","ProductRecommendations","ProductDetails","ProductQuickshop","ComplementaryProducts","ProductGallery","Product","PageAgeGate","MainSearch","DrawerFilters","FiltersActiveMobile","FiltersButtonsMobile","FacetedFiltersMobile","FacetedFilters","MainCollectionGrid","ProductCrossSellSlider","MainCart","Blog","ImageBanner","NavigationDrawer","LiveSearch","BlockMeganav","NavigationDesktop","BlockAnnouncement","HeaderToolBar","Header","Disclosure","CrossBorder","Share","ProductPage","ProductSizeGuideDrawer","ProductSizeGuide","ProductGalleryModal","MediaModel","MediaExternalVideo","MediaVideo","FeaturedProductGallery","FeaturedProduct","ProductCard","ProductCardSlider","CustomerAddressForm","CartDrawerTemplate","AgeGate","ButtonText","SurfacePickUpDrawer","SurfacePickUp","Notification","GiftCardRecipientForm","ButtonAction","BuyButtons","InputFieldset","InputRadio","InputSwatch","OptionSelectableBoxes","InputSelect","OptionDropdown","OptionsSelector","VariantSelector","Button","ProductCardSwatches","CrossSellCard","ProductCrossSell","InputTextarea","QuantitySelector","LazyImg","CartDrawer","Quickshop","Flyout","DrawerModal","SiteOverlay","HeaderPassword","Core","Components","register"],"sourceRoot":""}