<section data-component="product-recommendations" data-component-type="section" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="product-recommendations" style="--product-recommendations-limit: {{ section.settings.limit }}">
  <script
    type="application/json"
    data-component-data
  >
    {
      "url": "{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ section.settings.limit }}"
    }
  </script>
  {% if recommendations.performed and recommendations.products_count > 0 %}
    {% if section.settings.heading != blank %}
      <section-wrapper>
        <section-header>
          <h2 class="product-recommendations__heading">
            {{ section.settings.heading | escape }}
          </h2>
        </section-header>
      </section-wrapper>
    {% endif %}
    <section-wrapper>
      <section-content>
        <div class="product-recommendations__wrapper">
          {% comment %}Component product-card-slider:default begin{% endcomment %}
          {% liquid
            assign products_f6eeb458 = products
            assign products = recommendations.products
            assign cards_per_group_f6eeb458 = cards_per_group
            assign cards_per_group = section.settings.cards_per_group
            assign limit_f6eeb458 = limit
            assign limit = section.settings.limit
          %}
          {%- comment -%}
            @param products [Required]
              The list of products to display
          
            @param cards_per_group [Optional]
              Number to group card slides by. Defaults to 3
          
            @param cards_per_group_mobile [Optional]
              Show a single card at a time on mobile. Defaults to 2
          
            @param limit [Optional]
              The number of product cards to render. Defaults to 5
          
            @param card_style [Optional]
              Indicates whether to include product cross-sell cards
              or regular product cards. Defaults to 'product'
          
            @param onboarding [Optional]
              If true, placeholder product cards will be shown
          {%- endcomment -%}
          
          <div data-component="product-card-slider" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="product-card-slider">
            {% assign cards_per_group = cards_per_group | default: 3 %}
            {% assign cards_per_group_mobile = cards_per_group_mobile | default: 2 %}
            {% assign scroll_increment_bp = scroll_increment_bp | default: 'M' %}
          
            <script
              type="application/json"
              data-component-data
            >
              {
                "cardsPerRow": {{ cards_per_group | json }},
                "cardsPerRowMobile": {{ cards_per_group_mobile }},
                "scrollIncrementBp": {{ scroll_increment_bp | json }}
              }
            </script>
            {% liquid
              assign card_style = card_style | default: 'product'
              assign previous_label = 'general.accessibility.previous_slide' | t
              assign next_label = 'general.accessibility.next_slide' | t
              assign cards_per_group_int = cards_per_group | plus: 0
              assign hide_desktop_buttons = false
              assign hide_mobile_buttons = false
              assign is_single_row = false
              assign onboarding = onboarding | default: false
              assign limit = limit | default: 5
          
              if cards_per_group_int == limit
                assign is_single_row = true
                assign hide_desktop_buttons = true
              endif
          
              if products.size <= cards_per_group_int or limit <= cards_per_group_int
                assign hide_desktop_buttons = true
              endif
          
              if limit == 2
                assign hide_mobile_buttons = true
              endif
            %}
            <ul
              class="
                product-card-slider__list
                {% if is_single_row %}
                  product-card-slider__list--single-row
                {% endif %}
                {% if hide_mobile_buttons %}
                  product-card-slider__list--mobile-single-row
                {% endif %}
              "
              style="--cards-per-row: {{ cards_per_group }};"
              role="list"
              data-slider
              data-mobile-card-row="{{ cards_per_group_mobile }}"
              data-mobile-card-row-bp="{{ scroll_increment_bp }}"
            >
              {% unless onboarding %}
                {% for product_item in products limit: limit %}
                  <li class="product-card-slider__item" data-slider-item>
                    {% if card_style == 'product' %}
                      {% comment %}Component product-card:default begin{% endcomment %}
                      {% render 'product-card', product_card_product: product_item %}
                      {% comment %}Component product-card:default end{% endcomment %}
                    {% else %}
                      {% comment %}UUID product_form_id begin{% endcomment %}
                      {% assign product_form_id = '504fb670-af08-4db8-910e-f1538b1bb876' %}
                      {% comment %}UUID product_form_id end{% endcomment %}
                      {% assign form_id = product_form_id | append: forloop.index0 %}
          
                      {% comment %}Component cross-sell-card:default begin{% endcomment %}
                      {% liquid
                        assign cross_sell_product_b77b21f7 = cross_sell_product
                        assign cross_sell_product = product_item
                      %}
                      {% comment %}
                        @param cross_sell_product
                      
                        @param form_id
                      {% endcomment %}
                      {% comment %} Product Labels {% endcomment %}
                      
                      {% assign label_metafield = settings.product_card_label_metafield | split: '.' %}
                      {% assign icon_metafield = settings.product_card_icon_metafield | split: '.' %}
                      
                      {% if cross_sell_product.metafields[label_metafield[0]][label_metafield[1]] != blank or cross_sell_product.metafields[icon_metafield[0]][icon_metafield[1]] != blank %}
                          {% capture product_label %}
                          <div class="cross-sell-card__label cross-sell-card__label--{{ settings.product_card_label_style }}">
                            {% if cross_sell_product.metafields[icon_metafield[0]][icon_metafield[1]] != blank %}
                              <div class="cross-sell-card__label-icon">
                                {% comment %}Component lazy-img:default begin{% endcomment %}
                                {% render 'lazy-img', img: cross_sell_product.metafields[icon_metafield[0]][icon_metafield[1]], size: '20x' %}
                                {% comment %}Component lazy-img:default end{% endcomment %}
                              </div>
                            {% endif %}
                            {% if cross_sell_product.metafields[label_metafield[0]][label_metafield[1]] != blank %}
                              {{ cross_sell_product.metafields[label_metafield[0]][label_metafield[1]] }}
                            {% endif %}
                          </div>
                        {% endcapture %}
                      {% endif %}
                      
                      
                      
                      {% comment %} Find which option is set up for Color (if it exists) so we can be set up for swatches, variant images,
                      and the color label on the title {% endcomment %}
                      {% assign color_option_key = blank %}
                      {% if cross_sell_product.options_by_name['Color'] != blank %}
                        {% assign color_option_key = 'option' | append: cross_sell_product.options_by_name['Color'].position %}
                      {% endif %}
                      
                      {% assign color_variants_added = '|' %}
                      {% assign variant_images_html = '' %}
                      {% assign variant_indices_string = '' %}
                      
                      {% if color_option_key != blank %}
                        {% for next_variant in cross_sell_product.variants %}
                          {% assign search_string = '|' | append: next_variant[color_option_key] | downcase | append: '|' %}
                          {% unless color_variants_added contains search_string %}
                            {% if next_variant.featured_media != blank %}
                              {% capture variant_image_part %}
                                <div
                                  class="cross-sell-card__img-variant hidden"
                                  data-variant-image="{{ next_variant[color_option_key] | downcase }}"
                                  data-variant-id="{{ next_variant.id }}"
                                >
                                  {% comment %}Component lazy-img:default begin{% endcomment %}
                                  {% render 'lazy-img', img: next_variant.featured_media.preview_image, size: '700x', lazy: false, crop_focus: 'center', fill_mode: 'fill' %}
                                  {% comment %}Component lazy-img:default end{% endcomment %}
                                </div>
                              {% endcapture %}
                              {% assign variant_images_html = variant_images_html | append: variant_image_part %}
                            {% endif %}
                      
                            {% assign color_variants_added = color_variants_added | append: next_variant[color_option_key] | downcase | append: '|' %}
                            {% assign variant_indices_string = variant_indices_string | append: '|' | append: forloop.index0 %}
                          {% endunless %}
                        {% endfor %}
                      {% endif %}
                      
                      {% assign color_array = color_variants_added | remove_first: '|' | split: '|' %}
                      {% assign variant_indices_array = variant_indices_string | remove_first: '|' | split: '|' %}
                      
                      {% assign variant = cross_sell_product.selected_or_first_available_variant %}
                      
                      {%- capture first_product_img -%}
                        {% if variant.image != blank %}
                          {% comment %}Component lazy-img:default begin{% endcomment %}
                          {% render 'lazy-img', img: variant.image, size: '700x', lazy: false, crop_focus: 'center', fill_mode: 'fill' %}
                          {% comment %}Component lazy-img:default end{% endcomment %}
                        {% elsif cross_sell_product.featured_media.preview_image != blank %}
                          {% comment %}Component lazy-img:default begin{% endcomment %}
                          {% render 'lazy-img', img: cross_sell_product.featured_media.preview_image, size: '700x', lazy: false, crop_focus: 'center', fill_mode: 'fill' %}
                          {% comment %}Component lazy-img:default end{% endcomment %}
                        {% else %}
                          {%- capture index -%}
                            {%- cycle '1', '2', '3', '4', '5', '6' -%}
                          {%- endcapture -%}
                          {{ 'product-' | append: index | placeholder_svg_tag: 'placeholder-svg' }}
                        {% endif %}
                      {%- endcapture -%}
                      
                      <div
                        data-component="cross-sell-card"
                        data-component-type="component"
                        {% if tag != blank %}data-component-tag="{{ tag }}"
                        {% endif %}class="cross-sell-card"
                        data-cross-sell-card
                      >
                        <script
                          type="application/json"
                          data-component-data
                        >
                          {
                            "product": {{ all_products[cross_sell_product.handle] | json }},
                            "selectedVariant": {{ variant | json }},
                            "sectionId": {{ section.id | json }},
                            "recommendationsRoute": {{ routes.product_recommendations_url | json }}
                          }
                        </script>
                        <div
                          class="cross-sell-card__img"
                          data-product-image
                        >
                          {% if color_option_key != blank %}
                            <div
                              class="cross-sell-card__img-variants hidden"
                              data-variant-images
                            >
                              {{ variant_images_html }}
                            </div>
                          {% endif %}
                          <div
                            class="cross-sell-card__img-product"
                            data-cross-sell-card-img
                          >
                            {{ first_product_img }}
                          </div>
                        </div>
                        <div class="cross-sell-card__details-wrapper">
                          <div
                            class="cross-sell-card__details"
                            data-cross-sell-card-details
                          >
                            {% assign selected_color = variant[color_option_key] | downcase | default: nil %}
                      
                            <div class="cross-sell-card__title">
                              <a href="{{ cross_sell_product.url }}">{{ cross_sell_product.title }}</a>
                              {% if settings.product_card_color_option_name == 'beside' and selected_color %}
                                {{ 'templates.cart.recommendations.in' | t  }} 
                                <span data-variant-color-label>{{ selected_color | capitalize }}</span>
                              {% endif %}
                            </div>
                            {%- if settings.product_card_color_option_name == 'below' and selected_color -%}
                              <div
                                class="cross-sell-card__color"
                                data-variant-color-label
                              >
                                {{ selected_color | capitalize }}
                              </div>
                            {%- endif -%}
                      
                            {% comment %}Component price:default begin{% endcomment %}
                            {% render 'price', product: cross_sell_product %}
                            {% comment %}Component price:default end{% endcomment %}
                      
                            {% if color_array.size > 0 %}
                              {% if settings.product_card_color_option == 'swatches' %}
                                {% comment %}Component product-card-swatches:default begin{% endcomment %}
                                {% liquid
                                  assign swatch_product_48e847f9 = swatch_product
                                  assign swatch_product = cross_sell_product
                                %}
                                {% comment %}
                                  @param swatch_product {Product} [Required]
                                    The product to draw the swatches for.
                                
                                  @param color_array {Array} [Required]
                                    An array of colors that need to be shown as swatches
                                
                                  @param use_variant_images {Boolean} [Optional]
                                    If true, will try and use a variant image instead of a swatch color, if one exists.
                                
                                  @param variant_indices_array {Array} [Optional]
                                    An array of variant indices that maps directly to the color array. This is useful for grabbing the direct variant.
                                
                                  @param selected_color {String} [Optional]
                                    The color that should be selected on load.
                                {% endcomment %}
                                
                                {% assign use_variant_images = use_variant_images | default: false %}
                                
                                <div data-component="product-card-swatches" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="product-card-swatches">
                                  <div class="product-card-swatches__wrapper">
                                    {% for next_color in color_array %}
                                      {% assign variant_image = blank %}
                                      {% if variant_indices_array %}
                                        {% assign variant_index = variant_indices_array[forloop.index0] | plus: 0 %}
                                        {% capture variant_index_attr %}
                                          data-variant-index="{{ variant_index }}"
                                        {% endcapture %}
                                      {% endif %}
                                
                                      <button
                                        class="product-card-swatches__swatch-button"
                                        data-swatch-button
                                        aria-label="{{ next_color }}"
                                        data-color="{{ next_color | downcase }}"
                                        {{ variant_index_attr }}
                                        data-selected="{%- if selected_color == next_color -%}selected{%- endif -%}"
                                      >
                                        {% if use_variant_images %}
                                          {% assign variant_index = variant_indices_array[forloop.index0] | plus: 0 %}
                                          {% assign variant_image = swatch_product.variants[variant_index].featured_media.preview_image %}
                                        {% endif %}
                                
                                        {% comment %}Component swatch:default begin{% endcomment %}
                                        {% liquid
                                          assign color_name_92288137 = color_name
                                          assign color_name = next_color
                                          assign show_tooltip_92288137 = show_tooltip
                                          assign show_tooltip = false
                                        %}
                                        {% comment %}
                                          @param color_name {String} [Required]
                                            Color name for which to find a suitable background
                                        
                                          @param variant_image {Boolean} [Optional]
                                            Will display a this variant image, instead of a swatch color.
                                        
                                          @param show_tooltip {Booleal} [Optional]
                                            If true, will show tooltip on hover of the swatch.
                                        {% endcomment %}
                                        
                                        {%- assign variant_image = variant_image | default: blank -%}
                                        
                                        {%- assign swatch_color = blank -%}
                                        {%- assign swatch_image = blank -%}
                                        {%- assign custom_colors = settings.swatches_custom_colors -%}
                                        
                                        {% comment %} First look for a defined custom color {% endcomment %}
                                        {%- assign custom_colors = custom_colors | newline_to_br | strip_newlines | split: '<br />' -%}
                                        {%- assign swatch_search_color = color_name | downcase -%}
                                        {%- for custom_entry in custom_colors -%}
                                          {%- assign custom_color = custom_entry | split: ':' -%}
                                          {%- assign custom_color_name = custom_color[0] | strip | downcase -%}
                                          {%- assign custom_color_value = custom_color[1] | strip -%}
                                          {%- if swatch_search_color == custom_color_name -%}
                                            {% assign swatch_color = custom_color_value %}
                                            {%- break -%}
                                          {%- endif -%}
                                        {%- endfor -%}
                                        
                                        {% comment %} Otherwise default to the raw color name, which will either be a
                                        valid named HTML color and displayed as such, or will be ignored by the browser. {% endcomment %}
                                        {%- if swatch_color == blank -%}
                                          {% assign swatch_color = color_name | replace: " ", "" | handleize %}
                                        {%- endif -%}
                                        
                                        {% comment %} Use a variant image for the swatch if one exists. {% endcomment %}
                                        {%- if variant_image != blank -%}
                                          {% assign swatch_image = variant_image %}
                                        {%- else -%}
                                          {% comment %} If not using variant images, look for a image that matches the color name in the theme's files. {% endcomment %}
                                          {% assign swatch_file_name = color_name | downcase | handleize | append: '.png' %}
                                          {%- if images[swatch_file_name] != blank -%}
                                            {%- assign swatch_image = images[swatch_file_name] -%}
                                          {%- endif -%}
                                        {%- endif -%}
                                        
                                        <div
                                          data-component="swatch"
                                          data-component-type="component"
                                          {% if tag != blank %}data-component-tag="{{ tag }}"
                                          {% endif %}class="swatch"
                                          {% if swatch_image == blank %}
                                            style="--swatch-color: {{ swatch_color }};"
                                          {% endif %}
                                        >
                                          <span class="swatch__label {% unless show_tooltip %}visually-hidden{% endunless %}">{{ color_name }}</span>
                                          <div
                                            class="
                                              swatch__fill
                                              swatch__fill--{{ settings.swatch_shape }}
                                            "
                                          >
                                            {% if swatch_image != blank %}
                                              {% comment %}Component lazy-img:default begin{% endcomment %}
                                              {% render 'lazy-img', img: swatch_image, size: '50x', crop_focus: 'center', lazy: true, canvas: true %}
                                              {% comment %}Component lazy-img:default end{% endcomment %}
                                            {% endif %}
                                          </div>
                                        </div>
                                        
                                        {% liquid
                                          assign color_name = color_name_92288137
                                          assign color_name_92288137 = nil
                                          assign show_tooltip = show_tooltip_92288137
                                          assign show_tooltip_92288137 = nil
                                        %}
                                        {% comment %}Component swatch:default end{% endcomment %}
                                      </button>
                                    {% endfor %}
                                  </div>
                                  <button class="product-card-swatches__show-more hidden" data-swatches-show-more>
                                    {{ 'products.swatches.show_more' | t: count: 'count' }}
                                  </button>
                                </div>
                                
                                {% liquid
                                  assign swatch_product = swatch_product_48e847f9
                                  assign swatch_product_48e847f9 = nil
                                %}
                                {% comment %}Component product-card-swatches:default end{% endcomment %}
                              {% elsif settings.product_card_color_option == 'count' %}
                                <div class="cross-sell-card__colors-available">
                                  {{ 'templates.cart.recommendations.colors_available' | t: count: color_array.size  }}
                                </div>
                              {% endif %}
                            {% endif %}
                            <div class="cross-sell-card__buttons {% if product_label %}cross-sell-card__buttons--has-label{%- endif -%}">
                              {{ product_label }}
                      
                              {% assign atc_text = 'templates.cart.recommendations.add_to_cart' | t %}
                              {% comment %}Component button:default begin{% endcomment %}
                              {% liquid
                                assign style_89f7c1f9 = style
                                assign style = 'text'
                                assign size_89f7c1f9 = size
                                assign size = 'small'
                                assign text_89f7c1f9 = text
                                assign text = atc_text
                                assign attributes_89f7c1f9 = attributes
                                assign attributes = 'data-cross-sell-card-atc'
                              %}
                              {% comment %}
                                @param style [Required]
                                  This is the style of the button: primary, secondary, tertiary, or text. Default primary.
                              
                                @param size [Required]
                                  This defines the size of the button: small, medium, or large. Default medium.
                              
                                @param text [Required]
                                  This is the text to be included in the button.
                              
                                @param attributes [Optional]
                                  This will include any additional attributes that the button needs. For example, aria-controls.
                              {% endcomment %}
                              
                              <button
                                data-component="button"
                                data-component-type="component"
                                {% if tag != blank %}data-component-tag="{{ tag }}"
                                {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                                {{ attributes }}
                              >
                                {{ text }}
                              </button>
                              
                              {% liquid
                                assign style = style_89f7c1f9
                                assign style_89f7c1f9 = nil
                                assign size = size_89f7c1f9
                                assign size_89f7c1f9 = nil
                                assign text = text_89f7c1f9
                                assign text_89f7c1f9 = nil
                                assign attributes = attributes_89f7c1f9
                                assign attributes_89f7c1f9 = nil
                              %}
                              {% comment %}Component button:default end{% endcomment %}
                            </div>
                          </div>
                          <div
                            class="cross-sell-card__form hidden"
                            data-cross-sell-card-form
                          >
                            {% comment %}Component variant-selector:default begin{% endcomment %}
                            {% liquid
                              assign product_f606864f = product
                              assign product = cross_sell_product
                              assign selected_variant_f606864f = selected_variant
                              assign selected_variant = variant
                            %}
                            {% comment %}
                              Display variant options for a product
                            
                              @param product
                                The product object
                            
                              @param selected_variant
                                The selected variant object
                            
                              @param form_id
                                The associated form ID
                            {% endcomment %}
                            
                            <div data-component="variant-selector" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="variant-selector">
                              {% if product.has_only_default_variant %}
                                <input
                                  class="variant-selector__variants variant-selector__variants--default"
                                  name="id"
                                  {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                                  type="hidden"
                                  value="{{ product.variants.first.id }}"
                                  data-variants
                                >
                              {% else %}
                                <label class="variant-selector__label">
                                  {{ 'product.variants.options' | t }}
                            
                                  <select
                                    class="variant-selector__variants"
                                    name="id"
                                    {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                                    data-variants
                                  >
                                    <option
                                      value=""
                                      disabled
                                      {% if selected_variant == blank %}selected{% endif %}
                                    >
                                      {{ 'product.variants.choose_variant' | t }}
                                    </option>
                                    {% for variant in product.variants %}
                                      <option
                                        {% if selected_variant and selected_variant.id == variant.id %}selected{% endif %}
                                        value="{{ variant.id }}"
                                        {% unless variant.available %}disabled{% endunless %}
                                      >
                                        {{ variant.title }} - {{ variant.price | money }}
                                      </option>
                                    {% endfor %}
                                  </select>
                                </label>
                              {% endif %}
                            </div>
                            
                            {% liquid
                              assign product = product_f606864f
                              assign product_f606864f = nil
                              assign selected_variant = selected_variant_f606864f
                              assign selected_variant_f606864f = nil
                            %}
                            {% comment %}Component variant-selector:default end{% endcomment %}
                            {% comment %}Component options-selector:default begin{% endcomment %}
                            {% liquid
                              assign product_8b1eac24 = product
                              assign product = cross_sell_product
                              assign product_option_style_8b1eac24 = product_option_style
                              assign product_option_style = 'dropdowns'
                              assign sold_out_options_8b1eac24 = sold_out_options
                              assign sold_out_options = 'hidden'
                              assign swatches_enable_8b1eac24 = swatches_enable
                              assign swatches_enable = false
                              assign selected_variant_8b1eac24 = selected_variant
                              assign selected_variant = variant
                            %}
                            {% comment %}
                              Display variant options for a product
                            
                              @param product
                                The product object
                            
                              @param product_option_style
                            
                              @param sold_out_options
                            
                              @param swatches_enable
                            
                              @param swatches_option_style
                            
                              @param selected_variant
                                The selected variant object
                            {% endcomment %}
                            
                            {% comment %}UUID options_selector_id begin{% endcomment %}
                            {% assign options_selector_id = 'e685d58d-89bc-4a58-aabc-47d7a21df51f' %}
                            {% comment %}UUID options_selector_id end{% endcomment %}
                            {% liquid
                              assign style = product_option_style
                              assign sold_out_options = sold_out_options
                              assign enable_swatches = swatches_enable
                              assign show_variant_images = false
                              if swatches_option_style == 'variant_image'
                                assign show_variant_images = true
                              endif
                            %}
                            
                            <div
                              data-component="options-selector"
                              data-component-type="component"
                              {% if tag != blank %}data-component-tag="{{ tag }}"
                              {% endif %}class="options-selector"
                              {% if sold_out_options == 'disabled' %}data-disable-unavailable{% endif %}
                              {% if sold_out_options == 'hidden' %}data-remove-unavailable{% endif %}
                              {% if product.has_only_default_variant %}hidden{% endif %}
                            >
                              <script
                                type="application/json"
                                data-component-data
                              >
                                {
                                  "disable_unavailable": {% if sold_out_options == 'disabled' %}true{% else %}false{% endif %},
                                  "remove_unavailable": {% if sold_out_options == 'hidden' %}true{% else %}false{% endif %}
                                }
                              </script>
                            
                              {% for option in product.options_with_values %}
                                {% assign input_id = options_selector_id | append: '-' | append: forloop.index %}
                                {% assign option_index = forloop.index0 %}
                                {% assign show_swatches = false %}
                                {% if enable_swatches and option.name == 'Color' %}
                                  {% assign show_swatches = true %}
                                {% endif %}
                            
                                {% if style == 'select' and show_swatches == false %}
                                  {% comment %}Component option-dropdown:default begin{% endcomment %}
                                  {% comment %}
                                    Display option as a select
                                  
                                    @param option [Required]
                                      The option to display
                                  
                                    @param input_id [Required]
                                      The option id to apply to the label and input
                                  
                                    @param selected_variant [Optional]
                                      The selected variant to optionally default to
                                  {% endcomment %}
                                  
                                  <div data-component="option-dropdown" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="option-dropdown">
                                    <script
                                      type="application/json"
                                      data-component-data
                                    >
                                      {
                                        "chosen_option": {{ option.name | json }},
                                        "choose_option": {{ 'product.options.choose_option' | t: option: option.name | json }},
                                        "position": {{ option.position | json }}
                                      }
                                    </script>
                                  
                                    {% capture options %}
                                      {% unless selected_variant %}
                                        <option
                                          value=""
                                          disabled
                                          selected
                                        >
                                          {{ 'product.options.choose_option' | t: option: option.name }}
                                        </option>
                                      {% endunless %}
                                      {% for value in option.values %}
                                        <option
                                          value="{{ value | escape }}"
                                          {% if selected_variant and option.selected_value == value %}selected{% endif %}
                                        >
                                          {{ value }}
                                        </option>
                                      {% endfor %}
                                    {% endcapture %}
                                    {% liquid
                                      assign label_text = 'product.options.choose_option' | t: option: option.name
                                  
                                      if selected_variant
                                        assign label_text = option.name
                                      endif
                                    %}
                                    {% comment %}Component input-select:default begin{% endcomment %}
                                    {% comment %}
                                      @param label_text [Required]
                                        The text for the label to be included.
                                    
                                      @param options [Required]
                                        The list of options to include in the select.
                                    
                                      @param form_id [Optional]
                                        The form id to associate with
                                    
                                      @param input_id [Optional]
                                        The option id to apply to the label and input
                                    
                                      @param field_name [Optional]
                                        The field name for the form. Will be used for the "name" attribute.
                                    
                                      @param attributes [Optional]
                                        Additional attributes to append to the input field.
                                    {% endcomment %}
                                    
                                    {% if input_id == blank %}
                                      {% comment %}UUID input_id begin{% endcomment %}
                                      {% assign input_id = '7fde3c00-f467-4300-a763-8c080a23e87e' %}
                                      {% comment %}UUID input_id end{% endcomment %}
                                    {% endif %}
                                    
                                    <div data-component="input-select" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="input-select">
                                      <label class="input-select__label" for="{{ input_id }}" data-label>{{ label_text }}</label>
                                      <div class="input-select__wrapper">
                                        <select
                                          id="{{ input_id }}"
                                          class="input-select__select"
                                          {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                                          {% if field_name != blank %}name="{{ field_name }}"{% endif %}
                                          {{ attributes }}
                                          data-input
                                        >
                                          {{ options }}
                                        </select>
                                      </div>
                                    </div>
                                    
                                    {% comment %}Component input-select:default end{% endcomment %}
                                  </div>
                                  
                                  {% comment %}Component option-dropdown:default end{% endcomment %}
                                {% else %}
                                  {% comment %}Component option-selectable-boxes:default begin{% endcomment %}
                                  {% comment %}
                                    Display option as a selectable boxes, optionally as swatches
                                  
                                    @param option [Required]
                                      The option to display
                                  
                                    @param product [Required]
                                      The product object
                                  
                                    @param input_id [Required]
                                      The option id to apply to the label and input
                                  
                                    @param selected_variant [Optional]
                                      The selected variant to optionally default to
                                  
                                    @param show_swatches [Optional]
                                      Whether to display fieldset as swatches instead of radios
                                  
                                    @param show_variant_images [Optional]
                                      Whether to display variant images inside of swatch
                                  {% endcomment %}
                                  <div
                                    data-component="option-selectable-boxes"
                                    data-component-type="component"
                                    {% if tag != blank %}data-component-tag="{{ tag }}"
                                    {% endif %}class="option-selectable-boxes"
                                  >
                                    <script
                                      type="application/json"
                                      data-component-data
                                    >
                                      {
                                        "chosen_option": {{ 'product.options.chosen_option_html' | t: option: option.name, value: '|value|' | json }},
                                        "choose_option": {{ 'product.options.choose_option' | t: option: option.name | json }},
                                        "position": {{ option.position | json }}
                                      }
                                    </script>
                                  
                                    {% capture values %}
                                      {% liquid
                                        assign group_name = option.name | append: section.id | url_encode
                                  
                                        if show_swatches and show_variant_images
                                          comment
                                            The following builds out several variables that are used within this and other sub-components:
                                              - option_value_array which contains the names of all of the option value variants for this product
                                              - variant_indices_array which contains an the indices of the variants which are in the option_value_array
                                          endcomment
                                  
                                          assign option_key =  'option' | append: option.position
                                          assign option_value_variants_added = '|'
                                          assign variant_indices_string = ''
                                  
                                          for next_variant in product.variants
                                            assign search_string = '|' | append: next_variant[option_key] | append: '|'
                                            unless option_value_variants_added contains search_string
                                              if next_variant.featured_image != blank
                                                assign option_value_variants_added = option_value_variants_added | append: next_variant[option_key] | append: '|'
                                                assign variant_indices_string = variant_indices_string | append: '|' | append: forloop.index0
                                              endif
                                            endunless
                                          endfor
                                  
                                          assign option_value_array = option_value_variants_added | remove_first: '|' | split: '|'
                                          assign variant_indices_array = variant_indices_string | remove_first: '|' | split: '|'
                                        endif
                                      %}
                                  
                                      {% for value in option.values %}
                                        {% liquid
                                          assign value_input_id = input_id | append: '-' | append: forloop.index
                                          assign checked = false
                                  
                                          if selected_variant and option.selected_value == value
                                            assign checked = true
                                          endif
                                        %}
                                  
                                        {% if show_swatches %}
                                          {% liquid
                                            assign image = blank
                                            if show_variant_images
                                              for option_value in option_value_array
                                                if option_value == value
                                                  assign variant_index = variant_indices_array[forloop.index0] | times: 1
                                                  assign image = product.variants[variant_index].featured_image
                                                  break
                                                endif
                                              endfor
                                            endif
                                          %}
                                          {% comment %}Component input-swatch:default begin{% endcomment %}
                                          {% liquid
                                            assign label_text_3e2ee5a0 = label_text
                                            assign label_text = value
                                            assign input_value_3e2ee5a0 = input_value
                                            assign input_value = value
                                            assign input_id_3e2ee5a0 = input_id
                                            assign input_id = value_input_id
                                          %}
                                          {% comment %}
                                            @param label_text [Required]
                                              The text for the label to be included.
                                          
                                            @param group_name [Required]
                                              The group name the radio belongs to.
                                          
                                            @param input_value [Required]
                                              The input value.
                                          
                                            @param input_id [Optional]
                                              The option id to apply to the label and input
                                          
                                            @param attributes [Optional]
                                              Additional attributes to append to the input field.
                                          
                                            @param image [Optional]
                                              Image to display as swatch
                                          {% endcomment %}
                                          
                                          {% if input_id == blank %}
                                            {% comment %}UUID input_id begin{% endcomment %}
                                            {% assign input_id = 'c79936cd-a4ca-4dce-bd7b-8b31b5148524' %}
                                            {% comment %}UUID input_id end{% endcomment %}
                                          {% endif %}
                                          {% liquid
                                            assign required = required | default: false
                                            assign disabled = disabled | default: false
                                            assign checked = checked | default: false
                                            assign unavailable = unavailable | default: false
                                          %}
                                          
                                          <div
                                            data-component="input-swatch"
                                            data-component-type="component"
                                            {% if tag != blank %}data-component-tag="{{ tag }}"
                                            {% endif %}class="
                                              input-swatch
                                              input-swatch__fill--{{ settings.swatch_shape }}
                                            "
                                            {% if disabled %}data-disabled{% endif %}
                                            {% if checked %}data-checked{% endif %}
                                            {% if unavailable %}data-unavailable{% endif %}
                                          >
                                            <input
                                              id="{{ input_id }}"
                                              class="input-swatch__input"
                                              type="radio"
                                              name="{{ group_name }}"
                                              value="{{ input_value }}"
                                              tabindex="0"
                                              aria-label="{{ input_value | escape }}"
                                              {% if required %}required{% endif %}
                                              {% if disabled %}disabled{% endif %}
                                              {% if checked %}checked{% endif %}
                                              {{ attributes }}
                                              data-input
                                            >
                                          
                                            <label class="input-swatch__label visually-hidden" for="{{ input_id }}">{{ label_text }}</label>
                                          
                                            {% comment %}Component swatch:default begin{% endcomment %}
                                            {% liquid
                                              assign color_name_43b67724 = color_name
                                              assign color_name = value
                                              assign variant_image_43b67724 = variant_image
                                              assign variant_image = image
                                            %}
                                            {% comment %}
                                              @param color_name {String} [Required]
                                                Color name for which to find a suitable background
                                            
                                              @param variant_image {Boolean} [Optional]
                                                Will display a this variant image, instead of a swatch color.
                                            
                                              @param show_tooltip {Booleal} [Optional]
                                                If true, will show tooltip on hover of the swatch.
                                            {% endcomment %}
                                            
                                            {%- assign variant_image = variant_image | default: blank -%}
                                            
                                            {%- assign swatch_color = blank -%}
                                            {%- assign swatch_image = blank -%}
                                            {%- assign custom_colors = settings.swatches_custom_colors -%}
                                            
                                            {% comment %} First look for a defined custom color {% endcomment %}
                                            {%- assign custom_colors = custom_colors | newline_to_br | strip_newlines | split: '<br />' -%}
                                            {%- assign swatch_search_color = color_name | downcase -%}
                                            {%- for custom_entry in custom_colors -%}
                                              {%- assign custom_color = custom_entry | split: ':' -%}
                                              {%- assign custom_color_name = custom_color[0] | strip | downcase -%}
                                              {%- assign custom_color_value = custom_color[1] | strip -%}
                                              {%- if swatch_search_color == custom_color_name -%}
                                                {% assign swatch_color = custom_color_value %}
                                                {%- break -%}
                                              {%- endif -%}
                                            {%- endfor -%}
                                            
                                            {% comment %} Otherwise default to the raw color name, which will either be a
                                            valid named HTML color and displayed as such, or will be ignored by the browser. {% endcomment %}
                                            {%- if swatch_color == blank -%}
                                              {% assign swatch_color = color_name | replace: " ", "" | handleize %}
                                            {%- endif -%}
                                            
                                            {% comment %} Use a variant image for the swatch if one exists. {% endcomment %}
                                            {%- if variant_image != blank -%}
                                              {% assign swatch_image = variant_image %}
                                            {%- else -%}
                                              {% comment %} If not using variant images, look for a image that matches the color name in the theme's files. {% endcomment %}
                                              {% assign swatch_file_name = color_name | downcase | handleize | append: '.png' %}
                                              {%- if images[swatch_file_name] != blank -%}
                                                {%- assign swatch_image = images[swatch_file_name] -%}
                                              {%- endif -%}
                                            {%- endif -%}
                                            
                                            <div
                                              data-component="swatch"
                                              data-component-type="component"
                                              {% if tag != blank %}data-component-tag="{{ tag }}"
                                              {% endif %}class="swatch"
                                              {% if swatch_image == blank %}
                                                style="--swatch-color: {{ swatch_color }};"
                                              {% endif %}
                                            >
                                              <span class="swatch__label {% unless show_tooltip %}visually-hidden{% endunless %}">{{ color_name }}</span>
                                              <div
                                                class="
                                                  swatch__fill
                                                  swatch__fill--{{ settings.swatch_shape }}
                                                "
                                              >
                                                {% if swatch_image != blank %}
                                                  {% comment %}Component lazy-img:default begin{% endcomment %}
                                                  {% render 'lazy-img', img: swatch_image, size: '50x', crop_focus: 'center', lazy: true, canvas: true %}
                                                  {% comment %}Component lazy-img:default end{% endcomment %}
                                                {% endif %}
                                              </div>
                                            </div>
                                            
                                            {% liquid
                                              assign color_name = color_name_43b67724
                                              assign color_name_43b67724 = nil
                                              assign variant_image = variant_image_43b67724
                                              assign variant_image_43b67724 = nil
                                            %}
                                            {% comment %}Component swatch:default end{% endcomment %}
                                          </div>
                                          
                                          {% liquid
                                            assign label_text = label_text_3e2ee5a0
                                            assign label_text_3e2ee5a0 = nil
                                            assign input_value = input_value_3e2ee5a0
                                            assign input_value_3e2ee5a0 = nil
                                            assign input_id = input_id_3e2ee5a0
                                            assign input_id_3e2ee5a0 = nil
                                          %}
                                          {% comment %}Component input-swatch:default end{% endcomment %}
                                        {% else %}
                                          {% comment %}Component input-radio:default begin{% endcomment %}
                                          {% liquid
                                            assign label_text_4a4c28d6 = label_text
                                            assign label_text = value
                                            assign input_value_4a4c28d6 = input_value
                                            assign input_value = value
                                            assign input_id_4a4c28d6 = input_id
                                            assign input_id = value_input_id
                                          %}
                                          {% comment %}
                                            @param label_text [Required]
                                              The text for the label to be included.
                                          
                                            @param group_name [Required]
                                              The group name the radio belongs to.
                                          
                                            @param input_value [Required]
                                              The input value.
                                          
                                            @param input_id [Optional]
                                              The option id to apply to the label and input
                                          
                                            @param required [Optional]
                                              Whether the input is required
                                          
                                            @param disabled [Optional]
                                              Whether the input is disabled
                                          
                                            @param checked [Optional]
                                              Whether the input is checked
                                          
                                            @param unavailable [Optional]
                                              Whether the input is unavailable
                                          
                                            @param attributes [Optional]
                                              Additional attributes to append to the input field.
                                          {% endcomment %}
                                          
                                          {% if input_id == blank %}
                                            {% comment %}UUID input_id begin{% endcomment %}
                                            {% assign input_id = 'ea31b620-42fc-44bc-88e2-b661c948b5c7' %}
                                            {% comment %}UUID input_id end{% endcomment %}
                                          {% endif %}
                                          {% liquid
                                            assign required = required | default: false
                                            assign disabled = disabled | default: false
                                            assign checked = checked | default: false
                                            assign unavailable = unavailable | default: false
                                          %}
                                          
                                          <div
                                            data-component="input-radio"
                                            data-component-type="component"
                                            {% if tag != blank %}data-component-tag="{{ tag }}"
                                            {% endif %}class="input-radio"
                                            {% if disabled %}data-disabled{% endif %}
                                            {% if checked %}data-checked{% endif %}
                                            {% if unavailable %}data-unavailable{% endif %}
                                          >
                                            <input
                                              class="input-radio__input"
                                              id="{{ input_id }}"
                                              type="radio"
                                              name="{{ group_name }}"
                                              value="{{ input_value | escape }}"
                                              tabindex="0"
                                              aria-label="{{ input_value | escape }}"
                                              {% if required %}required{% endif %}
                                              {% if disabled %}disabled{% endif %}
                                              {% if checked %}checked{% endif %}
                                              {{ attributes }}
                                              data-input
                                            >
                                          
                                            <label class="input-radio__label" for="{{ input_id }}">{{ label_text }}</label>
                                          </div>
                                          
                                          {% liquid
                                            assign label_text = label_text_4a4c28d6
                                            assign label_text_4a4c28d6 = nil
                                            assign input_value = input_value_4a4c28d6
                                            assign input_value_4a4c28d6 = nil
                                            assign input_id = input_id_4a4c28d6
                                            assign input_id_4a4c28d6 = nil
                                          %}
                                          {% comment %}Component input-radio:default end{% endcomment %}
                                        {% endif %}
                                      {% endfor %}
                                    {% endcapture %}
                                    {% liquid
                                      assign label_text = 'product.options.choose_option' | t: option: option.name
                                      assign option_value_html = '<span>' | append: option.selected_value | append: '</span>'
                                  
                                      if selected_variant
                                        assign label_text = 'product.options.chosen_option_html' | t: option: option.name, value: option_value_html
                                      endif
                                    %}
                                    {% comment %}Component input-fieldset:default begin{% endcomment %}
                                    {% comment %}
                                      @param label_text [Required]
                                        The text for the label to be included.
                                    
                                      @param values [Required]
                                        The list of values to include in the fieldset.
                                    
                                      @param form_id [Optional]
                                        The form id to associate with
                                    
                                      @param field_name [Optional]
                                        The field name for the form. Will be used for the "name" attribute.
                                    
                                      @param attributes [Optional]
                                        Additional attributes to append to the input field.
                                    {% endcomment %}
                                    
                                    <fieldset
                                      data-component="input-fieldset"
                                      data-component-type="component"
                                      {% if tag != blank %}data-component-tag="{{ tag }}"
                                      {% endif %}class="input-fieldset"
                                      {% unless name == blank %}name="{{ field_name }}"{% endunless %}
                                      {% unless form_id == blank %}form="{{ form_id }}"{% endunless %}
                                      {{ attributes }}
                                    >
                                      <legend class="input-fieldset__legend" data-label>{{ label_text }}</legend>
                                    
                                      <div class="input-fieldset__values">
                                        {{ values }}
                                      </div>
                                    </fieldset>
                                    
                                    {% comment %}Component input-fieldset:default end{% endcomment %}
                                  </div>
                                  
                                  {% comment %}Component option-selectable-boxes:default end{% endcomment %}
                                {% endif %}
                              {% endfor %}
                            </div>
                            
                            {% liquid
                              assign product = product_8b1eac24
                              assign product_8b1eac24 = nil
                              assign product_option_style = product_option_style_8b1eac24
                              assign product_option_style_8b1eac24 = nil
                              assign sold_out_options = sold_out_options_8b1eac24
                              assign sold_out_options_8b1eac24 = nil
                              assign swatches_enable = swatches_enable_8b1eac24
                              assign swatches_enable_8b1eac24 = nil
                              assign selected_variant = selected_variant_8b1eac24
                              assign selected_variant_8b1eac24 = nil
                            %}
                            {% comment %}Component options-selector:default end{% endcomment %}
                            {% comment %}Component buy-buttons:default begin{% endcomment %}
                            {% liquid
                              assign product_5dd7b1ef = product
                              assign product = cross_sell_product
                              assign is_variant_selected_5dd7b1ef = is_variant_selected
                              assign is_variant_selected = true
                              assign selected_variant_5dd7b1ef = selected_variant
                              assign selected_variant = variant
                              assign show_dynamic_checkout_5dd7b1ef = show_dynamic_checkout
                              assign show_dynamic_checkout = false
                              assign exclude_surface_pickup_5dd7b1ef = exclude_surface_pickup
                              assign exclude_surface_pickup = true
                            %}
                            {% comment %}
                              @param product [Required]
                            
                              @param is_variant_selected [Optional]
                            
                              @param selected_variant [Optional]
                            
                              @param form_id [Optional]
                            
                              @param show_dynamic_checkout [Optional]
                            {% endcomment %}
                            
                            <div data-component="buy-buttons" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="buy-buttons">
                              <script
                                type="application/json"
                                data-component-data
                              >
                                {
                                  "unavailable": "{{ 'product.buy_buttons.unavailable' | t }}",
                                  "soldOut": "{{ 'product.buy_buttons.sold_out' | t }}",
                                  "addToCart": "{{ 'product.buy_buttons.add_to_cart' | t }}"
                                }
                              </script>
                              {% capture buy_buttons %}
                                  {% liquid
                                    assign attributes = ''
                                    assign text = ''
                                    assign state = ''
                            
                                    if product == blank
                                      assign text = 'product.buy_buttons.unavailable' | t
                                      assign attributes = 'disabled'
                                      assign state = 'unavailable'
                                    elsif selected_variant
                                      if selected_variant.available
                                        assign text = 'product.buy_buttons.add_to_cart' | t
                                        assign state = 'available'
                                      else
                                        assign text = 'product.buy_buttons.sold_out' | t
                                        assign attributes = 'disabled'
                                        assign state = 'sold out'
                                      endif
                                    elsif is_variant_selected
                                      assign text = 'product.buy_buttons.unavailable' | t
                                      assign attributes = 'disabled'
                                      assign state = 'unavailable'
                                    else
                                      assign text = 'product.buy_buttons.select_variant' | t
                                      assign attributes = 'disabled'
                                    endif
                                  %}
                            
                                  {% comment %}Component button-action:default begin{% endcomment %}
                                  {% liquid
                                    assign style_33913449 = style
                                    assign style = 'primary'
                                    assign size_33913449 = size
                                    assign size = 'medium'
                                  %}
                                  {% comment %}
                                    @param style [Required]
                                      This is the style of the button: primary, secondary, or tertiary. Default primary.
                                  
                                    @param size [Required]
                                      This defines the size of the button: small, medium, or large. Default medium.
                                  
                                    @param text [Required]
                                      This is the text to be included in the button.
                                  
                                    @param attributes [Optional]
                                      This will include any additional attributes that the button needs. For example, aria-controls.
                                  {% endcomment %}
                                  
                                  <button
                                    data-component="button-action"
                                    data-component-type="component"
                                    {% if tag != blank %}data-component-tag="{{ tag }}"
                                    {% endif %}class="button-action button-action--{{ style }} button-action--{{ size }}{% if style == 'primary' or style == 'secondary' %} button-action--shadow{% endif %%}"
                                    aria-busy="false"
                                    aria-live="polite"
                                    {{ attributes }}
                                  >
                                    {{ text }}
                                  </button>
                                  
                                  {% liquid
                                    assign style = style_33913449
                                    assign style_33913449 = nil
                                    assign size = size_33913449
                                    assign size_33913449 = nil
                                  %}
                                  {% comment %}Component button-action:default end{% endcomment %}
                            
                                  {% assign attributes = nil %}
                              {% endcapture %}
                            
                              {% if product != blank %}
                                {% form 'product', product, id: form_id, class: 'buy-buttons__form' %}
                                  {% if show_gift_card_recipient_form and product.gift_card? %}
                                    {% comment %}Component gift-card-recipient-form:default begin{% endcomment %}
                                    {%- liquid
                                      assign checkbox_label = 'gift_card_recipient_form.checkbox_label' | t
                                    
                                      assign email_label = 'gift_card_recipient_form.email_label' | t
                                      assign email_placeholder = 'gift_card_recipient_form.email_placeholder' | t
                                    
                                      assign error_message = 'gift_card_recipient_form.error_message' | t
                                    
                                      assign name_label = 'gift_card_recipient_form.name_label' | t
                                      assign name_placeholder = 'gift_card_recipient_form.name_placeholder' | t
                                    
                                      assign message_label = 'gift_card_recipient_form.message_label' | t
                                      assign message_placeholder = 'gift_card_recipient_form.message_placeholder' | t
                                    
                                      assign max_characters = 200
                                      assign max_characters_message = 'gift_card_recipient_form.max_characters_message' | t: max_characters: max_characters
                                    -%}
                                    
                                    {%- capture email_label_required -%}
                                      {{ email_label }} <span aria-hidden="true">*</span>
                                    {%- endcapture -%}
                                    
                                    <div data-component="gift-card-recipient-form" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="recipient-form" data-recipient-form>
                                      {% comment %}Component input-checkbox:default begin{% endcomment %}
                                      {% liquid
                                        assign form_namespace_ac7e593d = form_namespace
                                        assign form_namespace = 'properties'
                                        assign field_name_ac7e593d = field_name
                                        assign field_name = '__shopify_send_gift_card_to_recipient'
                                        assign label_text_ac7e593d = label_text
                                        assign label_text = checkbox_label
                                        assign attributes_ac7e593d = attributes
                                        assign attributes = 'data-input-checkbox'
                                      %}
                                      {% comment %}
                                        @param label_text [Required]
                                          The text for the label to be included.
                                      
                                        @param form_namespace [Required]
                                          The form's namespace that is used in "name" attribute as form_namespace[field_name].
                                      
                                        @param field_name [Required]
                                          The field name for the form. Will be used for the "name" attribute.
                                      
                                        @param form_id [Optional]
                                      
                                        @param hide_label [Optional]
                                          Hide the label text as an aria-label
                                      
                                        @param field_value [Optional]
                                          The value for the checkbox.
                                      
                                        @param checked [Optional]
                                          Boolean. If true, the checkbox will appear checked.
                                      
                                        @param disabled [Optional]
                                          Boolean. If true, the checkbox will appear disabled.
                                      
                                        @param attributes [Optional]
                                          Additional attributes to append to the input field.
                                      {% endcomment %}
                                      
                                      <div
                                        data-component="input-checkbox"
                                        data-component-type="component"
                                        {% if tag != blank %}data-component-tag="{{ tag }}"
                                        {% endif %}class="
                                          input-checkbox
                                          {% if checked %}input-checkbox--checked{% endif %}
                                          {% if disabled %}input-checkbox--disabled{% endif %}
                                        "
                                      >
                                        {% unless hide_label %}
                                          <label class="input-checkbox__label">
                                            <input
                                              class="input-checkbox__checkbox"
                                              type="checkbox"
                                              name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                                              {% if form_id %}form="{{ form_id }}"{% endif %}
                                              {% if field_value %}value="{{ field_value }}"{% endif %}
                                              {% if checked %}checked{% endif %}
                                              {% if disabled %}disabled{% endif %}
                                              {{ attributes }}
                                            >
                                            {{ label_text }}
                                          </label>
                                        {% else %}
                                          <input
                                            class="input-checkbox__checkbox"
                                            type="checkbox"
                                            name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                                            {% if form_id %}form="{{ form_id }}"{% endif %}
                                            {% if field_value %}value="{{ field_value }}"{% endif %}
                                            {% if checked %}checked{% endif %}
                                            {% if disabled %}disabled{% endif %}
                                            aria-label="{{ label_text }}"
                                            {{ attributes }}
                                          >
                                        {% endunless %}
                                      </div>
                                      
                                      {% liquid
                                        assign form_namespace = form_namespace_ac7e593d
                                        assign form_namespace_ac7e593d = nil
                                        assign field_name = field_name_ac7e593d
                                        assign field_name_ac7e593d = nil
                                        assign label_text = label_text_ac7e593d
                                        assign label_text_ac7e593d = nil
                                        assign attributes = attributes_ac7e593d
                                        assign attributes_ac7e593d = nil
                                      %}
                                      {% comment %}Component input-checkbox:default end{% endcomment %}
                                    
                                      <div class="recipient-form__fields">
                                        {% comment %}Component input-email:default begin{% endcomment %}
                                        {% liquid
                                          assign form_namespace_c44091f8 = form_namespace
                                          assign form_namespace = 'properties'
                                          assign field_name_c44091f8 = field_name
                                          assign field_name = 'Recipient email'
                                          assign input_class_c44091f8 = input_class
                                          assign input_class = 'recipient-form__email'
                                          assign input_id_c44091f8 = input_id
                                          assign input_id = 'recipient-form__email'
                                          assign label_text_c44091f8 = label_text
                                          assign label_text = email_label_required
                                          assign placeholder_c44091f8 = placeholder
                                          assign placeholder = email_placeholder
                                          assign attributes_c44091f8 = attributes
                                          assign attributes = 'data-input data-input-email'
                                        %}
                                        {% comment %}
                                          @param form [Required]
                                            The form that the input lives in.
                                        
                                          @param label_text [Required]
                                            The text for the label to be included.
                                        
                                          @param form_namespace [Required]
                                            The form's namespace that is used in "name" attribute as form_namespace[field_name].
                                        
                                          @param field_name [Required]
                                            The field name for the form. Will be used for the "name" attribute.
                                        
                                          @param input_class [Optional]
                                            The class for the input field.
                                        
                                          @param input_id [Optional]
                                            The type of field that is being rendered. Usually text, password, number, etc.
                                        
                                          @param placeholder [Optional]
                                            The placeholder for the input field.
                                        
                                          @param attributes [Optional]
                                            Additional attributes to append to the input field.
                                        {% endcomment %}
                                        
                                        {% if input_id == blank %}
                                          {% comment %}UUID input_id begin{% endcomment %}
                                          {% assign input_id = 'edb47095-9b5a-4c60-9250-72e694c48a79' %}
                                          {% comment %}UUID input_id end{% endcomment %}
                                        {% endif %}
                                        
                                        <div data-component="input-email" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="input-field">
                                          <label for="{{ input_id }}">{{ label_text }}</label>
                                          <input
                                            class="{{ input_class }}"
                                            id="{{ input_id }}"
                                            type="email"
                                            name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                                            value="{{ form[field_name] }}"
                                            placeholder="{{ placeholder }}"
                                            autocapitalize="off"
                                            autocorrect="off"
                                            spellcheck="false"
                                            {% if form.errors contains 'email' %}
                                              aria-invalid="true"
                                            {% endif %}
                                            {{ attributes }}
                                          >
                                        </div>
                                        
                                        {% liquid
                                          assign form_namespace = form_namespace_c44091f8
                                          assign form_namespace_c44091f8 = nil
                                          assign field_name = field_name_c44091f8
                                          assign field_name_c44091f8 = nil
                                          assign input_class = input_class_c44091f8
                                          assign input_class_c44091f8 = nil
                                          assign input_id = input_id_c44091f8
                                          assign input_id_c44091f8 = nil
                                          assign label_text = label_text_c44091f8
                                          assign label_text_c44091f8 = nil
                                          assign placeholder = placeholder_c44091f8
                                          assign placeholder_c44091f8 = nil
                                          assign attributes = attributes_c44091f8
                                          assign attributes_c44091f8 = nil
                                        %}
                                        {% comment %}Component input-email:default end{% endcomment %}
                                    
                                        {% comment %}Component notification:default begin{% endcomment %}
                                        {% liquid
                                          assign type_adbe6457 = type
                                          assign type = 'error'
                                          assign content_adbe6457 = content
                                          assign content = error_message
                                          assign hidden_adbe6457 = hidden
                                          assign hidden = true
                                        %}
                                        {%- comment -%}
                                          @param content [Required]
                                            The content that goes in the notification banner
                                        
                                          @param type [Required]
                                            The type of notification banner ('error' or 'success')
                                        
                                          @param hidden [Optional]
                                            Whether the notification should be hidden
                                        {%- endcomment -%}
                                        
                                        <div
                                          data-component="notification"
                                          data-component-type="component"
                                          {% if tag != blank %}data-component-tag="{{ tag }}"
                                          {% endif %}class="
                                            notification
                                            notification--{{ type }}
                                          "
                                          {% if type == 'error' %}
                                            role="alert"
                                          {% else %}
                                            role="status"
                                          {% endif %}
                                          {% if hidden %}hidden{% endif %}
                                        >
                                          {{ content }}
                                        </div>
                                        
                                        {% liquid
                                          assign type = type_adbe6457
                                          assign type_adbe6457 = nil
                                          assign content = content_adbe6457
                                          assign content_adbe6457 = nil
                                          assign hidden = hidden_adbe6457
                                          assign hidden_adbe6457 = nil
                                        %}
                                        {% comment %}Component notification:default end{% endcomment %}
                                    
                                        {% comment %}Component input-field:default begin{% endcomment %}
                                        {% liquid
                                          assign form_namespace_fe2af6a1 = form_namespace
                                          assign form_namespace = 'properties'
                                          assign field_name_fe2af6a1 = field_name
                                          assign field_name = 'Recipient name'
                                          assign input_id_fe2af6a1 = input_id
                                          assign input_id = 'recipient-form__name'
                                          assign input_type_fe2af6a1 = input_type
                                          assign input_type = 'text'
                                          assign label_text_fe2af6a1 = label_text
                                          assign label_text = name_label
                                          assign placeholder_fe2af6a1 = placeholder
                                          assign placeholder = name_placeholder
                                          assign attributes_fe2af6a1 = attributes
                                          assign attributes = 'data-input'
                                        %}
                                        {% comment %}
                                          @param form [Required]
                                            The form that the input lives in.
                                        
                                          @param form_namespace [Required]
                                            The form's namespace that is used in "name" attribute as form_namespace[field_name].
                                        
                                          @param field_name [Required]
                                            The field name for the form. Will be used for the "name" attribute.
                                        
                                          @param input_type [Required]
                                            The type of field that is being rendered. Usually text, password, number, etc.
                                        
                                          @param input_id [Optional]
                                            The type of field that is being rendered. Usually text, password, number, etc.
                                        
                                          @param label_text [Required]
                                            The text for the label to be included.
                                        
                                          @param placeholder [Optional]
                                            The placeholder for the input field.
                                        
                                          @param attributes [Optional]
                                            Additional attributes to append to the input field.
                                        {% endcomment %}
                                        
                                        {% if input_id == blank %}
                                          {% comment %}UUID input_id begin{% endcomment %}
                                          {% assign input_id = '7e48a861-fc7f-4847-8d48-788b7366231e' %}
                                          {% comment %}UUID input_id end{% endcomment %}
                                        {% endif %}
                                        
                                        <div data-component="input-field" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="input-field">
                                          <label for="{{ input_id }}">{{ label_text }}</label>
                                          <input
                                            id="{{ input_id }}"
                                            type="{{ input_type }}"
                                            name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                                            value="{{ form[field_name] }}"
                                            placeholder="{{ placeholder }}"
                                            {{ attributes }}
                                          >
                                        </div>
                                        
                                        {% liquid
                                          assign form_namespace = form_namespace_fe2af6a1
                                          assign form_namespace_fe2af6a1 = nil
                                          assign field_name = field_name_fe2af6a1
                                          assign field_name_fe2af6a1 = nil
                                          assign input_id = input_id_fe2af6a1
                                          assign input_id_fe2af6a1 = nil
                                          assign input_type = input_type_fe2af6a1
                                          assign input_type_fe2af6a1 = nil
                                          assign label_text = label_text_fe2af6a1
                                          assign label_text_fe2af6a1 = nil
                                          assign placeholder = placeholder_fe2af6a1
                                          assign placeholder_fe2af6a1 = nil
                                          assign attributes = attributes_fe2af6a1
                                          assign attributes_fe2af6a1 = nil
                                        %}
                                        {% comment %}Component input-field:default end{% endcomment %}
                                    
                                        {% comment %}Component input-textarea:default begin{% endcomment %}
                                        {% liquid
                                          assign form_namespace_a422d542 = form_namespace
                                          assign form_namespace = 'properties'
                                          assign field_name_a422d542 = field_name
                                          assign field_name = 'Message'
                                          assign input_id_a422d542 = input_id
                                          assign input_id = 'recipient-form__message'
                                          assign label_text_a422d542 = label_text
                                          assign label_text = message_label
                                          assign placeholder_a422d542 = placeholder
                                          assign placeholder = message_placeholder
                                          assign rows_a422d542 = rows
                                          assign rows = 5
                                          assign maxlength_a422d542 = maxlength
                                          assign maxlength = max_characters
                                        %}
                                        {% comment %}
                                          @param label_text [Required]
                                            The text for the label to be included.
                                        
                                          @param form_namespace [Required]
                                            The form's namespace that is used in "name" attribute as form_namespace[field_name].
                                        
                                          @param field_name [Required]
                                            The field name for the form. Will be used for the "name" attribute.
                                        
                                          @param form_id [Optional]
                                            The form that the input lives in.
                                        
                                          @param input_id [Optional]
                                            The type of field that is being rendered. Usually text, password, number, etc.
                                        
                                          @param input_text [Optional]
                                            The initial text to display within the textarea
                                        
                                          @param placeholder [Optional]
                                            The placeholder for the input field.
                                        
                                          @param attributes [Optional]
                                            Additional attributes to append to the input field.
                                        
                                          @param rows [Optional]
                                            The number of rows for the textarea (height)
                                        
                                          @param columns [Optional]
                                            The number of columns for the textarea (width)
                                        
                                          @param maxlength [Optional]
                                            The maximum number of characters for the textarea
                                        {% endcomment %}
                                        
                                        {% if input_id == blank %}
                                          {% comment %}UUID input_id begin{% endcomment %}
                                          {% assign input_id = '3b928338-f6ec-433e-bd6d-59506adb1654' %}
                                          {% comment %}UUID input_id end{% endcomment %}
                                        {% endif %}
                                        
                                        <div data-component="input-textarea" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="textarea">
                                          <label for="{{ input_id }}">{{ label_text }}</label>
                                          <textarea
                                            id="{{ input_id }}"
                                            name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                                            {% if form_id %}
                                              form="{{ form_id }}"
                                            {% endif %}
                                            {% if rows %}rows="{{ rows }}"{% endif %}
                                            {% if columns %}cols="{{ columns }}"{% endif %}
                                            {% if maxlength %}maxlength="{{ maxlength }}"{% endif %}
                                            placeholder="{{ placeholder }}"
                                            {{ attributes }}
                                            data-input
                                          >
                                            {%- if input_text != blank -%}{{- input_text -}}{%- endif -%}
                                          </textarea>
                                        </div>
                                        
                                        {% liquid
                                          assign form_namespace = form_namespace_a422d542
                                          assign form_namespace_a422d542 = nil
                                          assign field_name = field_name_a422d542
                                          assign field_name_a422d542 = nil
                                          assign input_id = input_id_a422d542
                                          assign input_id_a422d542 = nil
                                          assign label_text = label_text_a422d542
                                          assign label_text_a422d542 = nil
                                          assign placeholder = placeholder_a422d542
                                          assign placeholder_a422d542 = nil
                                          assign rows = rows_a422d542
                                          assign rows_a422d542 = nil
                                          assign maxlength = maxlength_a422d542
                                          assign maxlength_a422d542 = nil
                                        %}
                                        {% comment %}Component input-textarea:default end{% endcomment %}
                                    
                                        <div class="recipient-form__max-characters-message">
                                          <small>
                                            {{- max_characters_message -}}
                                          </small>
                                        </div>
                                      </div>
                                    </div>
                                    
                                    {% comment %}Component gift-card-recipient-form:default end{% endcomment %}
                                  {% endif %}
                            
                                  <div class="buy-buttons__buttons{% if show_dynamic_checkout %} buy-buttons__buttons--dynamic-checkout{% endif %}">
                                    {% comment %}Component notification:default begin{% endcomment %}
                                    {% liquid
                                      assign type_8b8d7645 = type
                                      assign type = 'error'
                                      assign contents_8b8d7645 = contents
                                      assign contents = ''
                                      assign hidden_8b8d7645 = hidden
                                      assign hidden = true
                                    %}
                                    {%- comment -%}
                                      @param content [Required]
                                        The content that goes in the notification banner
                                    
                                      @param type [Required]
                                        The type of notification banner ('error' or 'success')
                                    
                                      @param hidden [Optional]
                                        Whether the notification should be hidden
                                    {%- endcomment -%}
                                    
                                    <div
                                      data-component="notification"
                                      data-component-type="component"
                                      {% if tag != blank %}data-component-tag="{{ tag }}"
                                      {% endif %}class="
                                        notification
                                        notification--{{ type }}
                                      "
                                      {% if type == 'error' %}
                                        role="alert"
                                      {% else %}
                                        role="status"
                                      {% endif %}
                                      {% if hidden %}hidden{% endif %}
                                    >
                                      {{ content }}
                                    </div>
                                    
                                    {% liquid
                                      assign type = type_8b8d7645
                                      assign type_8b8d7645 = nil
                                      assign contents = contents_8b8d7645
                                      assign contents_8b8d7645 = nil
                                      assign hidden = hidden_8b8d7645
                                      assign hidden_8b8d7645 = nil
                                    %}
                                    {% comment %}Component notification:default end{% endcomment %}
                            
                                    {{ buy_buttons }}
                            
                                    {% if show_dynamic_checkout and is_variant_selected and selected_variant.available %}
                                      {{ form | payment_button }}
                                    {% endif %}
                                  </div>
                                  {% unless exclude_surface_pickup %}
                                    {% comment %}Component surface-pick-up:default begin{% endcomment %}
                                    {% assign pick_up_availabilities = selected_variant.store_availabilities | where: 'pick_up_enabled', true %}
                                    
                                    <div data-component="surface-pick-up" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="surface-pick-up{%- unless selected_variant.available and pick_up_availabilities.size > 0 %} surface-pick-up--hidden{% endunless -%}">
                                      <template data-drawer-header-template>
                                        <h2 class="h4 surface-pick-up-drawer__heading">{{ product.title }}</h2>
                                        {% unless product.has_only_default_variant %}<span class="surface-pick-up-drawer__subheading">{{ selected_variant.title }}</span>{% endunless %}
                                      </template>
                                    
                                      <template data-drawer-template>
                                        {% comment %}Component surface-pick-up-drawer:default begin{% endcomment %}
                                        <div data-component="surface-pick-up-drawer" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="surface-pick-up-drawer">
                                          {% assign pick_up_availabilities = selected_variant.store_availabilities | where: 'pick_up_enabled', true %}
                                          {% if selected_variant.available and pick_up_availabilities.size > 0 %}
                                            {%- assign closest_location_country_code = pick_up_availabilities.first.location.address.country_code -%}
                                            {%- assign imperialSystemCountries = 'US,MM,LR'  | split: ',' -%}
                                            {%- if imperialSystemCountries contains closest_location_country_code -%}
                                              {%- assign unit_system = 'imperial' -%}
                                            {%- else -%}
                                              {%- assign unit_system = 'metric' -%}
                                            {%- endif -%}
                                            <ul class="surface-pick-up-items" role="list">
                                              {% for location in pick_up_availabilities %}
                                                <li
                                                  class="surface-pick-up-item surface-pick-up-item--{% if location.available %}available{% else %}unavailable{% endif %}"
                                                  data-surface-pick-up-item
                                                >
                                                  {% if location.available %}
                                                    <span class="surface-pick-up-item__in-stock-icon">{% comment %}Icon check:default begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="currentColor" stroke-width="1.5" d="m1.47 9.63 4.61 3.768 8.45-9.796"/></svg>
{% comment %}Icon check:default end{% endcomment %}</span>
                                                  {% else %}
                                                    <span class="surface-pick-up-item__out-of-stock-icon">{% comment %}Icon cross:default begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 13 13"><path d="m1.47 2.53 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm4.5 4.5 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm1.06 0 4.5-4.5-1.06-1.06-4.5 4.5 1.06 1.06Zm3.44-5.56-9 9 1.06 1.06 9-9-1.06-1.06Z"/></svg>
{% comment %}Icon cross:default end{% endcomment %}</span>
                                                  {% endif %}
                                        
                                                  <div class="surface-pick-up-item__header">
                                                    <h3 class="surface-pick-up-item__pick-up-location">{{ location.location.name }}</h3>
                                                    <p
                                                      class="surface-pick-up-item__pick-up-distance"
                                                    >
                                                      <span
                                                        data-distance
                                                        data-latitude="{{ location.location.latitude }}"
                                                        data-longitude="{{ location.location.longitude }}"
                                                      >
                                                      </span>
                                                      <span
                                                        data-distance-unit="{{ unit_system }}"
                                                      >
                                                        {%- if unit_system == 'imperial' -%}
                                                          {{ 'store_availability.general.miles' | t }}
                                                        {%- else -%}
                                                          {{ 'store_availability.general.kilometers' | t }}
                                                        {%- endif -%}
                                                      </span>
                                                    </p>
                                                  </div>
                                        
                                                  <div class="surface-pick-up-item__availability">
                                                    {% if location.available %}
                                                      {% assign pick_up_time = location.pick_up_time | downcase %}
                                                      {{ 'store_availability.general.available_for_pick_up_at_time_html' | t: pick_up_time: pick_up_time }}
                                                    {% else %}
                                                      {{ 'store_availability.general.unavailable_for_pick_up_at_time_html' | t }}
                                                    {% endif %}
                                                  </div>
                                        
                                                  <address class="surface-pick-up-item__address-info">
                                                    {{ location.location.address | format_address }}
                                                    {%- if location.location.phone.size > 0 %}
                                                      <a href="tel:{{ location.location.phone }}">{{ location.location.phone }}</a>
                                                    {%- endif -%}
                                                  </address>
                                                </li>
                                              {% endfor %}
                                            </ul>
                                          {% endif %}
                                        </div>
                                        
                                        {% comment %}Component surface-pick-up-drawer:default end{% endcomment %}
                                      </template>
                                    
                                      {% if selected_variant.available and pick_up_availabilities.size > 0 %}
                                        {% assign closest_location = pick_up_availabilities.first %}
                                    
                                        <div class="surface-pick-up-embed surface-pick-up-embed--{% if closest_location.available %}available{% else %}unavailable{% endif %}">
                                          {% if closest_location.available %}
                                            <span class="surface-pick-up-embed__in-stock-icon">{% comment %}Icon check:default begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="currentColor" stroke-width="1.5" d="m1.47 9.63 4.61 3.768 8.45-9.796"/></svg>
{% comment %}Icon check:default end{% endcomment %}</span>
                                          {% else %}
                                            <span class="surface-pick-up-embed__out-of-stock-icon">{% comment %}Icon cross:default begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 13 13"><path d="m1.47 2.53 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm4.5 4.5 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm1.06 0 4.5-4.5-1.06-1.06-4.5 4.5 1.06 1.06Zm3.44-5.56-9 9 1.06 1.06 9-9-1.06-1.06Z"/></svg>
{% comment %}Icon cross:default end{% endcomment %}</span>
                                          {% endif %}
                                    
                                          <div class="surface-pick-up-embed__location-info">
                                            {% if closest_location.available %}
                                              <h3 class="surface-pick-up-embed__location-availability">{{ 'store_availability.general.available_for_pick_up_at_html' | t: location_name: closest_location.location.name }}</h3>
                                              <small class="surface-pick-up-embed__location-pick-up-time">{{ closest_location.pick_up_time }}</small>
                                            {% else %}
                                              <h3 class="surface-pick-up-embed__location-availability">{{ 'store_availability.general.unavailable_for_pick_up_at_html' | t: location_name: closest_location.location.name }}</h3>
                                            {% endif %}
                                          </div>
                                    
                                          {% assign text = 'store_availability.general.view_store_info' | t %}
                                          {% if pick_up_availabilities.size > 1 %}
                                            {% assign text = 'store_availability.general.check_other_stores' | t %}
                                          {% endif %}
                                          {% comment %}Component button:default begin{% endcomment %}
                                          {% liquid
                                            assign style_2786748d = style
                                            assign style = 'text'
                                            assign size_2786748d = size
                                            assign size = 'small'
                                            assign attributes_2786748d = attributes
                                            assign attributes = 'type="button" aria-haspopup="dialog"'
                                          %}
                                          {% comment %}
                                            @param style [Required]
                                              This is the style of the button: primary, secondary, tertiary, or text. Default primary.
                                          
                                            @param size [Required]
                                              This defines the size of the button: small, medium, or large. Default medium.
                                          
                                            @param text [Required]
                                              This is the text to be included in the button.
                                          
                                            @param attributes [Optional]
                                              This will include any additional attributes that the button needs. For example, aria-controls.
                                          {% endcomment %}
                                          
                                          <button
                                            data-component="button"
                                            data-component-type="component"
                                            {% if tag != blank %}data-component-tag="{{ tag }}"
                                            {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                                            {{ attributes }}
                                          >
                                            {{ text }}
                                          </button>
                                          
                                          {% liquid
                                            assign style = style_2786748d
                                            assign style_2786748d = nil
                                            assign size = size_2786748d
                                            assign size_2786748d = nil
                                            assign attributes = attributes_2786748d
                                            assign attributes_2786748d = nil
                                          %}
                                          {% comment %}Component button:default end{% endcomment %}
                                        </div>
                                      {% endif %}
                                    </div>
                                    
                                    {% comment %}Component surface-pick-up:default end{% endcomment %}
                                  {% endunless %}
                                {% endform %}
                              {% else %}
                                <div class="buy-buttons__buttons{% if show_dynamic_checkout %} buy-buttons__buttons--dynamic-checkout{% endif %}">
                                  {{ buy_buttons }}
                                </div>
                              {% endif %}
                            </div>
                            
                            {% liquid
                              assign product = product_5dd7b1ef
                              assign product_5dd7b1ef = nil
                              assign is_variant_selected = is_variant_selected_5dd7b1ef
                              assign is_variant_selected_5dd7b1ef = nil
                              assign selected_variant = selected_variant_5dd7b1ef
                              assign selected_variant_5dd7b1ef = nil
                              assign show_dynamic_checkout = show_dynamic_checkout_5dd7b1ef
                              assign show_dynamic_checkout_5dd7b1ef = nil
                              assign exclude_surface_pickup = exclude_surface_pickup_5dd7b1ef
                              assign exclude_surface_pickup_5dd7b1ef = nil
                            %}
                            {% comment %}Component buy-buttons:default end{% endcomment %}
                      
                            <div class="cross-sell-card__buttons cross-sell-card__buttons--form">
                              {% assign back_text = 'templates.cart.recommendations.back' | t %}
                              {% comment %}Component button:default begin{% endcomment %}
                              {% liquid
                                assign style_2786748d = style
                                assign style = 'text'
                                assign size_2786748d = size
                                assign size = 'small'
                                assign text_2786748d = text
                                assign text = back_text
                                assign attributes_2786748d = attributes
                                assign attributes = 'data-cross-sell-card-back'
                              %}
                              {% comment %}
                                @param style [Required]
                                  This is the style of the button: primary, secondary, tertiary, or text. Default primary.
                              
                                @param size [Required]
                                  This defines the size of the button: small, medium, or large. Default medium.
                              
                                @param text [Required]
                                  This is the text to be included in the button.
                              
                                @param attributes [Optional]
                                  This will include any additional attributes that the button needs. For example, aria-controls.
                              {% endcomment %}
                              
                              <button
                                data-component="button"
                                data-component-type="component"
                                {% if tag != blank %}data-component-tag="{{ tag }}"
                                {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                                {{ attributes }}
                              >
                                {{ text }}
                              </button>
                              
                              {% liquid
                                assign style = style_2786748d
                                assign style_2786748d = nil
                                assign size = size_2786748d
                                assign size_2786748d = nil
                                assign text = text_2786748d
                                assign text_2786748d = nil
                                assign attributes = attributes_2786748d
                                assign attributes_2786748d = nil
                              %}
                              {% comment %}Component button:default end{% endcomment %}
                              {% assign details_text = 'templates.cart.recommendations.product_details' | t %}
                              {% comment %}Component button-link:default begin{% endcomment %}
                              {% liquid
                                assign style_46c5b5e4 = style
                                assign style = 'text'
                                assign size_46c5b5e4 = size
                                assign size = 'small'
                                assign href_46c5b5e4 = href
                                assign href = cross_sell_product.url
                                assign text_46c5b5e4 = text
                                assign text = details_text
                                assign attributes_46c5b5e4 = attributes
                                assign attributes = 'data-cross-sell-card-details-link'
                              %}
                              {% comment %}
                                @param href [Required]
                                  This is the anchor tag for the link button.
                              
                                @param style [Required]
                                  This is the style of the button: primary, secondary, tertiary, or text.
                              
                                @param size [Required]
                                  This defines the size of the button: small, medium, or large.
                              
                                @param text [Required]
                                  This is the text to be included in the button.
                              
                                @param attributes [Optional]
                                  Any additional attributes to add to the button-link tag.
                              {% endcomment %}
                              
                              <a
                                data-component="button-link"
                                data-component-type="component"
                                {% if tag != blank %}data-component-tag="{{ tag }}"
                                {% endif %}class="button-link button-link--{{ style }} button-link--{{ size }}{% if style == 'primary' or style == 'secondary' %} button-link--shadow{% endif %%}"
                                {% if href != blank %}
                                  href="{{ href }}"
                                {% endif %}
                                {{ attributes }}
                              >
                                {{ text }}
                              </a>
                              
                              {% liquid
                                assign style = style_46c5b5e4
                                assign style_46c5b5e4 = nil
                                assign size = size_46c5b5e4
                                assign size_46c5b5e4 = nil
                                assign href = href_46c5b5e4
                                assign href_46c5b5e4 = nil
                                assign text = text_46c5b5e4
                                assign text_46c5b5e4 = nil
                                assign attributes = attributes_46c5b5e4
                                assign attributes_46c5b5e4 = nil
                              %}
                              {% comment %}Component button-link:default end{% endcomment %}
                            </div>
                          </div>
                        </div>
                      </div>
                      
                      
                      {% liquid
                        assign cross_sell_product = cross_sell_product_b77b21f7
                        assign cross_sell_product_b77b21f7 = nil
                      %}
                      {% comment %}Component cross-sell-card:default end{% endcomment %}
                    {% endif %}
                  </li>
                {% endfor %}
              {% else %}
                {% for product_item in (1..limit) %}
                  <li class="product-card-slider__item" data-slider-item>
                    {% comment %}Component product-card:default begin{% endcomment %}
                    {% render 'product-card', product_card_product: nil %}
                    {% comment %}Component product-card:default end{% endcomment %}
                  </li>
                {% endfor %}
              {% endunless %}
            </ul>
          
            {% capture previous_attributes %}
              data-slider-button-previous
              name="previous"
              aria-label="{{ 'general.accessibility.previous_slide' | t }}"
            {% endcapture %}
            {% capture next_attributes %}
              data-slider-button-next
              name="next"
              aria-label="{{ 'general.accessibility.previous_slide' | t }}"
            {% endcapture %}
          
            <div
              class="
                product-card-slider__buttons
                {% if hide_desktop_buttons %}
                  product-card-slider__buttons--desktop-hidden
                {% endif %}
                {% if hide_mobile_buttons %}
                  product-card-slider__buttons--mobile-hidden
                {% endif %}
              "
              data-product-card-slider-buttons
            >
              <div
                class="
                  product-card-slider__button
                  product-card-slider__button--previous
                "
              >
                {% comment %}Component button-floating:default begin{% endcomment %}
                {% liquid
                  assign style_79371124 = style
                  assign style = 'default'
                  assign size_79371124 = size
                  assign size = 'medium'
                  assign icon_79371124 = icon
                  assign icon = 'chevron'
                  assign label_79371124 = label
                  assign label = previous_label
                  assign attributes_79371124 = attributes
                  assign attributes = previous_attributes
                %}
                {% comment %}
                  @param style [Required]
                    This is the style of the button: default, or quiet. Default default.
                
                  @param size [Required]
                    This defines the size of the button: small, medium, or large. Default medium.
                
                  @param icon [Required]
                    This is the icon to be included in the button.
                
                  @param label [Required]
                    The label for the button, which will be read out to a screen reader
                
                  @param attributes [Optional]
                    This will include any additional attributes that the button needs. For example, aria-controls.
                {% endcomment %}
                
                <button
                  data-component="button-floating"
                  data-component-type="component"
                  {% if tag != blank %}data-component-tag="{{ tag }}"
                  {% endif %}class="button-floating button-floating--{{ style }} button-floating--{{ size }} button-floating--{{ icon }}"
                  {{ attributes }}
                >
                  <span class="visually-hidden">{{ label }}</span>
                </button>
                
                {% liquid
                  assign style = style_79371124
                  assign style_79371124 = nil
                  assign size = size_79371124
                  assign size_79371124 = nil
                  assign icon = icon_79371124
                  assign icon_79371124 = nil
                  assign label = label_79371124
                  assign label_79371124 = nil
                  assign attributes = attributes_79371124
                  assign attributes_79371124 = nil
                %}
                {% comment %}Component button-floating:default end{% endcomment %}
              </div>
              <div
                class="
                  product-card-slider__button
                  product-card-slider__button--next
                "
              >
                {% comment %}Component button-floating:default begin{% endcomment %}
                {% liquid
                  assign style_79371124 = style
                  assign style = 'default'
                  assign size_79371124 = size
                  assign size = 'medium'
                  assign icon_79371124 = icon
                  assign icon = 'chevron'
                  assign label_79371124 = label
                  assign label = next_label
                  assign attributes_79371124 = attributes
                  assign attributes = next_attributes
                %}
                {% comment %}
                  @param style [Required]
                    This is the style of the button: default, or quiet. Default default.
                
                  @param size [Required]
                    This defines the size of the button: small, medium, or large. Default medium.
                
                  @param icon [Required]
                    This is the icon to be included in the button.
                
                  @param label [Required]
                    The label for the button, which will be read out to a screen reader
                
                  @param attributes [Optional]
                    This will include any additional attributes that the button needs. For example, aria-controls.
                {% endcomment %}
                
                <button
                  data-component="button-floating"
                  data-component-type="component"
                  {% if tag != blank %}data-component-tag="{{ tag }}"
                  {% endif %}class="button-floating button-floating--{{ style }} button-floating--{{ size }} button-floating--{{ icon }}"
                  {{ attributes }}
                >
                  <span class="visually-hidden">{{ label }}</span>
                </button>
                
                {% liquid
                  assign style = style_79371124
                  assign style_79371124 = nil
                  assign size = size_79371124
                  assign size_79371124 = nil
                  assign icon = icon_79371124
                  assign icon_79371124 = nil
                  assign label = label_79371124
                  assign label_79371124 = nil
                  assign attributes = attributes_79371124
                  assign attributes_79371124 = nil
                %}
                {% comment %}Component button-floating:default end{% endcomment %}
              </div>
            </div>
          </div>
          
          {% liquid
            assign products = products_f6eeb458
            assign products_f6eeb458 = nil
            assign cards_per_group = cards_per_group_f6eeb458
            assign cards_per_group_f6eeb458 = nil
            assign limit = limit_f6eeb458
            assign limit_f6eeb458 = nil
          %}
          {% comment %}Component product-card-slider:default end{% endcomment %}
        </div>
      </section-content>
    </section-wrapper>
  {% endif %}
</section>
{% schema %}
{
  "name": "t:component.product_recommendations.name",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "t:common.text.heading"
    },
    {
      "type": "range",
      "id": "limit",
      "label": "t:component.product_recommendations.limit.label",
      "step": 1,
      "min": 1,
      "max": 5,
      "default": 4
    },
    {
      "type": "select",
      "id": "cards_per_group",
      "label": "t:common.product.products_per_group",
      "options": [
        {
          "value": "3",
          "label": "t:common.product.cards_per_group_3"
        },
        {
          "value": "4",
          "label": "t:common.product.cards_per_group_4"
        },
        {
          "value": "5",
          "label": "t:common.product.cards_per_group_5"
        }
      ]
    }
  ]
}
{% endschema %}