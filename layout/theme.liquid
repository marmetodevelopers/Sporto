<!DOCTYPE html>
<html class="no-js no-touch" lang="{{ request.locale.iso_code }}">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="theme-color" content="">
  <link rel="canonical" href="{{ canonical_url }}">
  <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>

  {% unless settings.type_body_font.system? and settings.type_header_font.system? %}
    <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
  {% endunless %}

  <link rel="preload" href="{{ 'core.css' | asset_url }}" as="style" crossorigin>
  <link rel="preload" href="{{ 'components.css' | asset_url }}" as="style" crossorigin>

  {% if page_description %}
    <meta name="description" content="{{ page_description | escape }}" />
  {% endif %}

  <title>{{ page_title }}</title>

  {% comment %}Version:components 2.0.0{% endcomment %}
  {% comment %}Version:icons 1.1.0{% endcomment %}

  {% if settings.favicon != blank %}
    <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png">
  {% endif %}

  {% assign twitter_handle = settings.social_twitter_link | split: 'twitter.com/' | last %}
  {% comment %}Inject @pixelunion/shopify-social-meta/social-open-graph begin{% endcomment %}
  {% liquid
    assign og_title = page_title | default: shop.name
    assign og_url = canonical_url | default: request.origin
    assign og_type = 'website'
    assign og_description = page_description | default: shop.description | default: shop.name
    assign og_image = page_image
    assign og_image_tags = ''
  
    if request.page_type == 'product'
      assign og_type = 'product'
    elsif request.page_type == 'article'
      assign og_type = 'article'
    elsif request.page_type == 'password'
      assign og_url = request.origin
    endif
  %}
  
  {% if og_image != blank %}
    {% capture og_image_tags %}
      {% comment %}
        LinkedIn requires 1200 (w) x 627 (h) pixels minimum to share
        https://www.linkedin.com/help/linkedin/answer/46687/making-your-website-shareable-on-linkedin
        Facebook suggests 1200 (w) x 630 (h) pixels minimum
        https://developers.facebook.com/docs/sharing/best-practices/
      {% endcomment %}
      {% assign width = 1200 %}
      {% assign height = width | divided_by: og_image.aspect_ratio | round %}
  
      {% if height < 630 %}
        {% assign height = 630 %}
        {% assign width = height | times: og_image.aspect_ratio | round %}
      {% endif %}
      {% capture request_url %}{{ width }}x{{ height }}{% endcapture %}
      <meta
        property="og:image"
        content="https:{{ og_image | img_url: request_url }}"
      />
      <meta
        property="og:image:secure_url"
        content="https:{{ og_image | img_url: request_url }}"
      />
      <meta property="og:image:width" content="{{ width }}" />
      <meta property="og:image:height" content="{{ height }}" />
      {% assign image_alt = og_image.alt %}
      {% if og_image.alt == blank %}
        {% assign image_alt = 'Social media image' %}
      {% endif %}
      <meta property="og:image:alt" content="{{ image_alt }}" />
    {% endcapture %}
  {% endif %}
  
  {% if template.name == 'product' %}
    {% assign variant = product.selected_variant %}
    {% assign og_title = product.title | append: variant.title | strip_html %}
  {% endif %}
  
  <meta property="og:site_name" content="{{ shop.name | escape }}">
  <meta property="og:url" content="{{ og_url }}">
  <meta property="og:title" content="{{ og_title | escape }}">
  <meta property="og:type" content="{{ og_type }}">
  <meta property="og:description" content="{{ og_description | escape }}">
  
  {% if template.name == 'article' %}
    <meta property="article:published_time" content="{{ article.published_at }}">
    <meta property="article:author" content="{{ article.author }}">
  
    {% for tag in article.tags %}
      <meta property="article.tag" content="{{ tag }}">
    {% endfor %}
  {% endif %}
  
  {{ og_image_tags }}
  
  {% comment %}Inject @pixelunion/shopify-social-meta/social-open-graph end{% endcomment %}
  {% comment %}Inject @pixelunion/shopify-social-meta/social-twitter-card begin{% endcomment %}
  {% assign twitter_title = page_title | default: shop.name %}
  {% assign twitter_description = page_description | default: shop.description | default: shop.name %}
  {% assign twitter_image = page_image %}
  
  {% if twitter_handle == blank %}
    {% assign twitter_handle = settings.social_twitter_handle | split: 'twitter.com/' | last %}
  {% endif %}
  
  {% if twitter_handle != blank %}
    <meta name="twitter:site" content="@{{ twitter_handle | replace: '@', '' | escape }}">
  {% endif %}
  
  
  {% if twitter_image != blank %}
    {% capture twitter_image_tags %}
      {% comment %}
        Twitter summary requires 144 (w) x 144 (h) pixels minimum to share,
        displays at a 1:1 aspect ratio
        https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary
  
        Twitter summary with large image require 300 (w) x 157 (h) pixels minimum to share,
        display at a 2:1 aspect ratio
        https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary-card-with-large-image
      {% endcomment %}
      {% assign width = 1200 %}
      {% if twitter_image.aspect_ratio <= 1 %}
        {% comment %}
          Summary
        {% endcomment %}
        {% assign height = width | divided_by: 1 | round %}
        <meta name="twitter:card" content="summary">
      {% else %}
        {% comment %}
          Summary with large image
        {% endcomment %}
        {% assign height = width | divided_by: 2 | round %}
        <meta name="twitter:card" content="summary_large_image">
      {% endif %}
      {% capture request_url %}{{ width }}x{{ height }}{% endcapture %}
      <meta
        property="twitter:image"
        content="https:{{ twitter_image | img_url: request_url, crop: 'center' }}"
      />
      <meta property="twitter:image:width" content="{{ width }}" />
      <meta property="twitter:image:height" content="{{ height }}" />
      {% assign image_alt = twitter_image.alt %}
      {% if twitter_image.alt == blank %}
        {% assign image_alt = 'Social media image' %}
      {% endif %}
      <meta property="twitter:image:alt" content="{{ image_alt | escape }}" />
    {% endcapture %}
  {% endif %}
  
  <meta name="twitter:title" content="{{ twitter_title | escape }}">
  <meta name="twitter:description" content="{{ twitter_description | escape }}">
  
  {{ twitter_image_tags }}
  
  {% comment %}Inject @pixelunion/shopify-social-meta/social-twitter-card end{% endcomment %}

  {% if template contains 'cart' %}
    <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer></script>
  {% endif %}

  {%- if template contains 'customer' -%}
    <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer></script>
    <script src="{{ 'customer_area.js' | shopify_asset_url }}" defer></script>
  {%- endif -%}

  <script src="{{ 'core.js' | asset_url }}" defer></script>
  <script src="{{ 'components.js' | asset_url }}" defer></script>

  {{ content_for_header }}

  {% comment %}Inject theme-object begin{% endcomment %}
  <script>
    window.PXUTheme = window.PXUTheme || {};
  
    window.PXUTheme.money_format = {{ shop.money_format | strip_html | json }};
  
    window.PXUTheme.context = {
      shop: {
        id: {{ shop.id | json }},
      },
      {% if product %}"product": {{ product | json }},{% endif %}
      {% if article %}"article": {{ article | json }},{% endif %}
      {% if blog %}"blog": {{ blog | json }},{% endif %}
      {% if cart %}"cart": {{ cart | json }},{% endif %}
      {% if collection %}"collection": {{ collection | json }},{% endif %}
      {% if customer %}"customer": {{ customer | json }},{% endif %}
      {% if collections %}"collections": {{ collections | json }},{% endif %}
      {% if page %}"page": {{ page | json }},{% endif %}
      {% if search %}"search": {{ search | json }},{% endif %}
    };
  
    window.PXUTheme.routes = {
      "root_url": "{{ routes.root_url }}",
      "account_url": "{{ routes.account_url }}",
      "account_login_url": "{{ routes.account_login_url }}",
      "account_logout_url": "{{ routes.account_logout_url }}",
      "account_register_url": "{{ routes.account_register_url }}",
      "account_addresses_url": "{{ routes.account_addresses_url }}",
      "collections_url": "{{ routes.collections_url }}",
      "all_products_collection_url": "{{ routes.all_products_collection_url }}",
      "search_url": "{{ routes.search_url }}",
      "predictive_search_url": "{{ routes.predictive_search_url }}",
      "cart_url": "{{ routes.cart_url }}",
      "cart_add_url": "{{ routes.cart_add_url }}",
      "cart_change_url": "{{ routes.cart_change_url }}",
      "cart_clear_url": "{{ routes.cart_clear_url }}",
      "cart_update_url": "{{ routes.cart_update_url }}",
      "product_recommendations_url": "{{ routes.product_recommendations_url }}",
    };
  </script>
  
  {% comment %}Inject theme-object end{% endcomment %}
  <link rel="stylesheet" href="{{ 'core.css' | asset_url }}" crossorigin>
  <link rel="stylesheet" href="{{ 'components.css' | asset_url }}" crossorigin>

  {% comment %} {%- unless settings.type_body_font.system? -%}
    <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
  {%- endunless -%}
  {%- unless settings.type_header_font.system? -%}
    <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
  {%- endunless -%} {% endcomment %}

  <script>
    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    if(('ontouchstart' in window)||window.DocumentTouch&&document instanceof DocumentTouch)document.documentElement.className=document.documentElement.className.replace(/\bno-touch\b/,'has-touch');
  </script>
</head>

<body class="template-{{ template | replace: '.', '-' | handle }}">
  <a class="skip-to-main" href="#site-main">{{ 'general.accessibility.skip_to_text' | t }}</a>
  <template id="template-money">
    {% comment %}Inject money begin{% endcomment %}
    {% comment %}
      @param cents
        The value, in cents, to be formatted and rendered
    
      @param tag
        An additional tag that generates a class name and a data attribute
        prefixed by "money"
    {% endcomment %}
    
    {% liquid
      unless cents
        assign cents = 1999
      endunless
    %}
    
    <span class="money{% if tag != blank %} money--{{- tag -}}{% endif %}" data-money{% if tag != blank %} data-money-{{- tag -}}{% endif %}>{{ cents | money }}</span>
    
    {% comment %}Inject money end{% endcomment %}
  </template>
  <template id="template-money-range">
    {% comment %}Inject money-range begin{% endcomment %}
    {% comment %}
      @param cents_min
        The minimum value, in cents, to be formatted and rendered
    
      @param cents_max
        The maximum value, in cents, to be formatted and rendered
    {% endcomment %}
    
    {% liquid
      unless cents_min
        assign cents_min = 1999
      endunless
    
      unless cents_max
        assign cents_max = 1999
      endunless
    %}
    
    {%- capture money_min -%}
      {% comment %}Inject money begin{% endcomment %}
      {% liquid
        assign cents_9726255e = cents
        assign cents = cents_min
        assign tag_9726255e = tag
        assign tag = 'min'
      %}
      {% comment %}
        @param cents
          The value, in cents, to be formatted and rendered
      
        @param tag
          An additional tag that generates a class name and a data attribute
          prefixed by "money"
      {% endcomment %}
      
      {% liquid
        unless cents
          assign cents = 1999
        endunless
      %}
      
      <span class="money{% if tag != blank %} money--{{- tag -}}{% endif %}" data-money{% if tag != blank %} data-money-{{- tag -}}{% endif %}>{{ cents | money }}</span>
      
      {% liquid
        assign cents = cents_9726255e
        assign cents_9726255e = nil
        assign tag = tag_9726255e
        assign tag_9726255e = nil
      %}
      {% comment %}Inject money end{% endcomment %}
    {%- endcapture -%}
    
    {%- capture money_max -%}
      {% comment %}Inject money begin{% endcomment %}
      {% liquid
        assign cents_9726255e = cents
        assign cents = cents_max
        assign tag_9726255e = tag
        assign tag = 'max'
      %}
      {% comment %}
        @param cents
          The value, in cents, to be formatted and rendered
      
        @param tag
          An additional tag that generates a class name and a data attribute
          prefixed by "money"
      {% endcomment %}
      
      {% liquid
        unless cents
          assign cents = 1999
        endunless
      %}
      
      <span class="money{% if tag != blank %} money--{{- tag -}}{% endif %}" data-money{% if tag != blank %} data-money-{{- tag -}}{% endif %}>{{ cents | money }}</span>
      
      {% liquid
        assign cents = cents_9726255e
        assign cents_9726255e = nil
        assign tag = tag_9726255e
        assign tag_9726255e = nil
      %}
      {% comment %}Inject money end{% endcomment %}
    {%- endcapture -%}
    
    <div class="money__range">{{- 'general.money.range_html' | t: money_min: money_min, money_max: money_max -}}</div>
    
    {% comment %}Inject money-range end{% endcomment %}
  </template>

  {% sections 'header-group' %}

  {% comment %}Global above-main begin{% endcomment %}
  {% comment %}Component age-gate:default begin{% endcomment %}
  {% liquid
    assign id = 'page'
    assign age_gate_enabled = settings.enable_age_gate_site_wide
    assign page_min_age = settings.age_gate_site_wide_min_age
  
    if content_for_layout contains 'data-required-age'
      assign age_gate_enabled = true
      assign section_min_age = content_for_layout | split: 'data-required-age="||' | last | split: '||"' | first | times: 1
  
      if page_min_age < section_min_age
        assign page_min_age = section_min_age
      endif
    endif
  %}
  
  <div data-component="age-gate" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}id="age-gate-{{ id }}">
    {% if age_gate_enabled %}
      <div class="age-gate" data-age-gate{% if request.design_mode %} style="display: none;"{% endif %}>
        <div class="age-gate__content">
          <div class="age-gate__header">
            {% if settings.show_age_gate_logo and shop.brand.logo != blank %}
              <div class="age-gate__logo-wrapper">
                {% comment %}Component lazy-img:default begin{% endcomment %}
                {% render 'lazy-img', img: shop.brand.logo, alt: shop.name, size: '300x', lazy: true, canvas: true, class: 'age-gate__logo' %}
                {% comment %}Component lazy-img:default end{% endcomment %}
              </div>
            {% endif %}
  
            {% if settings.age_gate_heading != blank %}
              <p class="age-gate__heading">{{ settings.age_gate_heading }}</p>
            {% endif %}
  
            {% if settings.age_gate_description != blank %}
              <p class="age-gate__description">{{ settings.age_gate_description }}</p>
            {% endif %}
          </div>
          <form id="age-gate-{{ id }}-form" class="age-gate__form" data-age-gate-form data-required-age="{{ page_min_age }}">
            <div class="age-gate__select-wrapper">
              {% assign form_id = 'age-gate-' | append: id | append: '-form' %}
              {% assign label_text = 'age_gate.form.day' | t %}
              {% assign input_id = 'age-gate-' | append: id | append: '-day' %}
              {% capture options %}
                {% for i in (1..31) %}
                  <option value="{{ i }}">{{ i }}</option>
                {% endfor %}
              {% endcapture %}
              {% comment %}Component input-select:default begin{% endcomment %}
              {% liquid
                assign field_name_d2fa229b = field_name
                assign field_name = 'day'
              %}
              {% comment %}
                @param label_text [Required]
                  The text for the label to be included.
              
                @param options [Required]
                  The list of options to include in the select.
              
                @param form_id [Optional]
                  The form id to associate with
              
                @param input_id [Optional]
                  The option id to apply to the label and input
              
                @param field_name [Optional]
                  The field name for the form. Will be used for the "name" attribute.
              
                @param attributes [Optional]
                  Additional attributes to append to the input field.
              {% endcomment %}
              
              {% if input_id == blank %}
                {% comment %}UUID input_id begin{% endcomment %}
                {% assign input_id = '2e41cf7a-cba2-48da-9bb1-a401734ada16' %}
                {% comment %}UUID input_id end{% endcomment %}
              {% endif %}
              
              <div data-component="input-select" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="input-select">
                <label class="input-select__label" for="{{ input_id }}" data-label>{{ label_text }}</label>
                <div class="input-select__wrapper">
                  <select
                    id="{{ input_id }}"
                    class="input-select__select"
                    {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                    {% if field_name != blank %}name="{{ field_name }}"{% endif %}
                    {{ attributes }}
                    data-input
                  >
                    {{ options }}
                  </select>
                </div>
              </div>
              
              {% liquid
                assign field_name = field_name_d2fa229b
                assign field_name_d2fa229b = nil
              %}
              {% comment %}Component input-select:default end{% endcomment %}
            </div>
  
            <div class="age-gate__select-wrapper">
              {% assign label_text = 'age_gate.form.month' | t %}
              {% assign input_id = 'age-gate-' | append: id | append: '-month' %}
              {% capture options %}
                <option value="0">{{ 'age_gate.form.january' | t }}</option>
                <option value="1">{{ 'age_gate.form.february' | t }}</option>
                <option value="2">{{ 'age_gate.form.march' | t }}</option>
                <option value="3">{{ 'age_gate.form.april' | t }}</option>
                <option value="4">{{ 'age_gate.form.may' | t }}</option>
                <option value="5">{{ 'age_gate.form.june' | t }}</option>
                <option value="6">{{ 'age_gate.form.july' | t }}</option>
                <option value="7">{{ 'age_gate.form.august' | t }}</option>
                <option value="8">{{ 'age_gate.form.september' | t }}</option>
                <option value="9">{{ 'age_gate.form.october' | t }}</option>
                <option value="10">{{ 'age_gate.form.november' | t }}</option>
                <option value="11">{{ 'age_gate.form.december' | t }}</option>
              {% endcapture %}
              {% comment %}Component input-select:default begin{% endcomment %}
              {% liquid
                assign field_name_d2fa229b = field_name
                assign field_name = 'month'
              %}
              {% comment %}
                @param label_text [Required]
                  The text for the label to be included.
              
                @param options [Required]
                  The list of options to include in the select.
              
                @param form_id [Optional]
                  The form id to associate with
              
                @param input_id [Optional]
                  The option id to apply to the label and input
              
                @param field_name [Optional]
                  The field name for the form. Will be used for the "name" attribute.
              
                @param attributes [Optional]
                  Additional attributes to append to the input field.
              {% endcomment %}
              
              {% if input_id == blank %}
                {% comment %}UUID input_id begin{% endcomment %}
                {% assign input_id = '6d18bf12-3cd8-4689-a295-93b58df02144' %}
                {% comment %}UUID input_id end{% endcomment %}
              {% endif %}
              
              <div data-component="input-select" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="input-select">
                <label class="input-select__label" for="{{ input_id }}" data-label>{{ label_text }}</label>
                <div class="input-select__wrapper">
                  <select
                    id="{{ input_id }}"
                    class="input-select__select"
                    {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                    {% if field_name != blank %}name="{{ field_name }}"{% endif %}
                    {{ attributes }}
                    data-input
                  >
                    {{ options }}
                  </select>
                </div>
              </div>
              
              {% liquid
                assign field_name = field_name_d2fa229b
                assign field_name_d2fa229b = nil
              %}
              {% comment %}Component input-select:default end{% endcomment %}
            </div>
  
            <div class="age-gate__select-wrapper">
              {% assign label_text = 'age_gate.form.year' | t %}
              {% assign input_id = 'age-gate-' | append: id | append: '-year' %}
              {% capture options %}
                {% assign year = "now" | date: "%Y" | times: 1 %}
                {% assign startingYear = year | minus: 120 %}
                {% for i in (startingYear..year) %}
                  {% assign j = year | minus: forloop.index0 %}
                  <option value="{{ j }}">{{ j }}</option>
                {% endfor %}
              {% endcapture %}
              {% comment %}Component input-select:default begin{% endcomment %}
              {% liquid
                assign field_name_d2fa229b = field_name
                assign field_name = 'year'
              %}
              {% comment %}
                @param label_text [Required]
                  The text for the label to be included.
              
                @param options [Required]
                  The list of options to include in the select.
              
                @param form_id [Optional]
                  The form id to associate with
              
                @param input_id [Optional]
                  The option id to apply to the label and input
              
                @param field_name [Optional]
                  The field name for the form. Will be used for the "name" attribute.
              
                @param attributes [Optional]
                  Additional attributes to append to the input field.
              {% endcomment %}
              
              {% if input_id == blank %}
                {% comment %}UUID input_id begin{% endcomment %}
                {% assign input_id = '8e9b1d79-7708-4c56-9a3e-e95bd1550917' %}
                {% comment %}UUID input_id end{% endcomment %}
              {% endif %}
              
              <div data-component="input-select" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="input-select">
                <label class="input-select__label" for="{{ input_id }}" data-label>{{ label_text }}</label>
                <div class="input-select__wrapper">
                  <select
                    id="{{ input_id }}"
                    class="input-select__select"
                    {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                    {% if field_name != blank %}name="{{ field_name }}"{% endif %}
                    {{ attributes }}
                    data-input
                  >
                    {{ options }}
                  </select>
                </div>
              </div>
              
              {% liquid
                assign field_name = field_name_d2fa229b
                assign field_name_d2fa229b = nil
              %}
              {% comment %}Component input-select:default end{% endcomment %}
            </div>
  
            <div class="age-gate__confirm_btn">
              {% assign button_text = 'age_gate.form.confirm' | t: shop: shop.name %}
              {% comment %}Component button:default begin{% endcomment %}
              {% liquid
                assign style_d2c1ecdd = style
                assign style = 'primary'
                assign size_d2c1ecdd = size
                assign size = 'medium'
                assign text_d2c1ecdd = text
                assign text = button_text
                assign attributes_d2c1ecdd = attributes
                assign attributes = 'type="submit"'
              %}
              {% comment %}
                @param style [Required]
                  This is the style of the button: primary, secondary, tertiary, or text. Default primary.
              
                @param size [Required]
                  This defines the size of the button: small, medium, or large. Default medium.
              
                @param text [Required]
                  This is the text to be included in the button.
              
                @param attributes [Optional]
                  This will include any additional attributes that the button needs. For example, aria-controls.
              {% endcomment %}
              
              <button
                data-component="button"
                data-component-type="component"
                {% if tag != blank %}data-component-tag="{{ tag }}"
                {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                {{ attributes }}
              >
                {{ text }}
              </button>
              
              {% liquid
                assign style = style_d2c1ecdd
                assign style_d2c1ecdd = nil
                assign size = size_d2c1ecdd
                assign size_d2c1ecdd = nil
                assign text = text_d2c1ecdd
                assign text_d2c1ecdd = nil
                assign attributes = attributes_d2c1ecdd
                assign attributes_d2c1ecdd = nil
              %}
              {% comment %}Component button:default end{% endcomment %}
            </div>
  
            <p class="age-gate__error" data-age-gate-error style="display: none;">{{ 'age_gate.form.error' | t: age: page_min_age }}</p>
          </form>
        </div>
      </div>
  
      {% unless request.design_mode %}
        <script>
          const ageGateAge = sessionStorage.getItem('age-gate');
  
          if (ageGateAge >= {{ page_min_age }}) {
            const ageGateEl = document.getElementById('age-gate-{{ id }}');
  
            if (ageGateEl) {
              ageGateEl.style.display = 'none';
            }
          }
        </script>
      {% endunless %}
    {% endif %}
  </div>
  {% comment %}Component age-gate:default end{% endcomment %}
  {% comment %}Global above-main end{% endcomment %}


  <main id="site-main" class="site-main" aria-label="Main content" tabindex="-1">
    {{ content_for_layout }}
  </main>

  {% sections 'footer-group' %}

  {% comment %}Global below-main begin{% endcomment %}
  {% comment %}Component site-overlay:default begin{% endcomment %}
  <div data-component="site-overlay" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}id="site-overlay" class="site-overlay"></div>
  
  {% comment %}Component site-overlay:default end{% endcomment %}
  {% comment %}Component drawer-modal:default begin{% endcomment %}
  <div data-component="drawer-modal" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}id="drawer-modal">
    <template data-drawer-flyout-template>{% comment %}Component flyout:default begin{% endcomment %}
<div
  data-component="flyout"
  data-component-type="component"
  {% if tag != blank %}data-component-tag="{{ tag }}"
  {% endif %}class="flyout"
  role="dialog"
  aria-labelledby="drawer-title"
  aria-modal="true"
  tabindex="-1"
>
  <div class="flyout__header-wrapper" hidden data-flyout-header-wrapper>
    <div class="flyout__header" hidden data-flyout-header>
      <div class="flyout__heading" data-flyout-heading></div>

      <button class="flyout__close-btn" aria-label="{{ 'general.close' | t }}" data-flyout-close-btn>
        {% comment %}Icon close:default begin{% endcomment %}
        <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="m1 1 8 8m8-8L9 9m8 8L9 9m-8 8 8-8" stroke="currentColor" stroke-width="1.75"/></svg>
        {% comment %}Icon close:default end{% endcomment %}
      </button>
    </div>

    <div class="flyout__notification" hidden data-flyout-notification></div>
  </div>
  <div class="flyout__content" data-flyout-content></div>
  <div class="flyout__footer" hidden data-flyout-footer></div>
</div>

{% comment %}Component flyout:default end{% endcomment %}</template>
  </div>
  
  {% comment %}Component drawer-modal:default end{% endcomment %}
  {% comment %}Component quickshop:default begin{% endcomment %}
  {% render 'quickshop' %}
  {% comment %}Component quickshop:default end{% endcomment %}
  {% comment %}Component cart-drawer:default begin{% endcomment %}
  <div data-component="cart-drawer" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}id="cart-drawer">
    {% liquid
      comment
        Because we cant conditionally render a component, use this boolean
        in the JavaScript to determine whether the drawer should open or not.
      endcomment
      assign enabled = false
      if settings.cart_type == 'drawer'
        assign enabled = true
      endif
    %}
    <script
      type="application/json"
      data-component-data
    >
      {
        "locales": {
          "success_message": {{ 'general.components.share.success_message' | t | json }},
          "error": {{ 'templates.cart.cart_error' | t | json }},
          "quantityError": {{ 'templates.cart.cart_quantity_error_html' | t | json }}
        },
        "enabled": {{ enabled | json }},
        "item_count": {{ cart.item_count | json }}
      }
    </script>
  
    <div class="cart-drawer" data-cart-drawer>
      <template data-cart-drawer-heading-template>
        <h2 class="cart-drawer__heading">{{ 'templates.cart.title' | t }} (<span data-cart-drawer-count>{{ cart.item_count }}</span>)</h2>
      </template>
  
      <template data-cart-drawer-notification-template>
        <div class="cart-drawer__notification-message">
          <div class="cart-drawer__notification-message-icon">{% comment %}Icon check:default begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="currentColor" stroke-width="1.5" d="m1.47 9.63 4.61 3.768 8.45-9.796"/></svg>
{% comment %}Icon check:default end{% endcomment %}</div>
          <span class="cart-drawer__notification-message-text" data-cart-drawer-notification-message-text>
            <span data-cart-drawer-notification-message-atc-singular>{{ 'cart.drawer.added_to_cart' | t: count: 1, title: '||title||' }}</span>
            <span data-cart-drawer-notification-message-atc-plural>{{ 'cart.drawer.added_to_cart' | t: count: '||count||', title: '||title||' }}</span>
          </span>
        </div>
      </template>
  
      <div
        class="cart-drawer-form"
        data-cart-drawer-form
      >
        {% if cart != empty %}
          <div class="cart-drawer-form__contents">
            <div
              class="cart-drawer-form__errors"
              role="alert"
              data-cart-drawer-form-errors
            >
            </div>
  
            <form
              class="cart-drawer-form__form"
              id="cart"
              action="{{ routes.cart_url }}"
              method="post"
              data-cart-drawer-form-form
              data-cart-drawer-form-count="{{ cart.item_count }}"
            >
              <table class="cart-drawer-form__table">
                <tbody>
                  {%- for line_item in cart.items -%}
                    <tr
                      class="cart-drawer-form-item"
                      data-cart-drawer-form-item="{{ line_item.key }}"
                    >
                      <td class="cart-drawer-item__image">
                        <div class="cart-drawer-item__image-wrapper">
                          <a href="{{ line_item.url }}">
                              {%- if line_item.image -%}
                                {% comment %}Component lazy-img:default begin{% endcomment %}
                                {% render 'lazy-img', img: line_item.image, size: '1200x', lazy: true, canvas: true %}
                                {% comment %}Component lazy-img:default end{% endcomment %}
                              {%- else -%}
                                {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                              {%- endif -%}
                            </a>
                          </div>
                      </td>
  
                      <td class="cart-drawer-item__details">
                        <div class="cart-drawer-item__details-info">
                          <h3 class="cart-drawer-item__heading">
                            <a href="{{ line_item.url }}">
                              {{ line_item.product.title }}
                            </a>
                          </h3>
  
                          {%- if line_item.product.has_only_default_variant == false or line_item.properties.size != 0 -%}
                            <dl class="cart-drawer-item__options">
                              {%- if line_item.product.has_only_default_variant == false -%}
                                {%- for option in line_item.options_with_values -%}
                                  <div class="cart-drawer-item__option">
                                    <span class="option__title">{{ option.value }}{% unless forloop.last %}<span class="option-seperator">,</span>{% endunless %}</span>
                                  </div>
                                {%- endfor -%}
                              {%- endif -%}
  
                              {%- for property in line_item.properties -%}
                                {%- assign property_first_char = property.first | slice: 0 -%}
                                {%- if property.last != blank and property_first_char != '_' -%}
                                  <div class="cart-drawer-item__option">
                                    <dt>{{ property.first }}: </dt>
                                    <dd>
                                      {%- if property.last contains '/uploads/' -%}
                                        <a href="{{ property.last }}" target="_blank">
                                          {{ property.last | split: '/' | last }}
                                        </a>
                                      {%- else -%}
                                        {{ property.last }}
                                      {%- endif -%}
                                    </dd>
                                  </div>
                                {%- endif -%}
                              {%- endfor -%}
  
                              {%- if line_item.selling_plan_allocation != nil -%}
                                <div class="cart-drawer-item__plan">
                                  {% for option in line_item.selling_plan_allocation.selling_plan.options %}
                                    <dt>{{ option.name }}:</dt>
                                    <dd>{{ option.value }}</dd>
                                    {% unless forloop.last %},{% endunless %}
                                  {% endfor %}
                                </div>
                              {%- endif -%}
                            </dl>
                          {%- endif -%}
  
                          {% if settings.cart_show_vendor %}
                            <p class="cart-drawer-item__vendor">{{ line_item.product.vendor }}</p>
                          {% endif %}
  
                          {% if line_item.discounts.size > 0 %}
                            <ul
                              class="cart-drawer-item__discounts"
                              role="list"
                              aria-label="{{ 'customer.order.discount' | t }}"
                            >
                              {%- for discount in line_item.discounts -%}
                                <li class="cart-drawer-item__discount">
                                  <span class="cart-drawer-item__discount-title">{{ discount.title }}: -{{ discount.total_amount | money }}</span>
                                </li>
                              {%- endfor -%}
                            </ul>
                          {% endif %}
  
                          <div class="cart-drawer-item__error" data-cart-drawer-form-item-error></div>
                        </div>
                      </td>
  
                      <td class="cart-drawer-item__price">
                        {% assign compare_at_line_price = line_item.variant.compare_at_price | times: line_item.quantity %}
                        {%- if line_item.final_line_price < compare_at_line_price -%}
                          <dl>
                            <dt class="visually-hidden">
                              {{ 'products.product.price.sale_price' | t }}
                            </dt>
                            <dd class="cart-drawer-item__sale-price">
                              {{ line_item.final_line_price | money }}
                            </dd>
                            <dt class="visually-hidden">
                              {{ 'products.product.price.regular_price' | t }}
                            </dt>
                            <dd class="cart-drawer-item__price-original">
                              <s>
                                {{ compare_at_line_price | money }}
                              </s>
                            </dd>
                          </dl>
                        {%- elsif line_item.final_line_price < line_item.original_line_price %}
                          <dl>
                            <dt class="visually-hidden">
                              {{ 'products.product.price.sale_price' | t }}
                            </dt>
                            <dd class="cart-drawer-item__sale-price">
                              {{ line_item.final_line_price | money }}
                            </dd>
                            <dt class="visually-hidden">
                              {{ 'products.product.price.regular_price' | t }}
                            </dt>
                            <dd class="cart-drawer-item__price-original">
                              <s>
                                {{ line_item.original_line_price | money }}
                              </s>
                            </dd>
                          </dl>
                        {%- else -%}
                          <span>
                            {{ line_item.final_line_price | money }}
                          </span>
                        {%- endif -%}
  
                        {%- if line_item.variant.available and line_item.unit_price_measurement -%}
                          <div class="cart-drawer-item__unit-price">
                            <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
                            {{ line_item.variant.unit_price | money }}
                            <span aria-hidden="true">/</span>
                            <span class="visually-hidden">&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span>
                            {%- if line_item.variant.unit_price_measurement.reference_value != 1 -%}
                              {{- line_item.variant.unit_price_measurement.reference_value -}}
                            {%- endif -%}
                            {% if line_item.variant.unit_price_measurement.reference_unit == 'm2' %}
                              m<sup>2</sup>
                            {% elsif line_item.variant.unit_price_measurement.reference_unit == 'm3' %}
                              m<sup>3</sup>
                            {% else %}
                              {{ line_item.variant.unit_price_measurement.reference_unit }}
                            {% endif %}
                          </div>
                        {%- endif -%}
                        </td>
  
                      <td class="cart-drawer-item__quantity">
                        <div class="cart-drawer-item__quantity-wrapper">
                          {% assign tag = line_item.key %}
  
                          {% comment %}Component quantity-selector:default begin{% endcomment %}
                          {% liquid
                            assign quantity_141336ce = quantity
                            assign quantity = line_item.quantity
                            assign title_141336ce = title
                            assign title = line_item.product.title
                          %}
                          {% comment %}
                            @param quantity [Required]
                              The default quantity to be set.
                          
                            @param title [Required]
                              The title of the quantity selectors product
                            @param name
                            @param [form_id]
                            @param [min]
                          {% endcomment %}
                          
                          {% liquid
                            unless min
                              assign min = 0
                            endunless
                          %}
                          
                          <div data-component="quantity-selector" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="quantity-selector">
                            <button
                              class="quantity-selector__button quantity-selector__button--minus"
                              name="minus"
                              type="button"
                              data-quantity-minus
                            >
                              <span class="visually-hidden">{{ 'general.components.quantity_selector.decrease' | t: title: title | escape }}</span>
                            </button>
                            <input
                              class="quantity-selector__input"
                              type="number"
                              name="{{ name }}"
                              {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                              value="{{ quantity }}"
                              min="{{ min }}"
                              aria-label="{{ 'general.components.quantity_selector.input_label' | t: title: title | escape }}"
                              data-quantity-input
                            >
                            <button
                              class="quantity-selector__button quantity-selector__button--plus"
                              name="plus"
                              type="button"
                              data-quantity-plus
                            >
                              <span class="visually-hidden">{{ 'general.components.quantity_selector.increase' | t: title: title | escape }}</span>
                            </button>
                          </div>
                          
                          {% liquid
                            assign quantity = quantity_141336ce
                            assign quantity_141336ce = nil
                            assign title = title_141336ce
                            assign title_141336ce = nil
                          %}
                          {% comment %}Component quantity-selector:default end{% endcomment %}
  
                          <a class="cart-drawer-item__remove" data-remove href="{{ line_item.url_to_remove }}" name="remove" aria-label="{{ 'templates.cart.remove_title' | t: title: line_item.title }}">
                            {{ 'templates.cart.remove' | t }}
                          </a>
                        </div>
                      </td>
                    </tr>
                  {%- endfor -%}
                </tbody>
              </table>
  
              {%- if settings.cart_show_note -%}
                <div class="cart-drawer-form__contents-notes" data-cart-notes>
                  {% assign placeholder = 'templates.cart.note' | t %}
                  {% assign cart_note = cart.note | strip %}
                  {% comment %}Component input-textarea:default begin{% endcomment %}
                  {% liquid
                    assign label_text_518c6fc1 = label_text
                    assign label_text = placeholder
                    assign field_name_518c6fc1 = field_name
                    assign field_name = 'note'
                    assign form_id_518c6fc1 = form_id
                    assign form_id = form.id
                    assign input_text_518c6fc1 = input_text
                    assign input_text = cart_note
                    assign placeholder_518c6fc1 = placeholder
                    assign placeholder = ''
                  %}
                  {% comment %}
                    @param label_text [Required]
                      The text for the label to be included.
                  
                    @param form_namespace [Required]
                      The form's namespace that is used in "name" attribute as form_namespace[field_name].
                  
                    @param field_name [Required]
                      The field name for the form. Will be used for the "name" attribute.
                  
                    @param form_id [Optional]
                      The form that the input lives in.
                  
                    @param input_id [Optional]
                      The type of field that is being rendered. Usually text, password, number, etc.
                  
                    @param input_text [Optional]
                      The initial text to display within the textarea
                  
                    @param placeholder [Optional]
                      The placeholder for the input field.
                  
                    @param attributes [Optional]
                      Additional attributes to append to the input field.
                  
                    @param rows [Optional]
                      The number of rows for the textarea (height)
                  
                    @param columns [Optional]
                      The number of columns for the textarea (width)
                  
                    @param maxlength [Optional]
                      The maximum number of characters for the textarea
                  {% endcomment %}
                  
                  {% if input_id == blank %}
                    {% comment %}UUID input_id begin{% endcomment %}
                    {% assign input_id = 'dbb2682e-7c3d-467f-b787-9ee1c3fc024f' %}
                    {% comment %}UUID input_id end{% endcomment %}
                  {% endif %}
                  
                  <div data-component="input-textarea" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="textarea">
                    <label for="{{ input_id }}">{{ label_text }}</label>
                    <textarea
                      id="{{ input_id }}"
                      name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                      {% if form_id %}
                        form="{{ form_id }}"
                      {% endif %}
                      {% if rows %}rows="{{ rows }}"{% endif %}
                      {% if columns %}cols="{{ columns }}"{% endif %}
                      {% if maxlength %}maxlength="{{ maxlength }}"{% endif %}
                      placeholder="{{ placeholder }}"
                      {{ attributes }}
                      data-input
                    >
                      {%- if input_text != blank -%}{{- input_text -}}{%- endif -%}
                    </textarea>
                  </div>
                  
                  {% liquid
                    assign label_text = label_text_518c6fc1
                    assign label_text_518c6fc1 = nil
                    assign field_name = field_name_518c6fc1
                    assign field_name_518c6fc1 = nil
                    assign form_id = form_id_518c6fc1
                    assign form_id_518c6fc1 = nil
                    assign input_text = input_text_518c6fc1
                    assign input_text_518c6fc1 = nil
                    assign placeholder = placeholder_518c6fc1
                    assign placeholder_518c6fc1 = nil
                  %}
                  {% comment %}Component input-textarea:default end{% endcomment %}
                </div>
              {%- endif -%}
            </form>
            {%- if settings.cart_enable_cross_sell -%}
              {% assign recommendations_product = cart.items[0].product_id | default: nil %}
              {% comment %}Component product-cross-sell:default begin{% endcomment %}
              {% liquid
                assign product_id_6aa43093 = product_id
                assign product_id = recommendations_product
              %}
              {% comment %}
                @param product_id
                  ID of the product on which to base the recommendations request (ex. a product in the cart)
              {% endcomment %}
              
              {% assign starting_index = 1 %}
              {%- capture nav_button_text -%}
                {% comment %}Icon chevron:default begin{% endcomment %}
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="currentColor" stroke-width="1.75" d="m1 5 7 7 7-7"/></svg>
                {% comment %}Icon chevron:default end{% endcomment %}
              {%- endcapture -%}
              
              <div
                data-component="product-cross-sell"
                data-component-type="component"
                {% if tag != blank %}data-component-tag="{{ tag }}"
                {% endif %}class="cross-sell"
                data-cross-sell
              >
                <script
                  type="application/json"
                  data-component-data
                >
                  {
                    "product_id": {{ product_id | json }},
                    "section_id": {{ section.id | json }},
                    "recommendations_route": "{{ routes.product_recommendations_url }}"
                  }
                </script>
                  <div data-cross-sell-content>
                    {% if recommendations.performed and recommendations.products_count > 0 and settings.cart_cross_sell_heading != blank %}
                      <h2 class="cross-sell__heading">
                        {{ settings.cart_cross_sell_heading | escape }}
                      </h2>
                    {% endif %}
                    {% if product_id %}
                      <div
                        class="cross-sell__wrapper"
                        data-cross-sell-data
                        data-product-id="{{ product_id }}"
                        data-section-id="{{ section.id }}"
                      >
                        {% if recommendations.performed and recommendations.products_count > 0 %}
                          {% comment %}UUID product_form_id begin{% endcomment %}
                          {% assign product_form_id = 'ac55db64-0ed7-4939-970e-f624ba3e65af' %}
                          {% comment %}UUID product_form_id end{% endcomment %}
                          {% for cross_sell_product in recommendations.products %}
                            {% assign form_id = product_form_id | append: forloop.index0 %}
                            <div
                              class="cross-sell__card-wrapper"
                              data-cross-sell-card-wrapper
                              data-card-index="{{ forloop.index }}"
                              {% if forloop.first %}
                                data-animation-state="visible"
                                data-cross-sell-selected
                              {% else %}
                                data-animation-state="hidden"
                              {% endif %}
                            >
                              {% comment %}Component cross-sell-card:default begin{% endcomment %}
                              {% comment %}
                                @param cross_sell_product
                              
                                @param form_id
                              {% endcomment %}
                              {% comment %} Product Labels {% endcomment %}
                              
                              {% assign label_metafield = settings.product_card_label_metafield | split: '.' %}
                              {% assign icon_metafield = settings.product_card_icon_metafield | split: '.' %}
                              
                              {% if cross_sell_product.metafields[label_metafield[0]][label_metafield[1]] != blank or cross_sell_product.metafields[icon_metafield[0]][icon_metafield[1]] != blank %}
                                  {% capture product_label %}
                                  <div class="cross-sell-card__label cross-sell-card__label--{{ settings.product_card_label_style }}">
                                    {% if cross_sell_product.metafields[icon_metafield[0]][icon_metafield[1]] != blank %}
                                      <div class="cross-sell-card__label-icon">
                                        {% comment %}Component lazy-img:default begin{% endcomment %}
                                        {% render 'lazy-img', img: cross_sell_product.metafields[icon_metafield[0]][icon_metafield[1]], size: '20x' %}
                                        {% comment %}Component lazy-img:default end{% endcomment %}
                                      </div>
                                    {% endif %}
                                    {% if cross_sell_product.metafields[label_metafield[0]][label_metafield[1]] != blank %}
                                      {{ cross_sell_product.metafields[label_metafield[0]][label_metafield[1]] }}
                                    {% endif %}
                                  </div>
                                {% endcapture %}
                              {% endif %}
                              
                              
                              
                              {% comment %} Find which option is set up for Color (if it exists) so we can be set up for swatches, variant images,
                              and the color label on the title {% endcomment %}
                              {% assign color_option_key = blank %}
                              {% if cross_sell_product.options_by_name['Color'] != blank %}
                                {% assign color_option_key = 'option' | append: cross_sell_product.options_by_name['Color'].position %}
                              {% endif %}
                              
                              {% assign color_variants_added = '|' %}
                              {% assign variant_images_html = '' %}
                              {% assign variant_indices_string = '' %}
                              
                              {% if color_option_key != blank %}
                                {% for next_variant in cross_sell_product.variants %}
                                  {% assign search_string = '|' | append: next_variant[color_option_key] | downcase | append: '|' %}
                                  {% unless color_variants_added contains search_string %}
                                    {% if next_variant.featured_media != blank %}
                                      {% capture variant_image_part %}
                                        <div
                                          class="cross-sell-card__img-variant hidden"
                                          data-variant-image="{{ next_variant[color_option_key] | downcase }}"
                                          data-variant-id="{{ next_variant.id }}"
                                        >
                                          {% comment %}Component lazy-img:default begin{% endcomment %}
                                          {% render 'lazy-img', img: next_variant.featured_media.preview_image, size: '700x', lazy: false, crop_focus: 'center', fill_mode: 'fill' %}
                                          {% comment %}Component lazy-img:default end{% endcomment %}
                                        </div>
                                      {% endcapture %}
                                      {% assign variant_images_html = variant_images_html | append: variant_image_part %}
                                    {% endif %}
                              
                                    {% assign color_variants_added = color_variants_added | append: next_variant[color_option_key] | downcase | append: '|' %}
                                    {% assign variant_indices_string = variant_indices_string | append: '|' | append: forloop.index0 %}
                                  {% endunless %}
                                {% endfor %}
                              {% endif %}
                              
                              {% assign color_array = color_variants_added | remove_first: '|' | split: '|' %}
                              {% assign variant_indices_array = variant_indices_string | remove_first: '|' | split: '|' %}
                              
                              {% assign variant = cross_sell_product.selected_or_first_available_variant %}
                              
                              {%- capture first_product_img -%}
                                {% if variant.image != blank %}
                                  {% comment %}Component lazy-img:default begin{% endcomment %}
                                  {% render 'lazy-img', img: variant.image, size: '700x', lazy: false, crop_focus: 'center', fill_mode: 'fill' %}
                                  {% comment %}Component lazy-img:default end{% endcomment %}
                                {% elsif cross_sell_product.featured_media.preview_image != blank %}
                                  {% comment %}Component lazy-img:default begin{% endcomment %}
                                  {% render 'lazy-img', img: cross_sell_product.featured_media.preview_image, size: '700x', lazy: false, crop_focus: 'center', fill_mode: 'fill' %}
                                  {% comment %}Component lazy-img:default end{% endcomment %}
                                {% else %}
                                  {%- capture index -%}
                                    {%- cycle '1', '2', '3', '4', '5', '6' -%}
                                  {%- endcapture -%}
                                  {{ 'product-' | append: index | placeholder_svg_tag: 'placeholder-svg' }}
                                {% endif %}
                              {%- endcapture -%}
                              
                              <div
                                data-component="cross-sell-card"
                                data-component-type="component"
                                {% if tag != blank %}data-component-tag="{{ tag }}"
                                {% endif %}class="cross-sell-card"
                                data-cross-sell-card
                              >
                                <script
                                  type="application/json"
                                  data-component-data
                                >
                                  {
                                    "product": {{ all_products[cross_sell_product.handle] | json }},
                                    "selectedVariant": {{ variant | json }},
                                    "sectionId": {{ section.id | json }},
                                    "recommendationsRoute": {{ routes.product_recommendations_url | json }}
                                  }
                                </script>
                                <div
                                  class="cross-sell-card__img"
                                  data-product-image
                                >
                                  {% if color_option_key != blank %}
                                    <div
                                      class="cross-sell-card__img-variants hidden"
                                      data-variant-images
                                    >
                                      {{ variant_images_html }}
                                    </div>
                                  {% endif %}
                                  <div
                                    class="cross-sell-card__img-product"
                                    data-cross-sell-card-img
                                  >
                                    {{ first_product_img }}
                                  </div>
                                </div>
                                <div class="cross-sell-card__details-wrapper">
                                  <div
                                    class="cross-sell-card__details"
                                    data-cross-sell-card-details
                                  >
                                    {% assign selected_color = variant[color_option_key] | downcase | default: nil %}
                              
                                    <div class="cross-sell-card__title">
                                      <a href="{{ cross_sell_product.url }}">{{ cross_sell_product.title }}</a>
                                      {% if settings.product_card_color_option_name == 'beside' and selected_color %}
                                        {{ 'templates.cart.recommendations.in' | t  }} 
                                        <span data-variant-color-label>{{ selected_color | capitalize }}</span>
                                      {% endif %}
                                    </div>
                                    {%- if settings.product_card_color_option_name == 'below' and selected_color -%}
                                      <div
                                        class="cross-sell-card__color"
                                        data-variant-color-label
                                      >
                                        {{ selected_color | capitalize }}
                                      </div>
                                    {%- endif -%}
                              
                                    {% comment %}Component price:default begin{% endcomment %}
                                    {% render 'price', product: cross_sell_product %}
                                    {% comment %}Component price:default end{% endcomment %}
                              
                                    {% if color_array.size > 0 %}
                                      {% if settings.product_card_color_option == 'swatches' %}
                                        {% comment %}Component product-card-swatches:default begin{% endcomment %}
                                        {% liquid
                                          assign swatch_product_ef33b4b9 = swatch_product
                                          assign swatch_product = cross_sell_product
                                        %}
                                        {% comment %}
                                          @param swatch_product {Product} [Required]
                                            The product to draw the swatches for.
                                        
                                          @param color_array {Array} [Required]
                                            An array of colors that need to be shown as swatches
                                        
                                          @param use_variant_images {Boolean} [Optional]
                                            If true, will try and use a variant image instead of a swatch color, if one exists.
                                        
                                          @param variant_indices_array {Array} [Optional]
                                            An array of variant indices that maps directly to the color array. This is useful for grabbing the direct variant.
                                        
                                          @param selected_color {String} [Optional]
                                            The color that should be selected on load.
                                        {% endcomment %}
                                        
                                        {% assign use_variant_images = use_variant_images | default: false %}
                                        
                                        <div data-component="product-card-swatches" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="product-card-swatches">
                                          <div class="product-card-swatches__wrapper">
                                            {% for next_color in color_array %}
                                              {% assign variant_image = blank %}
                                              {% if variant_indices_array %}
                                                {% assign variant_index = variant_indices_array[forloop.index0] | plus: 0 %}
                                                {% capture variant_index_attr %}
                                                  data-variant-index="{{ variant_index }}"
                                                {% endcapture %}
                                              {% endif %}
                                        
                                              <button
                                                class="product-card-swatches__swatch-button"
                                                data-swatch-button
                                                aria-label="{{ next_color }}"
                                                data-color="{{ next_color | downcase }}"
                                                {{ variant_index_attr }}
                                                data-selected="{%- if selected_color == next_color -%}selected{%- endif -%}"
                                              >
                                                {% if use_variant_images %}
                                                  {% assign variant_index = variant_indices_array[forloop.index0] | plus: 0 %}
                                                  {% assign variant_image = swatch_product.variants[variant_index].featured_media.preview_image %}
                                                {% endif %}
                                        
                                                {% comment %}Component swatch:default begin{% endcomment %}
                                                {% liquid
                                                  assign color_name_df5bccf6 = color_name
                                                  assign color_name = next_color
                                                  assign show_tooltip_df5bccf6 = show_tooltip
                                                  assign show_tooltip = false
                                                %}
                                                {% comment %}
                                                  @param color_name {String} [Required]
                                                    Color name for which to find a suitable background
                                                
                                                  @param variant_image {Boolean} [Optional]
                                                    Will display a this variant image, instead of a swatch color.
                                                
                                                  @param show_tooltip {Booleal} [Optional]
                                                    If true, will show tooltip on hover of the swatch.
                                                {% endcomment %}
                                                
                                                {%- assign variant_image = variant_image | default: blank -%}
                                                
                                                {%- assign swatch_color = blank -%}
                                                {%- assign swatch_image = blank -%}
                                                {%- assign custom_colors = settings.swatches_custom_colors -%}
                                                
                                                {% comment %} First look for a defined custom color {% endcomment %}
                                                {%- assign custom_colors = custom_colors | newline_to_br | strip_newlines | split: '<br />' -%}
                                                {%- assign swatch_search_color = color_name | downcase -%}
                                                {%- for custom_entry in custom_colors -%}
                                                  {%- assign custom_color = custom_entry | split: ':' -%}
                                                  {%- assign custom_color_name = custom_color[0] | strip | downcase -%}
                                                  {%- assign custom_color_value = custom_color[1] | strip -%}
                                                  {%- if swatch_search_color == custom_color_name -%}
                                                    {% assign swatch_color = custom_color_value %}
                                                    {%- break -%}
                                                  {%- endif -%}
                                                {%- endfor -%}
                                                
                                                {% comment %} Otherwise default to the raw color name, which will either be a
                                                valid named HTML color and displayed as such, or will be ignored by the browser. {% endcomment %}
                                                {%- if swatch_color == blank -%}
                                                  {% assign swatch_color = color_name | replace: " ", "" | handleize %}
                                                {%- endif -%}
                                                
                                                {% comment %} Use a variant image for the swatch if one exists. {% endcomment %}
                                                {%- if variant_image != blank -%}
                                                  {% assign swatch_image = variant_image %}
                                                {%- else -%}
                                                  {% comment %} If not using variant images, look for a image that matches the color name in the theme's files. {% endcomment %}
                                                  {% assign swatch_file_name = color_name | downcase | handleize | append: '.png' %}
                                                  {%- if images[swatch_file_name] != blank -%}
                                                    {%- assign swatch_image = images[swatch_file_name] -%}
                                                  {%- endif -%}
                                                {%- endif -%}
                                                
                                                <div
                                                  data-component="swatch"
                                                  data-component-type="component"
                                                  {% if tag != blank %}data-component-tag="{{ tag }}"
                                                  {% endif %}class="swatch"
                                                  {% if swatch_image == blank %}
                                                    style="--swatch-color: {{ swatch_color }};"
                                                  {% endif %}
                                                >
                                                  <span class="swatch__label {% unless show_tooltip %}visually-hidden{% endunless %}">{{ color_name }}</span>
                                                  <div
                                                    class="
                                                      swatch__fill
                                                      swatch__fill--{{ settings.swatch_shape }}
                                                    "
                                                  >
                                                    {% if swatch_image != blank %}
                                                      {% comment %}Component lazy-img:default begin{% endcomment %}
                                                      {% render 'lazy-img', img: swatch_image, size: '50x', crop_focus: 'center', lazy: true, canvas: true %}
                                                      {% comment %}Component lazy-img:default end{% endcomment %}
                                                    {% endif %}
                                                  </div>
                                                </div>
                                                
                                                {% liquid
                                                  assign color_name = color_name_df5bccf6
                                                  assign color_name_df5bccf6 = nil
                                                  assign show_tooltip = show_tooltip_df5bccf6
                                                  assign show_tooltip_df5bccf6 = nil
                                                %}
                                                {% comment %}Component swatch:default end{% endcomment %}
                                              </button>
                                            {% endfor %}
                                          </div>
                                          <button class="product-card-swatches__show-more hidden" data-swatches-show-more>
                                            {{ 'products.swatches.show_more' | t: count: 'count' }}
                                          </button>
                                        </div>
                                        
                                        {% liquid
                                          assign swatch_product = swatch_product_ef33b4b9
                                          assign swatch_product_ef33b4b9 = nil
                                        %}
                                        {% comment %}Component product-card-swatches:default end{% endcomment %}
                                      {% elsif settings.product_card_color_option == 'count' %}
                                        <div class="cross-sell-card__colors-available">
                                          {{ 'templates.cart.recommendations.colors_available' | t: count: color_array.size  }}
                                        </div>
                                      {% endif %}
                                    {% endif %}
                                    <div class="cross-sell-card__buttons {% if product_label %}cross-sell-card__buttons--has-label{%- endif -%}">
                                      {{ product_label }}
                              
                                      {% assign atc_text = 'templates.cart.recommendations.add_to_cart' | t %}
                                      {% comment %}Component button:default begin{% endcomment %}
                                      {% liquid
                                        assign style_1edd8e6b = style
                                        assign style = 'text'
                                        assign size_1edd8e6b = size
                                        assign size = 'small'
                                        assign text_1edd8e6b = text
                                        assign text = atc_text
                                        assign attributes_1edd8e6b = attributes
                                        assign attributes = 'data-cross-sell-card-atc'
                                      %}
                                      {% comment %}
                                        @param style [Required]
                                          This is the style of the button: primary, secondary, tertiary, or text. Default primary.
                                      
                                        @param size [Required]
                                          This defines the size of the button: small, medium, or large. Default medium.
                                      
                                        @param text [Required]
                                          This is the text to be included in the button.
                                      
                                        @param attributes [Optional]
                                          This will include any additional attributes that the button needs. For example, aria-controls.
                                      {% endcomment %}
                                      
                                      <button
                                        data-component="button"
                                        data-component-type="component"
                                        {% if tag != blank %}data-component-tag="{{ tag }}"
                                        {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                                        {{ attributes }}
                                      >
                                        {{ text }}
                                      </button>
                                      
                                      {% liquid
                                        assign style = style_1edd8e6b
                                        assign style_1edd8e6b = nil
                                        assign size = size_1edd8e6b
                                        assign size_1edd8e6b = nil
                                        assign text = text_1edd8e6b
                                        assign text_1edd8e6b = nil
                                        assign attributes = attributes_1edd8e6b
                                        assign attributes_1edd8e6b = nil
                                      %}
                                      {% comment %}Component button:default end{% endcomment %}
                                    </div>
                                  </div>
                                  <div
                                    class="cross-sell-card__form hidden"
                                    data-cross-sell-card-form
                                  >
                                    {% comment %}Component variant-selector:default begin{% endcomment %}
                                    {% liquid
                                      assign product_4f292680 = product
                                      assign product = cross_sell_product
                                      assign selected_variant_4f292680 = selected_variant
                                      assign selected_variant = variant
                                    %}
                                    {% comment %}
                                      Display variant options for a product
                                    
                                      @param product
                                        The product object
                                    
                                      @param selected_variant
                                        The selected variant object
                                    
                                      @param form_id
                                        The associated form ID
                                    {% endcomment %}
                                    
                                    <div data-component="variant-selector" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="variant-selector">
                                      {% if product.has_only_default_variant %}
                                        <input
                                          class="variant-selector__variants variant-selector__variants--default"
                                          name="id"
                                          {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                                          type="hidden"
                                          value="{{ product.variants.first.id }}"
                                          data-variants
                                        >
                                      {% else %}
                                        <label class="variant-selector__label">
                                          {{ 'product.variants.options' | t }}
                                    
                                          <select
                                            class="variant-selector__variants"
                                            name="id"
                                            {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                                            data-variants
                                          >
                                            <option
                                              value=""
                                              disabled
                                              {% if selected_variant == blank %}selected{% endif %}
                                            >
                                              {{ 'product.variants.choose_variant' | t }}
                                            </option>
                                            {% for variant in product.variants %}
                                              <option
                                                {% if selected_variant and selected_variant.id == variant.id %}selected{% endif %}
                                                value="{{ variant.id }}"
                                                {% unless variant.available %}disabled{% endunless %}
                                              >
                                                {{ variant.title }} - {{ variant.price | money }}
                                              </option>
                                            {% endfor %}
                                          </select>
                                        </label>
                                      {% endif %}
                                    </div>
                                    
                                    {% liquid
                                      assign product = product_4f292680
                                      assign product_4f292680 = nil
                                      assign selected_variant = selected_variant_4f292680
                                      assign selected_variant_4f292680 = nil
                                    %}
                                    {% comment %}Component variant-selector:default end{% endcomment %}
                                    {% comment %}Component options-selector:default begin{% endcomment %}
                                    {% liquid
                                      assign product_fac133c5 = product
                                      assign product = cross_sell_product
                                      assign product_option_style_fac133c5 = product_option_style
                                      assign product_option_style = 'dropdowns'
                                      assign sold_out_options_fac133c5 = sold_out_options
                                      assign sold_out_options = 'hidden'
                                      assign swatches_enable_fac133c5 = swatches_enable
                                      assign swatches_enable = false
                                      assign selected_variant_fac133c5 = selected_variant
                                      assign selected_variant = variant
                                    %}
                                    {% comment %}
                                      Display variant options for a product
                                    
                                      @param product
                                        The product object
                                    
                                      @param product_option_style
                                    
                                      @param sold_out_options
                                    
                                      @param swatches_enable
                                    
                                      @param swatches_option_style
                                    
                                      @param selected_variant
                                        The selected variant object
                                    {% endcomment %}
                                    
                                    {% comment %}UUID options_selector_id begin{% endcomment %}
                                    {% assign options_selector_id = 'a355fcee-45db-4ecc-b381-c9aa376279ed' %}
                                    {% comment %}UUID options_selector_id end{% endcomment %}
                                    {% liquid
                                      assign style = product_option_style
                                      assign sold_out_options = sold_out_options
                                      assign enable_swatches = swatches_enable
                                      assign show_variant_images = false
                                      if swatches_option_style == 'variant_image'
                                        assign show_variant_images = true
                                      endif
                                    %}
                                    
                                    <div
                                      data-component="options-selector"
                                      data-component-type="component"
                                      {% if tag != blank %}data-component-tag="{{ tag }}"
                                      {% endif %}class="options-selector"
                                      {% if sold_out_options == 'disabled' %}data-disable-unavailable{% endif %}
                                      {% if sold_out_options == 'hidden' %}data-remove-unavailable{% endif %}
                                      {% if product.has_only_default_variant %}hidden{% endif %}
                                    >
                                      <script
                                        type="application/json"
                                        data-component-data
                                      >
                                        {
                                          "disable_unavailable": {% if sold_out_options == 'disabled' %}true{% else %}false{% endif %},
                                          "remove_unavailable": {% if sold_out_options == 'hidden' %}true{% else %}false{% endif %}
                                        }
                                      </script>
                                    
                                      {% for option in product.options_with_values %}
                                        {% assign input_id = options_selector_id | append: '-' | append: forloop.index %}
                                        {% assign option_index = forloop.index0 %}
                                        {% assign show_swatches = false %}
                                        {% if enable_swatches and option.name == 'Color' %}
                                          {% assign show_swatches = true %}
                                        {% endif %}
                                    
                                        {% if style == 'select' and show_swatches == false %}
                                          {% comment %}Component option-dropdown:default begin{% endcomment %}
                                          {% comment %}
                                            Display option as a select
                                          
                                            @param option [Required]
                                              The option to display
                                          
                                            @param input_id [Required]
                                              The option id to apply to the label and input
                                          
                                            @param selected_variant [Optional]
                                              The selected variant to optionally default to
                                          {% endcomment %}
                                          
                                          <div data-component="option-dropdown" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="option-dropdown">
                                            <script
                                              type="application/json"
                                              data-component-data
                                            >
                                              {
                                                "chosen_option": {{ option.name | json }},
                                                "choose_option": {{ 'product.options.choose_option' | t: option: option.name | json }},
                                                "position": {{ option.position | json }}
                                              }
                                            </script>
                                          
                                            {% capture options %}
                                              {% unless selected_variant %}
                                                <option
                                                  value=""
                                                  disabled
                                                  selected
                                                >
                                                  {{ 'product.options.choose_option' | t: option: option.name }}
                                                </option>
                                              {% endunless %}
                                              {% for value in option.values %}
                                                <option
                                                  value="{{ value | escape }}"
                                                  {% if selected_variant and option.selected_value == value %}selected{% endif %}
                                                >
                                                  {{ value }}
                                                </option>
                                              {% endfor %}
                                            {% endcapture %}
                                            {% liquid
                                              assign label_text = 'product.options.choose_option' | t: option: option.name
                                          
                                              if selected_variant
                                                assign label_text = option.name
                                              endif
                                            %}
                                            {% comment %}Component input-select:default begin{% endcomment %}
                                            {% comment %}
                                              @param label_text [Required]
                                                The text for the label to be included.
                                            
                                              @param options [Required]
                                                The list of options to include in the select.
                                            
                                              @param form_id [Optional]
                                                The form id to associate with
                                            
                                              @param input_id [Optional]
                                                The option id to apply to the label and input
                                            
                                              @param field_name [Optional]
                                                The field name for the form. Will be used for the "name" attribute.
                                            
                                              @param attributes [Optional]
                                                Additional attributes to append to the input field.
                                            {% endcomment %}
                                            
                                            {% if input_id == blank %}
                                              {% comment %}UUID input_id begin{% endcomment %}
                                              {% assign input_id = '8dd550bc-9e7b-46e9-8176-efe98aa32976' %}
                                              {% comment %}UUID input_id end{% endcomment %}
                                            {% endif %}
                                            
                                            <div data-component="input-select" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="input-select">
                                              <label class="input-select__label" for="{{ input_id }}" data-label>{{ label_text }}</label>
                                              <div class="input-select__wrapper">
                                                <select
                                                  id="{{ input_id }}"
                                                  class="input-select__select"
                                                  {% if form_id != blank %}form="{{ form_id }}"{% endif %}
                                                  {% if field_name != blank %}name="{{ field_name }}"{% endif %}
                                                  {{ attributes }}
                                                  data-input
                                                >
                                                  {{ options }}
                                                </select>
                                              </div>
                                            </div>
                                            
                                            {% comment %}Component input-select:default end{% endcomment %}
                                          </div>
                                          
                                          {% comment %}Component option-dropdown:default end{% endcomment %}
                                        {% else %}
                                          {% comment %}Component option-selectable-boxes:default begin{% endcomment %}
                                          {% comment %}
                                            Display option as a selectable boxes, optionally as swatches
                                          
                                            @param option [Required]
                                              The option to display
                                          
                                            @param product [Required]
                                              The product object
                                          
                                            @param input_id [Required]
                                              The option id to apply to the label and input
                                          
                                            @param selected_variant [Optional]
                                              The selected variant to optionally default to
                                          
                                            @param show_swatches [Optional]
                                              Whether to display fieldset as swatches instead of radios
                                          
                                            @param show_variant_images [Optional]
                                              Whether to display variant images inside of swatch
                                          {% endcomment %}
                                          <div
                                            data-component="option-selectable-boxes"
                                            data-component-type="component"
                                            {% if tag != blank %}data-component-tag="{{ tag }}"
                                            {% endif %}class="option-selectable-boxes"
                                          >
                                            <script
                                              type="application/json"
                                              data-component-data
                                            >
                                              {
                                                "chosen_option": {{ 'product.options.chosen_option_html' | t: option: option.name, value: '|value|' | json }},
                                                "choose_option": {{ 'product.options.choose_option' | t: option: option.name | json }},
                                                "position": {{ option.position | json }}
                                              }
                                            </script>
                                          
                                            {% capture values %}
                                              {% liquid
                                                assign group_name = option.name | append: section.id | url_encode
                                          
                                                if show_swatches and show_variant_images
                                                  comment
                                                    The following builds out several variables that are used within this and other sub-components:
                                                      - option_value_array which contains the names of all of the option value variants for this product
                                                      - variant_indices_array which contains an the indices of the variants which are in the option_value_array
                                                  endcomment
                                          
                                                  assign option_key =  'option' | append: option.position
                                                  assign option_value_variants_added = '|'
                                                  assign variant_indices_string = ''
                                          
                                                  for next_variant in product.variants
                                                    assign search_string = '|' | append: next_variant[option_key] | append: '|'
                                                    unless option_value_variants_added contains search_string
                                                      if next_variant.featured_image != blank
                                                        assign option_value_variants_added = option_value_variants_added | append: next_variant[option_key] | append: '|'
                                                        assign variant_indices_string = variant_indices_string | append: '|' | append: forloop.index0
                                                      endif
                                                    endunless
                                                  endfor
                                          
                                                  assign option_value_array = option_value_variants_added | remove_first: '|' | split: '|'
                                                  assign variant_indices_array = variant_indices_string | remove_first: '|' | split: '|'
                                                endif
                                              %}
                                          
                                              {% for value in option.values %}
                                                {% liquid
                                                  assign value_input_id = input_id | append: '-' | append: forloop.index
                                                  assign checked = false
                                          
                                                  if selected_variant and option.selected_value == value
                                                    assign checked = true
                                                  endif
                                                %}
                                          
                                                {% if show_swatches %}
                                                  {% liquid
                                                    assign image = blank
                                                    if show_variant_images
                                                      for option_value in option_value_array
                                                        if option_value == value
                                                          assign variant_index = variant_indices_array[forloop.index0] | times: 1
                                                          assign image = product.variants[variant_index].featured_image
                                                          break
                                                        endif
                                                      endfor
                                                    endif
                                                  %}
                                                  {% comment %}Component input-swatch:default begin{% endcomment %}
                                                  {% liquid
                                                    assign label_text_ad2108ed = label_text
                                                    assign label_text = value
                                                    assign input_value_ad2108ed = input_value
                                                    assign input_value = value
                                                    assign input_id_ad2108ed = input_id
                                                    assign input_id = value_input_id
                                                  %}
                                                  {% comment %}
                                                    @param label_text [Required]
                                                      The text for the label to be included.
                                                  
                                                    @param group_name [Required]
                                                      The group name the radio belongs to.
                                                  
                                                    @param input_value [Required]
                                                      The input value.
                                                  
                                                    @param input_id [Optional]
                                                      The option id to apply to the label and input
                                                  
                                                    @param attributes [Optional]
                                                      Additional attributes to append to the input field.
                                                  
                                                    @param image [Optional]
                                                      Image to display as swatch
                                                  {% endcomment %}
                                                  
                                                  {% if input_id == blank %}
                                                    {% comment %}UUID input_id begin{% endcomment %}
                                                    {% assign input_id = 'd440dc85-02ad-4762-b505-d2ee88e505d1' %}
                                                    {% comment %}UUID input_id end{% endcomment %}
                                                  {% endif %}
                                                  {% liquid
                                                    assign required = required | default: false
                                                    assign disabled = disabled | default: false
                                                    assign checked = checked | default: false
                                                    assign unavailable = unavailable | default: false
                                                  %}
                                                  
                                                  <div
                                                    data-component="input-swatch"
                                                    data-component-type="component"
                                                    {% if tag != blank %}data-component-tag="{{ tag }}"
                                                    {% endif %}class="
                                                      input-swatch
                                                      input-swatch__fill--{{ settings.swatch_shape }}
                                                    "
                                                    {% if disabled %}data-disabled{% endif %}
                                                    {% if checked %}data-checked{% endif %}
                                                    {% if unavailable %}data-unavailable{% endif %}
                                                  >
                                                    <input
                                                      id="{{ input_id }}"
                                                      class="input-swatch__input"
                                                      type="radio"
                                                      name="{{ group_name }}"
                                                      value="{{ input_value }}"
                                                      tabindex="0"
                                                      aria-label="{{ input_value | escape }}"
                                                      {% if required %}required{% endif %}
                                                      {% if disabled %}disabled{% endif %}
                                                      {% if checked %}checked{% endif %}
                                                      {{ attributes }}
                                                      data-input
                                                    >
                                                  
                                                    <label class="input-swatch__label visually-hidden" for="{{ input_id }}">{{ label_text }}</label>
                                                  
                                                    {% comment %}Component swatch:default begin{% endcomment %}
                                                    {% liquid
                                                      assign color_name_cccc17fa = color_name
                                                      assign color_name = value
                                                      assign variant_image_cccc17fa = variant_image
                                                      assign variant_image = image
                                                    %}
                                                    {% comment %}
                                                      @param color_name {String} [Required]
                                                        Color name for which to find a suitable background
                                                    
                                                      @param variant_image {Boolean} [Optional]
                                                        Will display a this variant image, instead of a swatch color.
                                                    
                                                      @param show_tooltip {Booleal} [Optional]
                                                        If true, will show tooltip on hover of the swatch.
                                                    {% endcomment %}
                                                    
                                                    {%- assign variant_image = variant_image | default: blank -%}
                                                    
                                                    {%- assign swatch_color = blank -%}
                                                    {%- assign swatch_image = blank -%}
                                                    {%- assign custom_colors = settings.swatches_custom_colors -%}
                                                    
                                                    {% comment %} First look for a defined custom color {% endcomment %}
                                                    {%- assign custom_colors = custom_colors | newline_to_br | strip_newlines | split: '<br />' -%}
                                                    {%- assign swatch_search_color = color_name | downcase -%}
                                                    {%- for custom_entry in custom_colors -%}
                                                      {%- assign custom_color = custom_entry | split: ':' -%}
                                                      {%- assign custom_color_name = custom_color[0] | strip | downcase -%}
                                                      {%- assign custom_color_value = custom_color[1] | strip -%}
                                                      {%- if swatch_search_color == custom_color_name -%}
                                                        {% assign swatch_color = custom_color_value %}
                                                        {%- break -%}
                                                      {%- endif -%}
                                                    {%- endfor -%}
                                                    
                                                    {% comment %} Otherwise default to the raw color name, which will either be a
                                                    valid named HTML color and displayed as such, or will be ignored by the browser. {% endcomment %}
                                                    {%- if swatch_color == blank -%}
                                                      {% assign swatch_color = color_name | replace: " ", "" | handleize %}
                                                    {%- endif -%}
                                                    
                                                    {% comment %} Use a variant image for the swatch if one exists. {% endcomment %}
                                                    {%- if variant_image != blank -%}
                                                      {% assign swatch_image = variant_image %}
                                                    {%- else -%}
                                                      {% comment %} If not using variant images, look for a image that matches the color name in the theme's files. {% endcomment %}
                                                      {% assign swatch_file_name = color_name | downcase | handleize | append: '.png' %}
                                                      {%- if images[swatch_file_name] != blank -%}
                                                        {%- assign swatch_image = images[swatch_file_name] -%}
                                                      {%- endif -%}
                                                    {%- endif -%}
                                                    
                                                    <div
                                                      data-component="swatch"
                                                      data-component-type="component"
                                                      {% if tag != blank %}data-component-tag="{{ tag }}"
                                                      {% endif %}class="swatch"
                                                      {% if swatch_image == blank %}
                                                        style="--swatch-color: {{ swatch_color }};"
                                                      {% endif %}
                                                    >
                                                      <span class="swatch__label {% unless show_tooltip %}visually-hidden{% endunless %}">{{ color_name }}</span>
                                                      <div
                                                        class="
                                                          swatch__fill
                                                          swatch__fill--{{ settings.swatch_shape }}
                                                        "
                                                      >
                                                        {% if swatch_image != blank %}
                                                          {% comment %}Component lazy-img:default begin{% endcomment %}
                                                          {% render 'lazy-img', img: swatch_image, size: '50x', crop_focus: 'center', lazy: true, canvas: true %}
                                                          {% comment %}Component lazy-img:default end{% endcomment %}
                                                        {% endif %}
                                                      </div>
                                                    </div>
                                                    
                                                    {% liquid
                                                      assign color_name = color_name_cccc17fa
                                                      assign color_name_cccc17fa = nil
                                                      assign variant_image = variant_image_cccc17fa
                                                      assign variant_image_cccc17fa = nil
                                                    %}
                                                    {% comment %}Component swatch:default end{% endcomment %}
                                                  </div>
                                                  
                                                  {% liquid
                                                    assign label_text = label_text_ad2108ed
                                                    assign label_text_ad2108ed = nil
                                                    assign input_value = input_value_ad2108ed
                                                    assign input_value_ad2108ed = nil
                                                    assign input_id = input_id_ad2108ed
                                                    assign input_id_ad2108ed = nil
                                                  %}
                                                  {% comment %}Component input-swatch:default end{% endcomment %}
                                                {% else %}
                                                  {% comment %}Component input-radio:default begin{% endcomment %}
                                                  {% liquid
                                                    assign label_text_b6531f1f = label_text
                                                    assign label_text = value
                                                    assign input_value_b6531f1f = input_value
                                                    assign input_value = value
                                                    assign input_id_b6531f1f = input_id
                                                    assign input_id = value_input_id
                                                  %}
                                                  {% comment %}
                                                    @param label_text [Required]
                                                      The text for the label to be included.
                                                  
                                                    @param group_name [Required]
                                                      The group name the radio belongs to.
                                                  
                                                    @param input_value [Required]
                                                      The input value.
                                                  
                                                    @param input_id [Optional]
                                                      The option id to apply to the label and input
                                                  
                                                    @param required [Optional]
                                                      Whether the input is required
                                                  
                                                    @param disabled [Optional]
                                                      Whether the input is disabled
                                                  
                                                    @param checked [Optional]
                                                      Whether the input is checked
                                                  
                                                    @param unavailable [Optional]
                                                      Whether the input is unavailable
                                                  
                                                    @param attributes [Optional]
                                                      Additional attributes to append to the input field.
                                                  {% endcomment %}
                                                  
                                                  {% if input_id == blank %}
                                                    {% comment %}UUID input_id begin{% endcomment %}
                                                    {% assign input_id = '338e1aac-66c3-4877-bae3-61c96911c69c' %}
                                                    {% comment %}UUID input_id end{% endcomment %}
                                                  {% endif %}
                                                  {% liquid
                                                    assign required = required | default: false
                                                    assign disabled = disabled | default: false
                                                    assign checked = checked | default: false
                                                    assign unavailable = unavailable | default: false
                                                  %}
                                                  
                                                  <div
                                                    data-component="input-radio"
                                                    data-component-type="component"
                                                    {% if tag != blank %}data-component-tag="{{ tag }}"
                                                    {% endif %}class="input-radio"
                                                    {% if disabled %}data-disabled{% endif %}
                                                    {% if checked %}data-checked{% endif %}
                                                    {% if unavailable %}data-unavailable{% endif %}
                                                  >
                                                    <input
                                                      class="input-radio__input"
                                                      id="{{ input_id }}"
                                                      type="radio"
                                                      name="{{ group_name }}"
                                                      value="{{ input_value | escape }}"
                                                      tabindex="0"
                                                      aria-label="{{ input_value | escape }}"
                                                      {% if required %}required{% endif %}
                                                      {% if disabled %}disabled{% endif %}
                                                      {% if checked %}checked{% endif %}
                                                      {{ attributes }}
                                                      data-input
                                                    >
                                                  
                                                    <label class="input-radio__label" for="{{ input_id }}">{{ label_text }}</label>
                                                  </div>
                                                  
                                                  {% liquid
                                                    assign label_text = label_text_b6531f1f
                                                    assign label_text_b6531f1f = nil
                                                    assign input_value = input_value_b6531f1f
                                                    assign input_value_b6531f1f = nil
                                                    assign input_id = input_id_b6531f1f
                                                    assign input_id_b6531f1f = nil
                                                  %}
                                                  {% comment %}Component input-radio:default end{% endcomment %}
                                                {% endif %}
                                              {% endfor %}
                                            {% endcapture %}
                                            {% liquid
                                              assign label_text = 'product.options.choose_option' | t: option: option.name
                                              assign option_value_html = '<span>' | append: option.selected_value | append: '</span>'
                                          
                                              if selected_variant
                                                assign label_text = 'product.options.chosen_option_html' | t: option: option.name, value: option_value_html
                                              endif
                                            %}
                                            {% comment %}Component input-fieldset:default begin{% endcomment %}
                                            {% comment %}
                                              @param label_text [Required]
                                                The text for the label to be included.
                                            
                                              @param values [Required]
                                                The list of values to include in the fieldset.
                                            
                                              @param form_id [Optional]
                                                The form id to associate with
                                            
                                              @param field_name [Optional]
                                                The field name for the form. Will be used for the "name" attribute.
                                            
                                              @param attributes [Optional]
                                                Additional attributes to append to the input field.
                                            {% endcomment %}
                                            
                                            <fieldset
                                              data-component="input-fieldset"
                                              data-component-type="component"
                                              {% if tag != blank %}data-component-tag="{{ tag }}"
                                              {% endif %}class="input-fieldset"
                                              {% unless name == blank %}name="{{ field_name }}"{% endunless %}
                                              {% unless form_id == blank %}form="{{ form_id }}"{% endunless %}
                                              {{ attributes }}
                                            >
                                              <legend class="input-fieldset__legend" data-label>{{ label_text }}</legend>
                                            
                                              <div class="input-fieldset__values">
                                                {{ values }}
                                              </div>
                                            </fieldset>
                                            
                                            {% comment %}Component input-fieldset:default end{% endcomment %}
                                          </div>
                                          
                                          {% comment %}Component option-selectable-boxes:default end{% endcomment %}
                                        {% endif %}
                                      {% endfor %}
                                    </div>
                                    
                                    {% liquid
                                      assign product = product_fac133c5
                                      assign product_fac133c5 = nil
                                      assign product_option_style = product_option_style_fac133c5
                                      assign product_option_style_fac133c5 = nil
                                      assign sold_out_options = sold_out_options_fac133c5
                                      assign sold_out_options_fac133c5 = nil
                                      assign swatches_enable = swatches_enable_fac133c5
                                      assign swatches_enable_fac133c5 = nil
                                      assign selected_variant = selected_variant_fac133c5
                                      assign selected_variant_fac133c5 = nil
                                    %}
                                    {% comment %}Component options-selector:default end{% endcomment %}
                                    {% comment %}Component buy-buttons:default begin{% endcomment %}
                                    {% liquid
                                      assign product_e780bcfa = product
                                      assign product = cross_sell_product
                                      assign is_variant_selected_e780bcfa = is_variant_selected
                                      assign is_variant_selected = true
                                      assign selected_variant_e780bcfa = selected_variant
                                      assign selected_variant = variant
                                      assign show_dynamic_checkout_e780bcfa = show_dynamic_checkout
                                      assign show_dynamic_checkout = false
                                      assign exclude_surface_pickup_e780bcfa = exclude_surface_pickup
                                      assign exclude_surface_pickup = true
                                    %}
                                    {% comment %}
                                      @param product [Required]
                                    
                                      @param is_variant_selected [Optional]
                                    
                                      @param selected_variant [Optional]
                                    
                                      @param form_id [Optional]
                                    
                                      @param show_dynamic_checkout [Optional]
                                    {% endcomment %}
                                    
                                    <div data-component="buy-buttons" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="buy-buttons">
                                      <script
                                        type="application/json"
                                        data-component-data
                                      >
                                        {
                                          "unavailable": "{{ 'product.buy_buttons.unavailable' | t }}",
                                          "soldOut": "{{ 'product.buy_buttons.sold_out' | t }}",
                                          "addToCart": "{{ 'product.buy_buttons.add_to_cart' | t }}"
                                        }
                                      </script>
                                      {% capture buy_buttons %}
                                          {% liquid
                                            assign attributes = ''
                                            assign text = ''
                                            assign state = ''
                                    
                                            if product == blank
                                              assign text = 'product.buy_buttons.unavailable' | t
                                              assign attributes = 'disabled'
                                              assign state = 'unavailable'
                                            elsif selected_variant
                                              if selected_variant.available
                                                assign text = 'product.buy_buttons.add_to_cart' | t
                                                assign state = 'available'
                                              else
                                                assign text = 'product.buy_buttons.sold_out' | t
                                                assign attributes = 'disabled'
                                                assign state = 'sold out'
                                              endif
                                            elsif is_variant_selected
                                              assign text = 'product.buy_buttons.unavailable' | t
                                              assign attributes = 'disabled'
                                              assign state = 'unavailable'
                                            else
                                              assign text = 'product.buy_buttons.select_variant' | t
                                              assign attributes = 'disabled'
                                            endif
                                          %}
                                    
                                          {% comment %}Component button-action:default begin{% endcomment %}
                                          {% liquid
                                            assign style_879c2525 = style
                                            assign style = 'primary'
                                            assign size_879c2525 = size
                                            assign size = 'medium'
                                          %}
                                          {% comment %}
                                            @param style [Required]
                                              This is the style of the button: primary, secondary, or tertiary. Default primary.
                                          
                                            @param size [Required]
                                              This defines the size of the button: small, medium, or large. Default medium.
                                          
                                            @param text [Required]
                                              This is the text to be included in the button.
                                          
                                            @param attributes [Optional]
                                              This will include any additional attributes that the button needs. For example, aria-controls.
                                          {% endcomment %}
                                          
                                          <button
                                            data-component="button-action"
                                            data-component-type="component"
                                            {% if tag != blank %}data-component-tag="{{ tag }}"
                                            {% endif %}class="button-action button-action--{{ style }} button-action--{{ size }}{% if style == 'primary' or style == 'secondary' %} button-action--shadow{% endif %%}"
                                            aria-busy="false"
                                            aria-live="polite"
                                            {{ attributes }}
                                          >
                                            {{ text }}
                                          </button>
                                          
                                          {% liquid
                                            assign style = style_879c2525
                                            assign style_879c2525 = nil
                                            assign size = size_879c2525
                                            assign size_879c2525 = nil
                                          %}
                                          {% comment %}Component button-action:default end{% endcomment %}
                                    
                                          {% assign attributes = nil %}
                                      {% endcapture %}
                                    
                                      {% if product != blank %}
                                        {% form 'product', product, id: form_id, class: 'buy-buttons__form' %}
                                          {% if show_gift_card_recipient_form and product.gift_card? %}
                                            {% comment %}Component gift-card-recipient-form:default begin{% endcomment %}
                                            {%- liquid
                                              assign checkbox_label = 'gift_card_recipient_form.checkbox_label' | t
                                            
                                              assign email_label = 'gift_card_recipient_form.email_label' | t
                                              assign email_placeholder = 'gift_card_recipient_form.email_placeholder' | t
                                            
                                              assign error_message = 'gift_card_recipient_form.error_message' | t
                                            
                                              assign name_label = 'gift_card_recipient_form.name_label' | t
                                              assign name_placeholder = 'gift_card_recipient_form.name_placeholder' | t
                                            
                                              assign message_label = 'gift_card_recipient_form.message_label' | t
                                              assign message_placeholder = 'gift_card_recipient_form.message_placeholder' | t
                                            
                                              assign max_characters = 200
                                              assign max_characters_message = 'gift_card_recipient_form.max_characters_message' | t: max_characters: max_characters
                                            -%}
                                            
                                            {%- capture email_label_required -%}
                                              {{ email_label }} <span aria-hidden="true">*</span>
                                            {%- endcapture -%}
                                            
                                            <div data-component="gift-card-recipient-form" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="recipient-form" data-recipient-form>
                                              {% comment %}Component input-checkbox:default begin{% endcomment %}
                                              {% liquid
                                                assign form_namespace_ffa1f129 = form_namespace
                                                assign form_namespace = 'properties'
                                                assign field_name_ffa1f129 = field_name
                                                assign field_name = '__shopify_send_gift_card_to_recipient'
                                                assign label_text_ffa1f129 = label_text
                                                assign label_text = checkbox_label
                                                assign attributes_ffa1f129 = attributes
                                                assign attributes = 'data-input-checkbox'
                                              %}
                                              {% comment %}
                                                @param label_text [Required]
                                                  The text for the label to be included.
                                              
                                                @param form_namespace [Required]
                                                  The form's namespace that is used in "name" attribute as form_namespace[field_name].
                                              
                                                @param field_name [Required]
                                                  The field name for the form. Will be used for the "name" attribute.
                                              
                                                @param form_id [Optional]
                                              
                                                @param hide_label [Optional]
                                                  Hide the label text as an aria-label
                                              
                                                @param field_value [Optional]
                                                  The value for the checkbox.
                                              
                                                @param checked [Optional]
                                                  Boolean. If true, the checkbox will appear checked.
                                              
                                                @param disabled [Optional]
                                                  Boolean. If true, the checkbox will appear disabled.
                                              
                                                @param attributes [Optional]
                                                  Additional attributes to append to the input field.
                                              {% endcomment %}
                                              
                                              <div
                                                data-component="input-checkbox"
                                                data-component-type="component"
                                                {% if tag != blank %}data-component-tag="{{ tag }}"
                                                {% endif %}class="
                                                  input-checkbox
                                                  {% if checked %}input-checkbox--checked{% endif %}
                                                  {% if disabled %}input-checkbox--disabled{% endif %}
                                                "
                                              >
                                                {% unless hide_label %}
                                                  <label class="input-checkbox__label">
                                                    <input
                                                      class="input-checkbox__checkbox"
                                                      type="checkbox"
                                                      name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                                                      {% if form_id %}form="{{ form_id }}"{% endif %}
                                                      {% if field_value %}value="{{ field_value }}"{% endif %}
                                                      {% if checked %}checked{% endif %}
                                                      {% if disabled %}disabled{% endif %}
                                                      {{ attributes }}
                                                    >
                                                    {{ label_text }}
                                                  </label>
                                                {% else %}
                                                  <input
                                                    class="input-checkbox__checkbox"
                                                    type="checkbox"
                                                    name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                                                    {% if form_id %}form="{{ form_id }}"{% endif %}
                                                    {% if field_value %}value="{{ field_value }}"{% endif %}
                                                    {% if checked %}checked{% endif %}
                                                    {% if disabled %}disabled{% endif %}
                                                    aria-label="{{ label_text }}"
                                                    {{ attributes }}
                                                  >
                                                {% endunless %}
                                              </div>
                                              
                                              {% liquid
                                                assign form_namespace = form_namespace_ffa1f129
                                                assign form_namespace_ffa1f129 = nil
                                                assign field_name = field_name_ffa1f129
                                                assign field_name_ffa1f129 = nil
                                                assign label_text = label_text_ffa1f129
                                                assign label_text_ffa1f129 = nil
                                                assign attributes = attributes_ffa1f129
                                                assign attributes_ffa1f129 = nil
                                              %}
                                              {% comment %}Component input-checkbox:default end{% endcomment %}
                                            
                                              <div class="recipient-form__fields">
                                                {% comment %}Component input-email:default begin{% endcomment %}
                                                {% liquid
                                                  assign form_namespace_90e891e8 = form_namespace
                                                  assign form_namespace = 'properties'
                                                  assign field_name_90e891e8 = field_name
                                                  assign field_name = 'Recipient email'
                                                  assign input_class_90e891e8 = input_class
                                                  assign input_class = 'recipient-form__email'
                                                  assign input_id_90e891e8 = input_id
                                                  assign input_id = 'recipient-form__email'
                                                  assign label_text_90e891e8 = label_text
                                                  assign label_text = email_label_required
                                                  assign placeholder_90e891e8 = placeholder
                                                  assign placeholder = email_placeholder
                                                  assign attributes_90e891e8 = attributes
                                                  assign attributes = 'data-input data-input-email'
                                                %}
                                                {% comment %}
                                                  @param form [Required]
                                                    The form that the input lives in.
                                                
                                                  @param label_text [Required]
                                                    The text for the label to be included.
                                                
                                                  @param form_namespace [Required]
                                                    The form's namespace that is used in "name" attribute as form_namespace[field_name].
                                                
                                                  @param field_name [Required]
                                                    The field name for the form. Will be used for the "name" attribute.
                                                
                                                  @param input_class [Optional]
                                                    The class for the input field.
                                                
                                                  @param input_id [Optional]
                                                    The type of field that is being rendered. Usually text, password, number, etc.
                                                
                                                  @param placeholder [Optional]
                                                    The placeholder for the input field.
                                                
                                                  @param attributes [Optional]
                                                    Additional attributes to append to the input field.
                                                {% endcomment %}
                                                
                                                {% if input_id == blank %}
                                                  {% comment %}UUID input_id begin{% endcomment %}
                                                  {% assign input_id = 'c611e23e-f0ff-4512-8a75-79eaf67ca0e9' %}
                                                  {% comment %}UUID input_id end{% endcomment %}
                                                {% endif %}
                                                
                                                <div data-component="input-email" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="input-field">
                                                  <label for="{{ input_id }}">{{ label_text }}</label>
                                                  <input
                                                    class="{{ input_class }}"
                                                    id="{{ input_id }}"
                                                    type="email"
                                                    name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                                                    value="{{ form[field_name] }}"
                                                    placeholder="{{ placeholder }}"
                                                    autocapitalize="off"
                                                    autocorrect="off"
                                                    spellcheck="false"
                                                    {% if form.errors contains 'email' %}
                                                      aria-invalid="true"
                                                    {% endif %}
                                                    {{ attributes }}
                                                  >
                                                </div>
                                                
                                                {% liquid
                                                  assign form_namespace = form_namespace_90e891e8
                                                  assign form_namespace_90e891e8 = nil
                                                  assign field_name = field_name_90e891e8
                                                  assign field_name_90e891e8 = nil
                                                  assign input_class = input_class_90e891e8
                                                  assign input_class_90e891e8 = nil
                                                  assign input_id = input_id_90e891e8
                                                  assign input_id_90e891e8 = nil
                                                  assign label_text = label_text_90e891e8
                                                  assign label_text_90e891e8 = nil
                                                  assign placeholder = placeholder_90e891e8
                                                  assign placeholder_90e891e8 = nil
                                                  assign attributes = attributes_90e891e8
                                                  assign attributes_90e891e8 = nil
                                                %}
                                                {% comment %}Component input-email:default end{% endcomment %}
                                            
                                                {% comment %}Component notification:default begin{% endcomment %}
                                                {% liquid
                                                  assign type_ec974805 = type
                                                  assign type = 'error'
                                                  assign content_ec974805 = content
                                                  assign content = error_message
                                                  assign hidden_ec974805 = hidden
                                                  assign hidden = true
                                                %}
                                                {%- comment -%}
                                                  @param content [Required]
                                                    The content that goes in the notification banner
                                                
                                                  @param type [Required]
                                                    The type of notification banner ('error' or 'success')
                                                
                                                  @param hidden [Optional]
                                                    Whether the notification should be hidden
                                                {%- endcomment -%}
                                                
                                                <div
                                                  data-component="notification"
                                                  data-component-type="component"
                                                  {% if tag != blank %}data-component-tag="{{ tag }}"
                                                  {% endif %}class="
                                                    notification
                                                    notification--{{ type }}
                                                  "
                                                  {% if type == 'error' %}
                                                    role="alert"
                                                  {% else %}
                                                    role="status"
                                                  {% endif %}
                                                  {% if hidden %}hidden{% endif %}
                                                >
                                                  {{ content }}
                                                </div>
                                                
                                                {% liquid
                                                  assign type = type_ec974805
                                                  assign type_ec974805 = nil
                                                  assign content = content_ec974805
                                                  assign content_ec974805 = nil
                                                  assign hidden = hidden_ec974805
                                                  assign hidden_ec974805 = nil
                                                %}
                                                {% comment %}Component notification:default end{% endcomment %}
                                            
                                                {% comment %}Component input-field:default begin{% endcomment %}
                                                {% liquid
                                                  assign form_namespace_8ead1de5 = form_namespace
                                                  assign form_namespace = 'properties'
                                                  assign field_name_8ead1de5 = field_name
                                                  assign field_name = 'Recipient name'
                                                  assign input_id_8ead1de5 = input_id
                                                  assign input_id = 'recipient-form__name'
                                                  assign input_type_8ead1de5 = input_type
                                                  assign input_type = 'text'
                                                  assign label_text_8ead1de5 = label_text
                                                  assign label_text = name_label
                                                  assign placeholder_8ead1de5 = placeholder
                                                  assign placeholder = name_placeholder
                                                  assign attributes_8ead1de5 = attributes
                                                  assign attributes = 'data-input'
                                                %}
                                                {% comment %}
                                                  @param form [Required]
                                                    The form that the input lives in.
                                                
                                                  @param form_namespace [Required]
                                                    The form's namespace that is used in "name" attribute as form_namespace[field_name].
                                                
                                                  @param field_name [Required]
                                                    The field name for the form. Will be used for the "name" attribute.
                                                
                                                  @param input_type [Required]
                                                    The type of field that is being rendered. Usually text, password, number, etc.
                                                
                                                  @param input_id [Optional]
                                                    The type of field that is being rendered. Usually text, password, number, etc.
                                                
                                                  @param label_text [Required]
                                                    The text for the label to be included.
                                                
                                                  @param placeholder [Optional]
                                                    The placeholder for the input field.
                                                
                                                  @param attributes [Optional]
                                                    Additional attributes to append to the input field.
                                                {% endcomment %}
                                                
                                                {% if input_id == blank %}
                                                  {% comment %}UUID input_id begin{% endcomment %}
                                                  {% assign input_id = 'f7147874-ec91-41f9-98e2-6edc7f642f35' %}
                                                  {% comment %}UUID input_id end{% endcomment %}
                                                {% endif %}
                                                
                                                <div data-component="input-field" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="input-field">
                                                  <label for="{{ input_id }}">{{ label_text }}</label>
                                                  <input
                                                    id="{{ input_id }}"
                                                    type="{{ input_type }}"
                                                    name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                                                    value="{{ form[field_name] }}"
                                                    placeholder="{{ placeholder }}"
                                                    {{ attributes }}
                                                  >
                                                </div>
                                                
                                                {% liquid
                                                  assign form_namespace = form_namespace_8ead1de5
                                                  assign form_namespace_8ead1de5 = nil
                                                  assign field_name = field_name_8ead1de5
                                                  assign field_name_8ead1de5 = nil
                                                  assign input_id = input_id_8ead1de5
                                                  assign input_id_8ead1de5 = nil
                                                  assign input_type = input_type_8ead1de5
                                                  assign input_type_8ead1de5 = nil
                                                  assign label_text = label_text_8ead1de5
                                                  assign label_text_8ead1de5 = nil
                                                  assign placeholder = placeholder_8ead1de5
                                                  assign placeholder_8ead1de5 = nil
                                                  assign attributes = attributes_8ead1de5
                                                  assign attributes_8ead1de5 = nil
                                                %}
                                                {% comment %}Component input-field:default end{% endcomment %}
                                            
                                                {% comment %}Component input-textarea:default begin{% endcomment %}
                                                {% liquid
                                                  assign form_namespace_ca6760f5 = form_namespace
                                                  assign form_namespace = 'properties'
                                                  assign field_name_ca6760f5 = field_name
                                                  assign field_name = 'Message'
                                                  assign input_id_ca6760f5 = input_id
                                                  assign input_id = 'recipient-form__message'
                                                  assign label_text_ca6760f5 = label_text
                                                  assign label_text = message_label
                                                  assign placeholder_ca6760f5 = placeholder
                                                  assign placeholder = message_placeholder
                                                  assign rows_ca6760f5 = rows
                                                  assign rows = 5
                                                  assign maxlength_ca6760f5 = maxlength
                                                  assign maxlength = max_characters
                                                %}
                                                {% comment %}
                                                  @param label_text [Required]
                                                    The text for the label to be included.
                                                
                                                  @param form_namespace [Required]
                                                    The form's namespace that is used in "name" attribute as form_namespace[field_name].
                                                
                                                  @param field_name [Required]
                                                    The field name for the form. Will be used for the "name" attribute.
                                                
                                                  @param form_id [Optional]
                                                    The form that the input lives in.
                                                
                                                  @param input_id [Optional]
                                                    The type of field that is being rendered. Usually text, password, number, etc.
                                                
                                                  @param input_text [Optional]
                                                    The initial text to display within the textarea
                                                
                                                  @param placeholder [Optional]
                                                    The placeholder for the input field.
                                                
                                                  @param attributes [Optional]
                                                    Additional attributes to append to the input field.
                                                
                                                  @param rows [Optional]
                                                    The number of rows for the textarea (height)
                                                
                                                  @param columns [Optional]
                                                    The number of columns for the textarea (width)
                                                
                                                  @param maxlength [Optional]
                                                    The maximum number of characters for the textarea
                                                {% endcomment %}
                                                
                                                {% if input_id == blank %}
                                                  {% comment %}UUID input_id begin{% endcomment %}
                                                  {% assign input_id = 'b2191a19-3931-4fbd-ac0d-07105fdb34ba' %}
                                                  {% comment %}UUID input_id end{% endcomment %}
                                                {% endif %}
                                                
                                                <div data-component="input-textarea" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="textarea">
                                                  <label for="{{ input_id }}">{{ label_text }}</label>
                                                  <textarea
                                                    id="{{ input_id }}"
                                                    name="{% if form_namespace %}{{ form_namespace }}[{{ field_name }}]{% else %}{{ field_name }}{% endif %}"
                                                    {% if form_id %}
                                                      form="{{ form_id }}"
                                                    {% endif %}
                                                    {% if rows %}rows="{{ rows }}"{% endif %}
                                                    {% if columns %}cols="{{ columns }}"{% endif %}
                                                    {% if maxlength %}maxlength="{{ maxlength }}"{% endif %}
                                                    placeholder="{{ placeholder }}"
                                                    {{ attributes }}
                                                    data-input
                                                  >
                                                    {%- if input_text != blank -%}{{- input_text -}}{%- endif -%}
                                                  </textarea>
                                                </div>
                                                
                                                {% liquid
                                                  assign form_namespace = form_namespace_ca6760f5
                                                  assign form_namespace_ca6760f5 = nil
                                                  assign field_name = field_name_ca6760f5
                                                  assign field_name_ca6760f5 = nil
                                                  assign input_id = input_id_ca6760f5
                                                  assign input_id_ca6760f5 = nil
                                                  assign label_text = label_text_ca6760f5
                                                  assign label_text_ca6760f5 = nil
                                                  assign placeholder = placeholder_ca6760f5
                                                  assign placeholder_ca6760f5 = nil
                                                  assign rows = rows_ca6760f5
                                                  assign rows_ca6760f5 = nil
                                                  assign maxlength = maxlength_ca6760f5
                                                  assign maxlength_ca6760f5 = nil
                                                %}
                                                {% comment %}Component input-textarea:default end{% endcomment %}
                                            
                                                <div class="recipient-form__max-characters-message">
                                                  <small>
                                                    {{- max_characters_message -}}
                                                  </small>
                                                </div>
                                              </div>
                                            </div>
                                            
                                            {% comment %}Component gift-card-recipient-form:default end{% endcomment %}
                                          {% endif %}
                                    
                                          <div class="buy-buttons__buttons{% if show_dynamic_checkout %} buy-buttons__buttons--dynamic-checkout{% endif %}">
                                            {% comment %}Component notification:default begin{% endcomment %}
                                            {% liquid
                                              assign type_fe73a380 = type
                                              assign type = 'error'
                                              assign contents_fe73a380 = contents
                                              assign contents = ''
                                              assign hidden_fe73a380 = hidden
                                              assign hidden = true
                                            %}
                                            {%- comment -%}
                                              @param content [Required]
                                                The content that goes in the notification banner
                                            
                                              @param type [Required]
                                                The type of notification banner ('error' or 'success')
                                            
                                              @param hidden [Optional]
                                                Whether the notification should be hidden
                                            {%- endcomment -%}
                                            
                                            <div
                                              data-component="notification"
                                              data-component-type="component"
                                              {% if tag != blank %}data-component-tag="{{ tag }}"
                                              {% endif %}class="
                                                notification
                                                notification--{{ type }}
                                              "
                                              {% if type == 'error' %}
                                                role="alert"
                                              {% else %}
                                                role="status"
                                              {% endif %}
                                              {% if hidden %}hidden{% endif %}
                                            >
                                              {{ content }}
                                            </div>
                                            
                                            {% liquid
                                              assign type = type_fe73a380
                                              assign type_fe73a380 = nil
                                              assign contents = contents_fe73a380
                                              assign contents_fe73a380 = nil
                                              assign hidden = hidden_fe73a380
                                              assign hidden_fe73a380 = nil
                                            %}
                                            {% comment %}Component notification:default end{% endcomment %}
                                    
                                            {{ buy_buttons }}
                                    
                                            {% if show_dynamic_checkout and is_variant_selected and selected_variant.available %}
                                              {{ form | payment_button }}
                                            {% endif %}
                                          </div>
                                          {% unless exclude_surface_pickup %}
                                            {% comment %}Component surface-pick-up:default begin{% endcomment %}
                                            {% assign pick_up_availabilities = selected_variant.store_availabilities | where: 'pick_up_enabled', true %}
                                            
                                            <div data-component="surface-pick-up" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="surface-pick-up{%- unless selected_variant.available and pick_up_availabilities.size > 0 %} surface-pick-up--hidden{% endunless -%}">
                                              <template data-drawer-header-template>
                                                <h2 class="h4 surface-pick-up-drawer__heading">{{ product.title }}</h2>
                                                {% unless product.has_only_default_variant %}<span class="surface-pick-up-drawer__subheading">{{ selected_variant.title }}</span>{% endunless %}
                                              </template>
                                            
                                              <template data-drawer-template>
                                                {% comment %}Component surface-pick-up-drawer:default begin{% endcomment %}
                                                <div data-component="surface-pick-up-drawer" data-component-type="component" {% if tag != blank %}data-component-tag="{{ tag }}" {% endif %}class="surface-pick-up-drawer">
                                                  {% assign pick_up_availabilities = selected_variant.store_availabilities | where: 'pick_up_enabled', true %}
                                                  {% if selected_variant.available and pick_up_availabilities.size > 0 %}
                                                    {%- assign closest_location_country_code = pick_up_availabilities.first.location.address.country_code -%}
                                                    {%- assign imperialSystemCountries = 'US,MM,LR'  | split: ',' -%}
                                                    {%- if imperialSystemCountries contains closest_location_country_code -%}
                                                      {%- assign unit_system = 'imperial' -%}
                                                    {%- else -%}
                                                      {%- assign unit_system = 'metric' -%}
                                                    {%- endif -%}
                                                    <ul class="surface-pick-up-items" role="list">
                                                      {% for location in pick_up_availabilities %}
                                                        <li
                                                          class="surface-pick-up-item surface-pick-up-item--{% if location.available %}available{% else %}unavailable{% endif %}"
                                                          data-surface-pick-up-item
                                                        >
                                                          {% if location.available %}
                                                            <span class="surface-pick-up-item__in-stock-icon">{% comment %}Icon check:default begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="currentColor" stroke-width="1.5" d="m1.47 9.63 4.61 3.768 8.45-9.796"/></svg>
{% comment %}Icon check:default end{% endcomment %}</span>
                                                          {% else %}
                                                            <span class="surface-pick-up-item__out-of-stock-icon">{% comment %}Icon cross:default begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 13 13"><path d="m1.47 2.53 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm4.5 4.5 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm1.06 0 4.5-4.5-1.06-1.06-4.5 4.5 1.06 1.06Zm3.44-5.56-9 9 1.06 1.06 9-9-1.06-1.06Z"/></svg>
{% comment %}Icon cross:default end{% endcomment %}</span>
                                                          {% endif %}
                                                
                                                          <div class="surface-pick-up-item__header">
                                                            <h3 class="surface-pick-up-item__pick-up-location">{{ location.location.name }}</h3>
                                                            <p
                                                              class="surface-pick-up-item__pick-up-distance"
                                                            >
                                                              <span
                                                                data-distance
                                                                data-latitude="{{ location.location.latitude }}"
                                                                data-longitude="{{ location.location.longitude }}"
                                                              >
                                                              </span>
                                                              <span
                                                                data-distance-unit="{{ unit_system }}"
                                                              >
                                                                {%- if unit_system == 'imperial' -%}
                                                                  {{ 'store_availability.general.miles' | t }}
                                                                {%- else -%}
                                                                  {{ 'store_availability.general.kilometers' | t }}
                                                                {%- endif -%}
                                                              </span>
                                                            </p>
                                                          </div>
                                                
                                                          <div class="surface-pick-up-item__availability">
                                                            {% if location.available %}
                                                              {% assign pick_up_time = location.pick_up_time | downcase %}
                                                              {{ 'store_availability.general.available_for_pick_up_at_time_html' | t: pick_up_time: pick_up_time }}
                                                            {% else %}
                                                              {{ 'store_availability.general.unavailable_for_pick_up_at_time_html' | t }}
                                                            {% endif %}
                                                          </div>
                                                
                                                          <address class="surface-pick-up-item__address-info">
                                                            {{ location.location.address | format_address }}
                                                            {%- if location.location.phone.size > 0 %}
                                                              <a href="tel:{{ location.location.phone }}">{{ location.location.phone }}</a>
                                                            {%- endif -%}
                                                          </address>
                                                        </li>
                                                      {% endfor %}
                                                    </ul>
                                                  {% endif %}
                                                </div>
                                                
                                                {% comment %}Component surface-pick-up-drawer:default end{% endcomment %}
                                              </template>
                                            
                                              {% if selected_variant.available and pick_up_availabilities.size > 0 %}
                                                {% assign closest_location = pick_up_availabilities.first %}
                                            
                                                <div class="surface-pick-up-embed surface-pick-up-embed--{% if closest_location.available %}available{% else %}unavailable{% endif %}">
                                                  {% if closest_location.available %}
                                                    <span class="surface-pick-up-embed__in-stock-icon">{% comment %}Icon check:default begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="currentColor" stroke-width="1.5" d="m1.47 9.63 4.61 3.768 8.45-9.796"/></svg>
{% comment %}Icon check:default end{% endcomment %}</span>
                                                  {% else %}
                                                    <span class="surface-pick-up-embed__out-of-stock-icon">{% comment %}Icon cross:default begin{% endcomment %}
<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 13 13"><path d="m1.47 2.53 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm4.5 4.5 4.5 4.5 1.06-1.06-4.5-4.5-1.06 1.06Zm1.06 0 4.5-4.5-1.06-1.06-4.5 4.5 1.06 1.06Zm3.44-5.56-9 9 1.06 1.06 9-9-1.06-1.06Z"/></svg>
{% comment %}Icon cross:default end{% endcomment %}</span>
                                                  {% endif %}
                                            
                                                  <div class="surface-pick-up-embed__location-info">
                                                    {% if closest_location.available %}
                                                      <h3 class="surface-pick-up-embed__location-availability">{{ 'store_availability.general.available_for_pick_up_at_html' | t: location_name: closest_location.location.name }}</h3>
                                                      <small class="surface-pick-up-embed__location-pick-up-time">{{ closest_location.pick_up_time }}</small>
                                                    {% else %}
                                                      <h3 class="surface-pick-up-embed__location-availability">{{ 'store_availability.general.unavailable_for_pick_up_at_html' | t: location_name: closest_location.location.name }}</h3>
                                                    {% endif %}
                                                  </div>
                                            
                                                  {% assign text = 'store_availability.general.view_store_info' | t %}
                                                  {% if pick_up_availabilities.size > 1 %}
                                                    {% assign text = 'store_availability.general.check_other_stores' | t %}
                                                  {% endif %}
                                                  {% comment %}Component button:default begin{% endcomment %}
                                                  {% liquid
                                                    assign style_8d24e627 = style
                                                    assign style = 'text'
                                                    assign size_8d24e627 = size
                                                    assign size = 'small'
                                                    assign attributes_8d24e627 = attributes
                                                    assign attributes = 'type="button" aria-haspopup="dialog"'
                                                  %}
                                                  {% comment %}
                                                    @param style [Required]
                                                      This is the style of the button: primary, secondary, tertiary, or text. Default primary.
                                                  
                                                    @param size [Required]
                                                      This defines the size of the button: small, medium, or large. Default medium.
                                                  
                                                    @param text [Required]
                                                      This is the text to be included in the button.
                                                  
                                                    @param attributes [Optional]
                                                      This will include any additional attributes that the button needs. For example, aria-controls.
                                                  {% endcomment %}
                                                  
                                                  <button
                                                    data-component="button"
                                                    data-component-type="component"
                                                    {% if tag != blank %}data-component-tag="{{ tag }}"
                                                    {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                                                    {{ attributes }}
                                                  >
                                                    {{ text }}
                                                  </button>
                                                  
                                                  {% liquid
                                                    assign style = style_8d24e627
                                                    assign style_8d24e627 = nil
                                                    assign size = size_8d24e627
                                                    assign size_8d24e627 = nil
                                                    assign attributes = attributes_8d24e627
                                                    assign attributes_8d24e627 = nil
                                                  %}
                                                  {% comment %}Component button:default end{% endcomment %}
                                                </div>
                                              {% endif %}
                                            </div>
                                            
                                            {% comment %}Component surface-pick-up:default end{% endcomment %}
                                          {% endunless %}
                                        {% endform %}
                                      {% else %}
                                        <div class="buy-buttons__buttons{% if show_dynamic_checkout %} buy-buttons__buttons--dynamic-checkout{% endif %}">
                                          {{ buy_buttons }}
                                        </div>
                                      {% endif %}
                                    </div>
                                    
                                    {% liquid
                                      assign product = product_e780bcfa
                                      assign product_e780bcfa = nil
                                      assign is_variant_selected = is_variant_selected_e780bcfa
                                      assign is_variant_selected_e780bcfa = nil
                                      assign selected_variant = selected_variant_e780bcfa
                                      assign selected_variant_e780bcfa = nil
                                      assign show_dynamic_checkout = show_dynamic_checkout_e780bcfa
                                      assign show_dynamic_checkout_e780bcfa = nil
                                      assign exclude_surface_pickup = exclude_surface_pickup_e780bcfa
                                      assign exclude_surface_pickup_e780bcfa = nil
                                    %}
                                    {% comment %}Component buy-buttons:default end{% endcomment %}
                              
                                    <div class="cross-sell-card__buttons cross-sell-card__buttons--form">
                                      {% assign back_text = 'templates.cart.recommendations.back' | t %}
                                      {% comment %}Component button:default begin{% endcomment %}
                                      {% liquid
                                        assign style_8d24e627 = style
                                        assign style = 'text'
                                        assign size_8d24e627 = size
                                        assign size = 'small'
                                        assign text_8d24e627 = text
                                        assign text = back_text
                                        assign attributes_8d24e627 = attributes
                                        assign attributes = 'data-cross-sell-card-back'
                                      %}
                                      {% comment %}
                                        @param style [Required]
                                          This is the style of the button: primary, secondary, tertiary, or text. Default primary.
                                      
                                        @param size [Required]
                                          This defines the size of the button: small, medium, or large. Default medium.
                                      
                                        @param text [Required]
                                          This is the text to be included in the button.
                                      
                                        @param attributes [Optional]
                                          This will include any additional attributes that the button needs. For example, aria-controls.
                                      {% endcomment %}
                                      
                                      <button
                                        data-component="button"
                                        data-component-type="component"
                                        {% if tag != blank %}data-component-tag="{{ tag }}"
                                        {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                                        {{ attributes }}
                                      >
                                        {{ text }}
                                      </button>
                                      
                                      {% liquid
                                        assign style = style_8d24e627
                                        assign style_8d24e627 = nil
                                        assign size = size_8d24e627
                                        assign size_8d24e627 = nil
                                        assign text = text_8d24e627
                                        assign text_8d24e627 = nil
                                        assign attributes = attributes_8d24e627
                                        assign attributes_8d24e627 = nil
                                      %}
                                      {% comment %}Component button:default end{% endcomment %}
                                      {% assign details_text = 'templates.cart.recommendations.product_details' | t %}
                                      {% comment %}Component button-link:default begin{% endcomment %}
                                      {% liquid
                                        assign style_907caba9 = style
                                        assign style = 'text'
                                        assign size_907caba9 = size
                                        assign size = 'small'
                                        assign href_907caba9 = href
                                        assign href = cross_sell_product.url
                                        assign text_907caba9 = text
                                        assign text = details_text
                                        assign attributes_907caba9 = attributes
                                        assign attributes = 'data-cross-sell-card-details-link'
                                      %}
                                      {% comment %}
                                        @param href [Required]
                                          This is the anchor tag for the link button.
                                      
                                        @param style [Required]
                                          This is the style of the button: primary, secondary, tertiary, or text.
                                      
                                        @param size [Required]
                                          This defines the size of the button: small, medium, or large.
                                      
                                        @param text [Required]
                                          This is the text to be included in the button.
                                      
                                        @param attributes [Optional]
                                          Any additional attributes to add to the button-link tag.
                                      {% endcomment %}
                                      
                                      <a
                                        data-component="button-link"
                                        data-component-type="component"
                                        {% if tag != blank %}data-component-tag="{{ tag }}"
                                        {% endif %}class="button-link button-link--{{ style }} button-link--{{ size }}{% if style == 'primary' or style == 'secondary' %} button-link--shadow{% endif %%}"
                                        {% if href != blank %}
                                          href="{{ href }}"
                                        {% endif %}
                                        {{ attributes }}
                                      >
                                        {{ text }}
                                      </a>
                                      
                                      {% liquid
                                        assign style = style_907caba9
                                        assign style_907caba9 = nil
                                        assign size = size_907caba9
                                        assign size_907caba9 = nil
                                        assign href = href_907caba9
                                        assign href_907caba9 = nil
                                        assign text = text_907caba9
                                        assign text_907caba9 = nil
                                        assign attributes = attributes_907caba9
                                        assign attributes_907caba9 = nil
                                      %}
                                      {% comment %}Component button-link:default end{% endcomment %}
                                    </div>
                                  </div>
                                </div>
                              </div>
                              
                              
                              {% comment %}Component cross-sell-card:default end{% endcomment %}
                            </div>
                          {% endfor %}
                        {% endif %}
                      </div>
                        <div
                          class="cross-sell__navigation"
                          data-cross-sell-indicator
                        >
                        {% if recommendations.performed and recommendations.products_count > 1 %}
                          {%- capture prev_button_attributes -%}
                            data-cross-sell-previous
                            disabled
                            aria-label="{{ 'templates.cart.recommendations.previous' | t }}"
                          {%- endcapture -%}
                          {% comment %}Component button-text:default begin{% endcomment %}
                          {% liquid
                            assign attributes_088345c8 = attributes
                            assign attributes = prev_button_attributes
                            assign text_088345c8 = text
                            assign text = nav_button_text
                          %}
                          {% comment %}
                            @param text [Required]
                              This is the text to be included in the button.
                          
                            @param attributes [Optional]
                              This will include any additional attributes that the button needs. For example, aria-controls.
                          {% endcomment %}
                          
                          <button
                            data-component="button-text"
                            data-component-type="component"
                            {% if tag != blank %}data-component-tag="{{ tag }}"
                            {% endif %}class="button-text"
                            {{ attributes }}
                          >
                            {{ text }}
                          </button>
                          
                          {% liquid
                            assign attributes = attributes_088345c8
                            assign attributes_088345c8 = nil
                            assign text = text_088345c8
                            assign text_088345c8 = nil
                          %}
                          {% comment %}Component button-text:default end{% endcomment %}
              
                          <span>
                            <span
                              class="cross-sell__navigation-current"
                              data-index-current
                            >
                              {{ starting_index }}
                            </span>
                              {{ 'templates.cart.recommendations.of' | t }} {{ recommendations.products_count }}
                          </span>
              
                          {%- capture next_button_attributes -%}
                            data-cross-sell-next
                            aria-label="{{ 'templates.cart.recommendations.next' | t }}"
                          {%- endcapture -%}
                          {% comment %}Component button-text:default begin{% endcomment %}
                          {% liquid
                            assign attributes_088345c8 = attributes
                            assign attributes = next_button_attributes
                            assign text_088345c8 = text
                            assign text = nav_button_text
                          %}
                          {% comment %}
                            @param text [Required]
                              This is the text to be included in the button.
                          
                            @param attributes [Optional]
                              This will include any additional attributes that the button needs. For example, aria-controls.
                          {% endcomment %}
                          
                          <button
                            data-component="button-text"
                            data-component-type="component"
                            {% if tag != blank %}data-component-tag="{{ tag }}"
                            {% endif %}class="button-text"
                            {{ attributes }}
                          >
                            {{ text }}
                          </button>
                          
                          {% liquid
                            assign attributes = attributes_088345c8
                            assign attributes_088345c8 = nil
                            assign text = text_088345c8
                            assign text_088345c8 = nil
                          %}
                          {% comment %}Component button-text:default end{% endcomment %}
                        {% endif %}
                        </div>
                    {% endif %}
                  </div>
              </div> 
              
              {% liquid
                assign product_id = product_id_6aa43093
                assign product_id_6aa43093 = nil
              %}
              {% comment %}Component product-cross-sell:default end{% endcomment %}
            {%- endif -%}
          </div>
  
          <div
            class="cart-drawer-form__footer"
            data-cart-drawer-form-total
          >
            {% if cart != empty %}
              {%- if cart.cart_level_discount_applications.size > 0 -%}
                <ul
                  class="cart-drawer-form__discounts"
                  role="list"
                  aria-label="{{ 'customer.order.discount' | t }}"
                >
                  {%- for discount in cart.cart_level_discount_applications -%}
                    <li class="cart-drawer-form__discount">
                      <span class="cart-drawer-form__discount-text">
                        <span class="cart-drawer-form__discount-title">{% comment %}Icon tag:default begin{% endcomment %}
<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M7.32 13.337 2.597 8.622a1.992 1.992 0 0 1-.584-1.402l-.015-3.233a1.974 1.974 0 0 1 .585-1.417 2.006 2.006 0 0 1 1.427-.585l3.369.024a2 2 0 0 1 1.398.584l4.654 4.646a1.995 1.995 0 0 1 0 2.82l-3.285 3.278a1.99 1.99 0 0 1-1.413.585 2.004 2.004 0 0 1-1.413-.585ZM5.652 5.682a.763.763 0 0 0 0-1.08.767.767 0 0 0-1.305.54.763.763 0 0 0 1.305.54Z" fill="currentColor"/></svg>
{% comment %}Icon tag:default end{% endcomment %} {{ discount.title }}:</span>
                      </span>
                      <span class="cart-drawer-form__discount-amount"> -{{ discount.total_allocated_amount | money_with_currency }}</span>
                    </li>
                  {%- endfor -%}
                </ul>
              {%- endif -%}
  
              <div class="cart-drawer-form__checkout-buttons show-lock-icon--{{ settings.enable_checkout_lock_icon }}">
                {% if settings.enable_checkout_lock_icon %}
                  {% capture lock_icon %}
                    {% comment %}Icon lock:default begin{% endcomment %}
                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.572 6.286H3.428c-.632 0-1.143.511-1.143 1.143v6.857c0 .63.511 1.143 1.143 1.143h9.143c.63 0 1.142-.512 1.142-1.143V7.429c0-.632-.511-1.143-1.143-1.143Zm-.572 0V4.57a4 4 0 1 0-8 0v1.715" stroke="currentColor" stroke-width="1.143" stroke-linecap="round" stroke-linejoin="round"/><path d="M8 11.429a.571.571 0 1 0 0-1.143.571.571 0 0 0 0 1.143Z" stroke="currentColor" stroke-width="1.143" stroke-linecap="round" stroke-linejoin="round"/></svg>
                    {% comment %}Icon lock:default end{% endcomment %}
                  {% endcapture %}
                {% endif %}
                {% assign price_string = cart.total_price | money_with_currency %}
                {% assign checkout_text = 'templates.cart.checkout' | t | append: ' <span>-</span> ' | append: price_string | prepend: lock_icon %}
                {% assign checkout_attributes = 'type="submit" id="checkout" name="checkout" form="cart"' %}
                {% comment %}Component button:default begin{% endcomment %}
                {% liquid
                  assign style_7b12d825 = style
                  assign style = 'primary'
                  assign size_7b12d825 = size
                  assign size = 'medium'
                  assign text_7b12d825 = text
                  assign text = checkout_text
                  assign attributes_7b12d825 = attributes
                  assign attributes = checkout_attributes
                %}
                {% comment %}
                  @param style [Required]
                    This is the style of the button: primary, secondary, tertiary, or text. Default primary.
                
                  @param size [Required]
                    This defines the size of the button: small, medium, or large. Default medium.
                
                  @param text [Required]
                    This is the text to be included in the button.
                
                  @param attributes [Optional]
                    This will include any additional attributes that the button needs. For example, aria-controls.
                {% endcomment %}
                
                <button
                  data-component="button"
                  data-component-type="component"
                  {% if tag != blank %}data-component-tag="{{ tag }}"
                  {% endif %}class="button button--{{ style }} button--{{ size }}{% if style == 'primary' or style == 'secondary' %} button--shadow{% endif %%}"
                  {{ attributes }}
                >
                  {{ text }}
                </button>
                
                {% liquid
                  assign style = style_7b12d825
                  assign style_7b12d825 = nil
                  assign size = size_7b12d825
                  assign size_7b12d825 = nil
                  assign text = text_7b12d825
                  assign text_7b12d825 = nil
                  assign attributes = attributes_7b12d825
                  assign attributes_7b12d825 = nil
                %}
                {% comment %}Component button:default end{% endcomment %}
              </div>
  
              <small class="cart-drawer-form__taxes-policies">
                {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                  {{ 'templates.cart.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
                {%- elsif cart.taxes_included -%}
                  {{ 'templates.cart.taxes_included_but_shipping_at_checkout' | t }}
                {%- elsif shop.shipping_policy.body != blank -%}
                  {{ 'templates.cart.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
                {%- else -%}
                  {{ 'templates.cart.taxes_and_shipping_at_checkout' | t }}
                {%- endif -%}
              </small>
            {% endif %}
          </div>
        {% else %}
          <div class="cart-drawer-form__empty">
            <h2 class="cart-drawer-form__empty-text">
              {{ 'templates.cart.empty' | t }}
            </h2>
            {% if settings.continue_shopping_collection != blank %}
              {% assign continue_shopping = 'templates.cart.continue_shopping' | t %}
              {% assign collection_url = collections[settings.continue_shopping_collection].url %}
              {% comment %}Component button-link:default begin{% endcomment %}
              {% liquid
                assign href_5fab48a2 = href
                assign href = collection_url
                assign style_5fab48a2 = style
                assign style = 'secondary'
                assign size_5fab48a2 = size
                assign size = 'medium'
                assign text_5fab48a2 = text
                assign text = continue_shopping
                assign attributes_5fab48a2 = attributes
                assign attributes = 'tabindex="0"'
              %}
              {% comment %}
                @param href [Required]
                  This is the anchor tag for the link button.
              
                @param style [Required]
                  This is the style of the button: primary, secondary, tertiary, or text.
              
                @param size [Required]
                  This defines the size of the button: small, medium, or large.
              
                @param text [Required]
                  This is the text to be included in the button.
              
                @param attributes [Optional]
                  Any additional attributes to add to the button-link tag.
              {% endcomment %}
              
              <a
                data-component="button-link"
                data-component-type="component"
                {% if tag != blank %}data-component-tag="{{ tag }}"
                {% endif %}class="button-link button-link--{{ style }} button-link--{{ size }}{% if style == 'primary' or style == 'secondary' %} button-link--shadow{% endif %%}"
                {% if href != blank %}
                  href="{{ href }}"
                {% endif %}
                {{ attributes }}
              >
                {{ text }}
              </a>
              
              {% liquid
                assign href = href_5fab48a2
                assign href_5fab48a2 = nil
                assign style = style_5fab48a2
                assign style_5fab48a2 = nil
                assign size = size_5fab48a2
                assign size_5fab48a2 = nil
                assign text = text_5fab48a2
                assign text_5fab48a2 = nil
                assign attributes = attributes_5fab48a2
                assign attributes_5fab48a2 = nil
              %}
              {% comment %}Component button-link:default end{% endcomment %}
            {% endif %}
          </div>
        {% endif %}
      </div>
    </div>
  </div>
  
  {% comment %}Component cart-drawer:default end{% endcomment %}
  {% comment %}Global below-main end{% endcomment %}

  <script>
    (function () {
      function handleFirstTab(e) {
        if (e.keyCode === 9) { // the "I am a keyboard user" key
          document.body.classList.add('user-is-tabbing');
          window.removeEventListener('keydown', handleFirstTab);
        }
      }
      window.addEventListener('keydown', handleFirstTab);
    })();
  </script>

  {% comment %}Inject @pixelunion/shopify-structured-data/structured-data-article begin{% endcomment %}
  {% comment %}
    Article structured data
    https://developers.google.com/search/docs/data-types/articles
  {% endcomment %}
  
  {% if template contains 'article' %}
    {%- capture article_description  -%}
      {%- if article.excerpt != blank -%}
        {{ article.excerpt | strip_html }}
      {%- else -%}
        {{ article.content | truncatewords: 100 | strip_html }}
      {%- endif -%}
    {%- endcapture -%}
  
    <script type="application/ld+json">
      {
        "@context": "http://schema.org",
        "@type": "BlogPosting",
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": "{{ shop.url }}{{ article.url }}"
        },
        "headline": {{ article.title | json }},
        {% if article.image %}
          "image": {
            "@type": "ImageObject",
            "url": {{ article.image | img_url: '800x800' | prepend: 'https:' | json }},
            "height": 800,
            "width": 800
          },
        {% endif %}
        "datePublished": {{ article.published_at | date: '%Y-%m-%dT%H:%M:%S%z' | json}},
        "dateModified": {{ article.published_at | date: '%Y-%m-%dT%H:%M:%S%z' | json}},
        "author": {
          "@type": "Person",
          "name": {{ article.author | json }}
        },
        "publisher": {
          "@type": "Organization",
          "name": {{ shop.name | json }},
          "logo": {
            "@type": "ImageObject",
            "url": {{ article.user.image | img_url: '200x200' | prepend: 'https:' | json }}
          }
        },
        "description": {{ article_description | json }}
      }
    </script>
  {% endif %}
  
  {% comment %}Inject @pixelunion/shopify-structured-data/structured-data-article end{% endcomment %}
  {% comment %}Inject @pixelunion/shopify-structured-data/structured-data-breadcrumbs begin{% endcomment %}
  {% comment %}
    Breadcrumbs
    https://developers.google.com/search/docs/data-types/breadcrumbs
  {% endcomment %}
  
  {%- if current_tags -%}
    {%- assign tag_names = current_tags | join: ', ' %}
    {% comment %}Converting an array to a handle converts it to a string{% endcomment %}
    {%- capture tag_handles -%}
      {%- for tag in current_tags -%}
        {{- tag | handle | append: '|' -}}
      {%- endfor -%}
    {%- endcapture -%}
  {%- endif -%}
  
  {% if collection.url == blank %}
    {% assign collection_url = '/collections/all' %}
  {% else %}
    {% assign collection_url = collection.url %}
  {% endif %}
  
  {% if template.name == 'product'
      or template.name == 'list-collections'
      or template.name == 'collection'
      or template.name == 'blog'
      or template.name == 'article'
      or template.name == 'search'
      or template.name == 'cart'
      or template.name == 'page'
  %}
  
    <script type="application/ld+json">
      {
        "@context": "http://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
        {% case template.name %}
          {% when 'product' %}
            {% if product.collections.size >= 1 %}
              {
                "@type": "ListItem",
                "position": 1,
                "item": {
                  "@id": "{{ shop.url }}/collections",
                  "name": {{ 'structured_data.breadcrumbs.collections' | t | json }}
                }
              },
              {
                "@type": "ListItem",
                "position": 2,
                "item": {
                  "@id": "{{ shop.url }}/collections/{{ product.collections.first.handle }}",
                  "name": {{ product.collections.first.title | json }}
                }
              },
            {% else %}
              {
                "@type": "ListItem",
                "position": 1,
                "item": {
                  "@id": "{{ shop.url }}/products",
                  "name": {{ 'structured_data.breadcrumbs.products' | t | json }}
                }
              },
            {% endif %}
            {
              "@type": "ListItem",
              "position": {% if product.collections.size >= 1 %}3{% else %}2{% endif %},
              "item": {
                "@id": "{{ shop.url }}{{ product.url | within: collection }}",
                "name": {{ product.title | json }}
              }
            }
          {% when 'list-collections' %}
            {
              "@type": "ListItem",
              "position": 1,
              "item": {
                "@id": "{{ shop.url }}/collections",
                "name": {{ 'structured_data.breadcrumbs.collections' | t | json }}
              }
            }
            {% if current_page != 1 %}
              ,
              {
                "@type": "ListItem",
                "position": 2,
                "item": {
                  "@id": "{{ shop.url }}/collections",
                  "name": {{ 'structured_data.breadcrumbs.page' | t: page: current_page | json }}
                }
              }
            {% endif %}
          {% when 'collection' %}
            {
              "@type": "ListItem",
              "position": 1,
              "item": {
                "@id": "{{ shop.url }}/collections",
                "name": {{ 'structured_data.breadcrumbs.collections' | t | json }}
              }
            },
            {
              "@type": "ListItem",
              "position": 2,
              "item": {
                "@id": "{{ shop.url }}{{ collection_url }}",
                "name": {{ collection.title | json }}
              }
            }
            {% if current_tags %}
              ,
              {
                "@type": "ListItem",
                "position": 3,
                "item": {
                  "@id": "{{ shop.url }}{{ collection_url }}/{{- tag_handles | split: '|' | join: '+' -}}",
                  "name": {{ 'structured_data.breadcrumbs.tags_html' | t: tags: tag_names | json }}
                }
              }
            {% endif %}
            {% if current_page != 1 %}
              {% if current_tags %}
                {% assign position = 4 %}
              {% else %}
                {% assign position = 3 %}
              {% endif %}
              ,
              {
                "@type": "ListItem",
                "position": {{ position }},
                "item": {
                  "@id": "{{ shop.url }}/collections?page={{ current_page }}",
                  "name": {{ 'structured_data.breadcrumbs.page' | t: page: current_page | json }}
                }
              }
            {% endif %}
          {% when 'blog' or 'article' %}
            {
              "@type": "ListItem",
              "position": 1,
              "item": {
                "@id": "{{ shop.url }}{{ blog.url }}",
                "name": {{ blog.title | json }}
              }
            }
            {% if template.name == 'article' %}
              ,
              {
                "@type": "ListItem",
                "position": 2,
                "item": {
                  "@id": "{{ shop.url }}{{ article.url }}",
                  "name": {{ article.title | json }}
                }
              }
            {% elsif current_tags %}
              ,
              {
                "@type": "ListItem",
                "position": 2,
                "item": {
                  "@id": "{{ shop.url }}{{ blog.url }}/tagged/{{- tag_handles | split: '|' | join: '+' -}}",
                  "name": {{ 'structured_data.breadcrumbs.tags_html' | t: tags: tag_names | json }}
                }
              }
            {% endif %}
            {% if current_page != 1 %}
              {% if current_tags %}
                {% assign position = 3 %}
                {%- capture url -%}
                  {{ shop.url }}{{ blog.url }}/tagged/{{ tag_handles | split: '|' | join: '+' }}?page={{ current_page }}
                {%- endcapture -%}
              {% else %}
                {% assign position = 2 %}
                  {%- capture url -%}
                  {{ shop.url }}{{ blog.url }}?page={{ current_page }}
                {%- endcapture -%}
              {% endif %}
              ,
              {
                "@type": "ListItem",
                "position": {{ position }},
                "item": {
                  "@id": "{{ url }}",
                  "name": {{ 'structured_data.breadcrumbs.page' | t: page: current_page | json }}
                }
              }
            {% endif %}
          {% when 'search' %}
            {
              "@type": "ListItem",
              "position": 1,
              "item": {
                "@id": "{{ shop.url }}/search",
                "name": {{ 'structured_data.breadcrumbs.search' | t | json }}
              }
            }
            {% if search.performed %}
            ,
              {
                "@type": "ListItem",
                "position": 2,
                "item": {
                  "@id": "{{ shop.url }}/search?q={{ search.terms }}",
                  "name": {{ search.terms | json }}
                }
              }
              {% if current_page != 1 %}
              ,
                {
                  "@type": "ListItem",
                  "position": 3,
                  "item": {
                    "@id": "{{ shop.url }}/search?page={{ current_page }}&q={{ search.terms }}",
                    "name": {{ 'structured_data.breadcrumbs.page' | t: page: current_page | json }}
                  }
                }
              {% endif %}
            {% endif %}
          {% when 'cart' %}
            {
              "@type": "ListItem",
              "position": 1,
              "item": {
                "@id": "{{ shop.url }}/cart",
                "name": {{ 'structured_data.breadcrumbs.cart' | t | json }}
              }
            }
          {% when 'page' %}
            {
              "@type": "ListItem",
              "position": 1,
              "item": {
                "@id": "{{ page.url }}",
                "name": {{ page.title | json }}
              }
            }
          {% else %}
          {% endcase %}
        ]
      }
    </script>
  {% endif %}
  
  {% comment %}Inject @pixelunion/shopify-structured-data/structured-data-breadcrumbs end{% endcomment %}
  {% comment %}Inject @pixelunion/shopify-structured-data/structured-data-product begin{% endcomment %}
  {% comment %}
    Product structured data
    https://developers.google.com/search/docs/data-types/products
  {% endcomment %}
  
  {% if template contains 'product' %}
    {% assign selected_variant = product.selected_or_first_available_variant | default: product.variants.first %}
    {% assign product_image = selected_variant.featured_image | default: product.featured_image %}
    {%- capture product_name -%}
      {{ product.title }}
      {%- if selected_variant.title != 'Default Title' and selected_variant.option1 == 'Default Title' -%}
        - {{ selected_variant.title }}
      {%- endif -%}
    {%- endcapture -%}
  
    {%- assign now = 'now' | date: '%Y-%m-%d' | split: '-' -%}
    {% capture year_from_now %}{{ now[0] | plus: 1 }}-{{ now[1] }}-{{ now[2] | at_most: 28 }}{% endcapture %}
  
    <script type="application/ld+json">
    {
      "@context": "http://schema.org/",
      "@type": "Product",
      "name": {{ product_name | strip_newlines | json }},
      "image": {{ product_image | img_url: '1024x1024' | prepend: 'https:' | json }},
      {% if product.description != blank %}
        "description": {{ product.description | json }},
      {% endif %}
      {% if product.vendor %}
        "brand": {
          "@type": "Brand",
          "name": {{ product.vendor | json }}
        },
      {% endif %}
      {% if selected_variant.sku != blank %}
        "sku": {{ selected_variant.sku | json }},
      {% endif %}
      {% if selected_variant.barcode != blank %}
        "mpn": {{ selected_variant.barcode | json }},
      {% endif %}
      {% if product.metafields.reviews.rating.value != blank %}
        "review": {
          "@type": "Review",
            "reviewRating": {
            "@type": "Rating",
            "ratingValue": "{{ product.metafields.reviews.rating.value }}"
          }
        },
        "aggregateRating": {
          "@type": "AggregateRating",
          "ratingValue": "{{ product.metafields.reviews.rating.value }}",
          "reviewCount": "{{ product.metafields.reviews.rating_count }}"
        },
      {% endif %}
      "offers": {
        "@type": "Offer",
        "priceCurrency": {{ cart.currency.iso_code | json }},
        "price": {{ selected_variant.price | divided_by: 100.0 | json }},
        "availability": "http://schema.org/{% if selected_variant.available %}InStock{% else %}OutOfStock{% endif %}",
        "url": "{{ shop.url }}{{ selected_variant.url }}",
        "seller": {
          "@type": "Organization",
          "name": {{ shop.name | json }}
        },
        "priceValidUntil": {{ year_from_now | json }}
      }
    }
    </script>
  {% endif %}
  
  {% comment %}Inject @pixelunion/shopify-structured-data/structured-data-product end{% endcomment %}
  {% comment %}Inject @pixelunion/shopify-structured-data/structured-data-website begin{% endcomment %}
  {% comment %}
    Store information
    https://developers.google.com/search/docs/data-types/sitename
  {% endcomment %}
  
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": "{{ shop.name }}",
      "url": "{{ shop.url }}"
    }
  </script>
  {% comment %}Inject @pixelunion/shopify-structured-data/structured-data-website end{% endcomment %}
</body>

</html>